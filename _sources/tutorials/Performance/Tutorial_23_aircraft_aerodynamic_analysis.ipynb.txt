{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tutorial 23 - Aircraft Aerodynamic Analysis\n",
    "Welcome to this tutorial on performing aerodynamic analysis of a turbofan aircraft using RCAIDE. This guide will walk you through the code, explain its components, and highlight where modifications can be made to customize the simulation for different vehicle designs.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Header and Imports\n",
    "\n",
    "\n",
    "The **Imports** section is divided into two parts: general-purpose Python libraries and simulation-specific libraries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-10T19:14:23.224905Z",
     "iopub.status.busy": "2025-04-10T19:14:23.224703Z",
     "iopub.status.idle": "2025-04-10T19:14:23.579396Z",
     "shell.execute_reply": "2025-04-10T19:14:23.578747Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib.cm as cm   \n",
    "import numpy as np\n",
    "from copy import deepcopy\n",
    "import matplotlib.pyplot  as plt\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. RCAIDE Imports\n",
    "\n",
    "The **RCAIDE Imports** section includes the core modules needed for the simulation. These libraries provide specialized classes and tools for building, analyzing, and running aircraft models.\n",
    "\n",
    "### Key Imports:\n",
    "\n",
    "1. **RCAIDE**: The core package is imported directly. This approach allows us to access specific classes and methods from RCAIDE without repeatedly importing individual components at the top of the script.\n",
    "\n",
    "2. **`Units` Module**: The Units module is a standardized way to handle unit conversions within RCAIDE. It ensures consistent units across all inputs and outputs, reducing the likelihood of conversion errors."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-10T19:14:23.582100Z",
     "iopub.status.busy": "2025-04-10T19:14:23.581494Z",
     "iopub.status.idle": "2025-04-10T19:14:24.503440Z",
     "shell.execute_reply": "2025-04-10T19:14:24.502853Z"
    }
   },
   "outputs": [],
   "source": [
    "import RCAIDE\n",
    "from RCAIDE.Framework.Core import Units , Data   \n",
    "from RCAIDE.Library.Methods.Powertrain.Propulsors.Turbofan          import design_turbofan\n",
    "from RCAIDE.Library.Methods.Performance                            import aircraft_aerodynamic_analysis \n",
    "from RCAIDE.Library.Methods.Geometry.Planform                      import segment_properties \n",
    "from RCAIDE.Library.Plots                                          import *        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Vehicle Setup\n",
    "\n",
    "The **`vehicle_setup`** function defines the baseline configuration of the aircraft. This section builds the vehicle step-by-step by specifying its components, geometric properties, and high-level parameters.\n",
    "\n",
    "A detailed description of the vehicle setup is provided in the [Tutorial 1](tutorial_01_turbofan_aircraft.ipynb)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-10T19:14:24.506326Z",
     "iopub.status.busy": "2025-04-10T19:14:24.505975Z",
     "iopub.status.idle": "2025-04-10T19:14:24.545774Z",
     "shell.execute_reply": "2025-04-10T19:14:24.545192Z"
    }
   },
   "outputs": [],
   "source": [
    "def vehicle_setup(): \n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Initialize the Vehicle\n",
    "    # ------------------------------------------------------------------    \n",
    "    \n",
    "    vehicle = RCAIDE.Vehicle()\n",
    "    vehicle.tag = 'Boeing_737-800'\n",
    "    # ################################################# Vehicle-level Properties #################################################   \n",
    "    vehicle.mass_properties.max_takeoff               = 79015.8 * Units.kilogram  \n",
    "    vehicle.mass_properties.takeoff                   = 79015.8 * Units.kilogram    \n",
    "    vehicle.mass_properties.operating_empty           = 62746.4 * Units.kilogram  \n",
    "    vehicle.mass_properties.max_zero_fuel             = 62732.0 * Units.kilogram \n",
    "    vehicle.mass_properties.cargo                     = 10000.  * Units.kilogram  \n",
    "    vehicle.mass_properties.center_of_gravity         = [[21,0, 0, 0]]\n",
    "    vehicle.flight_envelope.ultimate_load             = 3.75\n",
    "    vehicle.flight_envelope.positive_limit_load       = 2.5 \n",
    "    vehicle.flight_envelope.design_mach_number        = 0.78 \n",
    "    vehicle.flight_envelope.design_cruise_altitude    = 35000*Units.feet\n",
    "    vehicle.flight_envelope.design_range              = 3500 * Units.nmi\n",
    "    vehicle.reference_area                            = 124.862 * Units['meters**2']   \n",
    "    vehicle.passengers                                = 170\n",
    "    vehicle.systems.control                           = \"fully powered\" \n",
    "    vehicle.systems.accessories                       = \"medium range\"\n",
    "    \n",
    "     # ################################################# Landing Gear #############################################################   \n",
    "    # ------------------------------------------------------------------        \n",
    "    #  Landing Gear\n",
    "    # ------------------------------------------------------------------  \n",
    "    main_gear               = RCAIDE.Library.Components.Landing_Gear.Main_Landing_Gear()\n",
    "    main_gear.tire_diameter = 1.12000 * Units.m\n",
    "    main_gear.strut_length  = 1.8 * Units.m \n",
    "    main_gear.units         = 2    # Number of main landing gear\n",
    "    main_gear.wheels        = 2    # Number of wheels on the main landing gear\n",
    "    vehicle.append_component(main_gear)  \n",
    "\n",
    "    nose_gear               = RCAIDE.Library.Components.Landing_Gear.Nose_Landing_Gear()       \n",
    "    nose_gear.tire_diameter = 0.6858 * Units.m\n",
    "    nose_gear.units         = 1    # Number of nose landing gear\n",
    "    nose_gear.wheels        = 2    # Number of wheels on the nose landing gear\n",
    "    nose_gear.strut_length  = 1.3 * Units.m \n",
    "    vehicle.append_component(nose_gear)\n",
    "    # ################################################# Wings ##################################################################### \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Main Wing\n",
    "    # ------------------------------------------------------------------\n",
    " \n",
    "    wing                                  = RCAIDE.Library.Components.Wings.Main_Wing()\n",
    "    wing.tag                              = 'main_wing' \n",
    "    wing.aspect_ratio                     = 10.18\n",
    "    wing.sweeps.quarter_chord             = 25 * Units.deg\n",
    "    wing.thickness_to_chord               = 0.1\n",
    "    wing.taper                            = 0.1 \n",
    "    wing.spans.projected                  = 34.32 \n",
    "    wing.chords.root                      = 7.760 * Units.meter\n",
    "    wing.chords.tip                       = 0.782 * Units.meter\n",
    "    wing.chords.mean_aerodynamic          = 4.235 * Units.meter \n",
    "    wing.areas.reference                  = 124.862\n",
    "    wing.areas.wetted                     = 225.08 \n",
    "    wing.twists.root                      = 4.0 * Units.degrees\n",
    "    wing.twists.tip                       = 0.0 * Units.degrees \n",
    "    wing.origin                           = [[13.61,0,-0.5]]\n",
    "    wing.aerodynamic_center               = [0,0,0] \n",
    "    wing.vertical                         = False\n",
    "    wing.symmetric                        = True\n",
    "    wing.high_lift                        = True \n",
    "    wing.dynamic_pressure_ratio           = 1.0\n",
    "    # Wing Segments\n",
    "    root_airfoil                          = RCAIDE.Library.Components.Airfoils.Airfoil()\n",
    "    ospath                                = os.path.abspath(os.path.join('Notebook'))\n",
    "    separator                             = os.path.sep\n",
    "    rel_path = os.path.dirname(ospath) + separator + '..' + separator + '..' + separator + 'VnV' + separator + 'Vehicles' + separator\n",
    "    root_airfoil.coordinate_file          = rel_path  + 'Airfoils' + separator + 'B737a.txt'\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'Root'\n",
    "    segment.percent_span_location         = 0.0\n",
    "    segment.twist                         = 4. * Units.deg\n",
    "    segment.root_chord_percent            = 1.\n",
    "    segment.thickness_to_chord            = 0.1\n",
    "    segment.dihedral_outboard             = 2.5 * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 28.225 * Units.degrees\n",
    "    segment.thickness_to_chord            = .1\n",
    "    segment.append_airfoil(root_airfoil)\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    yehudi_airfoil                        = RCAIDE.Library.Components.Airfoils.Airfoil()\n",
    "    yehudi_airfoil.coordinate_file        = rel_path+ 'Airfoils' + separator + 'B737b.txt'\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'Yehudi'\n",
    "    segment.percent_span_location         = 0.324\n",
    "    segment.twist                         = 0.047193 * Units.deg\n",
    "    segment.root_chord_percent            = 0.5\n",
    "    segment.thickness_to_chord            = 0.1\n",
    "    segment.dihedral_outboard             = 5.5 * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 25. * Units.degrees\n",
    "    segment.thickness_to_chord            = .1\n",
    "    segment.append_airfoil(yehudi_airfoil)\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    mid_airfoil                           = RCAIDE.Library.Components.Airfoils.Airfoil()\n",
    "    mid_airfoil.coordinate_file           = rel_path + 'Airfoils' + separator + 'B737c.txt'\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'Section_2'\n",
    "    segment.percent_span_location         = 0.963\n",
    "    segment.twist                         = 0.00258 * Units.deg\n",
    "    segment.root_chord_percent            = 0.220\n",
    "    segment.thickness_to_chord            = 0.1\n",
    "    segment.dihedral_outboard             = 5.5 * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 56.75 * Units.degrees\n",
    "    segment.thickness_to_chord            = .1\n",
    "    segment.append_airfoil(mid_airfoil)\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    tip_airfoil                           =  RCAIDE.Library.Components.Airfoils.Airfoil()\n",
    "    tip_airfoil.coordinate_file           = rel_path + 'Airfoils' + separator + 'B737d.txt'\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'Tip'\n",
    "    segment.percent_span_location         = 1.\n",
    "    segment.twist                         = 0. * Units.degrees\n",
    "    segment.root_chord_percent            = 0.10077\n",
    "    segment.thickness_to_chord            = 0.1\n",
    "    segment.dihedral_outboard             = 0.\n",
    "    segment.sweeps.quarter_chord          = 0.\n",
    "    segment.thickness_to_chord            = .1\n",
    "    segment.append_airfoil(tip_airfoil)\n",
    "    wing.append_segment(segment)\n",
    "    \n",
    "    # Fill out more segment properties automatically\n",
    "    wing = segment_properties(wing)    \n",
    "    # control surfaces -------------------------------------------\n",
    "    slat                          = RCAIDE.Library.Components.Wings.Control_Surfaces.Slat()\n",
    "    slat.tag                      = 'slat'\n",
    "    slat.span_fraction_start      = 0.2\n",
    "    slat.span_fraction_end        = 0.963\n",
    "    slat.deflection               = 0.0 * Units.degrees\n",
    "    slat.chord_fraction           = 0.075\n",
    "    wing.append_control_surface(slat)\n",
    "\n",
    "    flap                          = RCAIDE.Library.Components.Wings.Control_Surfaces.Flap()\n",
    "    flap.tag                      = 'flap'\n",
    "    flap.span_fraction_start      = 0.2\n",
    "    flap.span_fraction_end        = 0.7\n",
    "    flap.deflection               = 0.0 * Units.degrees\n",
    "    flap.configuration_type       = 'double_slotted'\n",
    "    flap.chord_fraction           = 0.30\n",
    "    wing.append_control_surface(flap)\n",
    "\n",
    "    aileron                       = RCAIDE.Library.Components.Wings.Control_Surfaces.Aileron()\n",
    "    aileron.tag                   = 'aileron'\n",
    "    aileron.span_fraction_start   = 0.7\n",
    "    aileron.span_fraction_end     = 0.963\n",
    "    aileron.deflection            = 0.0 * Units.degrees\n",
    "    aileron.chord_fraction        = 0.16\n",
    "    wing.append_control_surface(aileron)\n",
    "\n",
    "    # add to vehicle\n",
    "    vehicle.append_component(wing)\n",
    "     # ------------------------------------------------------------------\n",
    "    #  Horizontal Stabilizer\n",
    "    # ------------------------------------------------------------------\n",
    "\n",
    "    wing     = RCAIDE.Library.Components.Wings.Horizontal_Tail()\n",
    "    wing.tag = 'horizontal_stabilizer'\n",
    "\n",
    "    wing.aspect_ratio            = 4.99\n",
    "    wing.sweeps.quarter_chord    = 28.2250 * Units.deg  \n",
    "    wing.thickness_to_chord      = 0.08\n",
    "    wing.taper                   = 0.3333  \n",
    "    wing.spans.projected         = 14.4 \n",
    "    wing.chords.root             = 4.2731 \n",
    "    wing.chords.tip              = 1.4243 \n",
    "    wing.chords.mean_aerodynamic = 8.0 \n",
    "    wing.areas.reference         = 41.49\n",
    "    wing.areas.exposed           = 59.354    # Exposed area of the horizontal tail\n",
    "    wing.areas.wetted            = 71.81     # Wetted area of the horizontal tail\n",
    "    wing.twists.root             = 3.0 * Units.degrees\n",
    "    wing.twists.tip              = 3.0 * Units.degrees \n",
    "    wing.origin                  = [[33.02,0,1.466]]\n",
    "    wing.aerodynamic_center      = [0,0,0] \n",
    "    wing.vertical                = False\n",
    "    wing.symmetric               = True \n",
    "    wing.dynamic_pressure_ratio  = 0.9\n",
    "\n",
    "\n",
    "    # Wing Segments\n",
    "    segment                        = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                    = 'root_segment'\n",
    "    segment.percent_span_location  = 0.0\n",
    "    segment.twist                  = 0. * Units.deg\n",
    "    segment.root_chord_percent     = 1.0\n",
    "    segment.dihedral_outboard      = 8.63 * Units.degrees\n",
    "    segment.sweeps.quarter_chord   = 28.2250  * Units.degrees \n",
    "    segment.thickness_to_chord     = .1\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    segment                        = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                    = 'tip_segment'\n",
    "    segment.percent_span_location  = 1.\n",
    "    segment.twist                  = 0. * Units.deg\n",
    "    segment.root_chord_percent     = 0.3333               \n",
    "    segment.dihedral_outboard      = 0 * Units.degrees\n",
    "    segment.sweeps.quarter_chord   = 0 * Units.degrees  \n",
    "    segment.thickness_to_chord     = .1\n",
    "    wing.append_segment(segment)\n",
    "    \n",
    "    # Fill out more segment properties automatically\n",
    "    wing = segment_properties(wing)        \n",
    "\n",
    "    # control surfaces -------------------------------------------\n",
    "    elevator                       = RCAIDE.Library.Components.Wings.Control_Surfaces.Elevator()\n",
    "    elevator.tag                   = 'elevator'\n",
    "    elevator.span_fraction_start   = 0.09\n",
    "    elevator.span_fraction_end     = 0.92\n",
    "    elevator.deflection            = 0.0  * Units.deg\n",
    "    elevator.chord_fraction        = 0.3\n",
    "    wing.append_control_surface(elevator)\n",
    "\n",
    "    # add to vehicle\n",
    "    vehicle.append_component(wing)\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Vertical Stabilizer\n",
    "    # ------------------------------------------------------------------\n",
    "\n",
    "    wing = RCAIDE.Library.Components.Wings.Vertical_Tail()\n",
    "    wing.tag = 'vertical_stabilizer'\n",
    "\n",
    "    wing.aspect_ratio            = 1.98865\n",
    "    wing.sweeps.quarter_chord    = 31.2  * Units.deg   \n",
    "    wing.thickness_to_chord      = 0.08\n",
    "    wing.taper                   = 0.1183\n",
    "\n",
    "    wing.spans.projected         = 8.33\n",
    "    wing.total_length            = wing.spans.projected \n",
    "    \n",
    "    wing.chords.root             = 10.1 \n",
    "    wing.chords.tip              = 1.20 \n",
    "    wing.chords.mean_aerodynamic = 4.0\n",
    "\n",
    "    wing.areas.reference         = 34.89\n",
    "    wing.areas.wetted            = 57.25 \n",
    "    \n",
    "    wing.twists.root             = 0.0 * Units.degrees\n",
    "    wing.twists.tip              = 0.0 * Units.degrees\n",
    "\n",
    "    wing.origin                  = [[26.944,0,1.54]]\n",
    "    wing.aerodynamic_center      = [0,0,0]\n",
    "\n",
    "    wing.vertical                = True\n",
    "    wing.symmetric               = False\n",
    "    wing.t_tail                  = False\n",
    "\n",
    "    wing.dynamic_pressure_ratio  = 1.0\n",
    "\n",
    "\n",
    "    # Wing Segments\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'root'\n",
    "    segment.percent_span_location         = 0.0\n",
    "    segment.twist                         = 0. * Units.deg\n",
    "    segment.root_chord_percent            = 1.\n",
    "    segment.dihedral_outboard             = 0 * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 61.485 * Units.degrees  \n",
    "    segment.thickness_to_chord            = .1\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'segment_1'\n",
    "    segment.percent_span_location         = 0.2962\n",
    "    segment.twist                         = 0. * Units.deg\n",
    "    segment.root_chord_percent            = 0.45\n",
    "    segment.dihedral_outboard             = 0. * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 31.2 * Units.degrees   \n",
    "    segment.thickness_to_chord            = .1\n",
    "    wing.append_segment(segment)\n",
    "\n",
    "    segment                               = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                           = 'segment_2'\n",
    "    segment.percent_span_location         = 1.0\n",
    "    segment.twist                         = 0. * Units.deg\n",
    "    segment.root_chord_percent            = 0.1183 \n",
    "    segment.dihedral_outboard             = 0.0 * Units.degrees\n",
    "    segment.sweeps.quarter_chord          = 0.0    \n",
    "    segment.thickness_to_chord            = .1  \n",
    "    wing.append_segment(segment)\n",
    "    \n",
    "    \n",
    "    # Fill out more segment properties automatically\n",
    "    wing = segment_properties(wing)        \n",
    "\n",
    "    # add to vehicle\n",
    "    vehicle.append_component(wing)\n",
    "     # ################################################# Fuselage ################################################################ \n",
    "    \n",
    "    fuselage                                    = RCAIDE.Library.Components.Fuselages.Tube_Fuselage() \n",
    "    fuselage.number_coach_seats                 = vehicle.passengers \n",
    "    fuselage.seats_abreast                      = 6\n",
    "    fuselage.seat_pitch                         = 1     * Units.meter \n",
    "    fuselage.fineness.nose                      = 1.6\n",
    "    fuselage.fineness.tail                      = 2. \n",
    "    fuselage.lengths.nose                       = 6.4   * Units.meter\n",
    "    fuselage.lengths.tail                       = 8.0   * Units.meter\n",
    "    fuselage.lengths.total                      = 38.02 * Units.meter  \n",
    "    fuselage.lengths.fore_space                 = 6.    * Units.meter\n",
    "    fuselage.lengths.aft_space                  = 5.    * Units.meter\n",
    "    fuselage.width                              = 3.74  * Units.meter\n",
    "    fuselage.heights.maximum                    = 3.74  * Units.meter\n",
    "    fuselage.effective_diameter                 = 3.74     * Units.meter\n",
    "    fuselage.areas.side_projected               = 142.1948 * Units['meters**2'] \n",
    "    fuselage.areas.wetted                       = 446.718  * Units['meters**2'] \n",
    "    fuselage.areas.front_projected              = 12.57    * Units['meters**2']  \n",
    "    fuselage.differential_pressure              = 5.0e4 * Units.pascal \n",
    "    fuselage.heights.at_quarter_length          = 3.74 * Units.meter\n",
    "    fuselage.heights.at_three_quarters_length   = 3.65 * Units.meter\n",
    "    fuselage.heights.at_wing_root_quarter_chord = 3.74 * Units.meter\n",
    "\n",
    "    # Segment  \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()  \n",
    "    segment.tag                                 = 'segment_0'    \n",
    "    segment.percent_x_location                  = 0.0000\n",
    "    segment.percent_z_location                  = -0.00144 \n",
    "    segment.height                              = 0.0100 \n",
    "    segment.width                               = 0.0100  \n",
    "    fuselage.segments.append(segment)   \n",
    "    \n",
    "    # Segment  \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_1'    \n",
    "    segment.percent_x_location                  = 0.00576 \n",
    "    segment.percent_z_location                  = -0.00144 \n",
    "    segment.height                              = 0.7500\n",
    "    segment.width                               = 0.6500\n",
    "    fuselage.segments.append(segment)   \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_2'   \n",
    "    segment.percent_x_location                  = 0.02017 \n",
    "    segment.percent_z_location                  = 0.00000 \n",
    "    segment.height                              = 1.52783 \n",
    "    segment.width                               = 1.20043 \n",
    "    fuselage.segments.append(segment)      \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_3'   \n",
    "    segment.percent_x_location                  = 0.03170 \n",
    "    segment.percent_z_location                  = 0.00000 \n",
    "    segment.height                              = 1.96435 \n",
    "    segment.width                               = 1.52783 \n",
    "    fuselage.segments.append(segment)   \n",
    "\n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_4'   \n",
    "    segment.percent_x_location                  = 0.04899 \t\n",
    "    segment.percent_z_location                  = 0.00431 \n",
    "    segment.height                              = 2.72826 \n",
    "    segment.width                               = 1.96435 \n",
    "    fuselage.segments.append(segment)   \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_5'   \n",
    "    segment.percent_x_location                  = 0.07781 \n",
    "    segment.percent_z_location                  = 0.00861 \n",
    "    segment.height                              = 3.49217 \n",
    "    segment.width                               = 2.61913 \n",
    "    fuselage.segments.append(segment)     \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_6'   \n",
    "    segment.percent_x_location                  = 0.10375 \n",
    "    segment.percent_z_location                  = 0.01005 \n",
    "    segment.height                              = 3.70130 \n",
    "    segment.width                               = 3.05565 \n",
    "    fuselage.segments.append(segment)             \n",
    "     \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_7'   \n",
    "    segment.percent_x_location                  = 0.16427 \n",
    "    segment.percent_z_location                  = 0.01148 \n",
    "    segment.height                              = 3.92870 \n",
    "    segment.width                               = 3.71043 \n",
    "    fuselage.segments.append(segment)    \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_8'   \n",
    "    segment.percent_x_location                  = 0.22478 \n",
    "    segment.percent_z_location                  = 0.01148 \n",
    "    segment.height                              = 3.92870 \n",
    "    segment.width                               = 3.92870 \n",
    "    fuselage.segments.append(segment)   \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_9'     \n",
    "    segment.percent_x_location                  = 0.69164 \n",
    "    segment.percent_z_location                  = 0.01292\n",
    "    segment.height                              = 3.81957\n",
    "    segment.width                               = 3.81957\n",
    "    fuselage.segments.append(segment)     \n",
    "        \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_10'     \n",
    "    segment.percent_x_location                  = 0.71758 \n",
    "    segment.percent_z_location                  = 0.01292\n",
    "    segment.height                              = 3.81957\n",
    "    segment.width                               = 3.81957\n",
    "    fuselage.segments.append(segment)   \n",
    "        \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_11'     \n",
    "    segment.percent_x_location                  = 0.78098 \n",
    "    segment.percent_z_location                  = 0.01722\n",
    "    segment.height                              = 3.49217\n",
    "    segment.width                               = 3.71043\n",
    "    fuselage.segments.append(segment)    \n",
    "        \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_12'     \n",
    "    segment.percent_x_location                  = 0.85303\n",
    "    segment.percent_z_location                  = 0.02296\n",
    "    segment.height                              = 3.05565\n",
    "    segment.width                               = 3.16478\n",
    "    fuselage.segments.append(segment)             \n",
    "        \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_13'     \n",
    "    segment.percent_x_location                  = 0.91931 \n",
    "    segment.percent_z_location                  = 0.03157\n",
    "    segment.height                              = 2.40087\n",
    "    segment.width                               = 1.96435\n",
    "    fuselage.segments.append(segment)               \n",
    "        \n",
    "    # Segment                                   \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_14'     \n",
    "    segment.percent_x_location                  = 1.00 \n",
    "    segment.percent_z_location                  = 0.04593\n",
    "    segment.height                              = 1.09130\n",
    "    segment.width                               = 0.21826\n",
    "    fuselage.segments.append(segment)       \n",
    "    \n",
    "    # add to vehicle\n",
    "    vehicle.append_component(fuselage)\n",
    "\n",
    "    # ################################################# Energy Network #######################################################          \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    #  Turbofan Network\n",
    "    #-------------------------------------------------------------------------------------------------------------------------   \n",
    "    net                                         = RCAIDE.Framework.Networks.Fuel() \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    # Fuel Distrubition Line \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    fuel_line                                   = RCAIDE.Library.Components.Powertrain.Distributors.Fuel_Line()  \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Propulsor: Starboard Propulsor\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------         \n",
    "    turbofan                                    = RCAIDE.Library.Components.Powertrain.Propulsors.Turbofan() \n",
    "    turbofan.tag                                = 'starboard_propulsor'\n",
    "    turbofan.active_fuel_tanks                  = ['fuel_tank']   \n",
    "    turbofan.origin                             = [[13.72, 4.86,-1.1]] \n",
    "    turbofan.engine_length                      = 2.71     \n",
    "    turbofan.bypass_ratio                       = 5.4    \n",
    "    turbofan.design_altitude                    = 35000.0*Units.ft\n",
    "    turbofan.design_mach_number                 = 0.78   \n",
    "    turbofan.design_thrust                      = 35000.0* Units.N \n",
    "             \n",
    "    # fan                \n",
    "    fan                                         = RCAIDE.Library.Components.Powertrain.Converters.Fan()   \n",
    "    fan.tag                                     = 'fan'\n",
    "    fan.polytropic_efficiency                   = 0.93\n",
    "    fan.pressure_ratio                          = 1.7   \n",
    "    turbofan.fan                                = fan        \n",
    "                   \n",
    "    # working fluid                   \n",
    "    turbofan.working_fluid                      = RCAIDE.Library.Attributes.Gases.Air() \n",
    "    ram                                         = RCAIDE.Library.Components.Powertrain.Converters.Ram()\n",
    "    ram.tag                                     = 'ram' \n",
    "    turbofan.ram                                = ram \n",
    "          \n",
    "    # inlet nozzle          \n",
    "    inlet_nozzle                                = RCAIDE.Library.Components.Powertrain.Converters.Compression_Nozzle()\n",
    "    inlet_nozzle.tag                            = 'inlet nozzle'\n",
    "    inlet_nozzle.polytropic_efficiency          = 0.98\n",
    "    inlet_nozzle.pressure_ratio                 = 0.98 \n",
    "    turbofan.inlet_nozzle                       = inlet_nozzle \n",
    "\n",
    "    # low pressure compressor    \n",
    "    low_pressure_compressor                       = RCAIDE.Library.Components.Powertrain.Converters.Compressor()    \n",
    "    low_pressure_compressor.tag                   = 'lpc'\n",
    "    low_pressure_compressor.polytropic_efficiency = 0.91\n",
    "    low_pressure_compressor.pressure_ratio        = 1.9   \n",
    "    turbofan.low_pressure_compressor              = low_pressure_compressor\n",
    "\n",
    "    # high pressure compressor  \n",
    "    high_pressure_compressor                       = RCAIDE.Library.Components.Powertrain.Converters.Compressor()    \n",
    "    high_pressure_compressor.tag                   = 'hpc'\n",
    "    high_pressure_compressor.polytropic_efficiency = 0.91\n",
    "    high_pressure_compressor.pressure_ratio        = 10.0    \n",
    "    turbofan.high_pressure_compressor              = high_pressure_compressor\n",
    "\n",
    "    # low pressure turbine  \n",
    "    low_pressure_turbine                           = RCAIDE.Library.Components.Powertrain.Converters.Turbine()   \n",
    "    low_pressure_turbine.tag                       ='lpt'\n",
    "    low_pressure_turbine.mechanical_efficiency     = 0.99\n",
    "    low_pressure_turbine.polytropic_efficiency     = 0.93 \n",
    "    turbofan.low_pressure_turbine                  = low_pressure_turbine\n",
    "   \n",
    "    # high pressure turbine     \n",
    "    high_pressure_turbine                          = RCAIDE.Library.Components.Powertrain.Converters.Turbine()   \n",
    "    high_pressure_turbine.tag                      ='hpt'\n",
    "    high_pressure_turbine.mechanical_efficiency    = 0.99\n",
    "    high_pressure_turbine.polytropic_efficiency    = 0.93 \n",
    "    turbofan.high_pressure_turbine                 = high_pressure_turbine \n",
    "\n",
    "    # combustor  \n",
    "    combustor                                      = RCAIDE.Library.Components.Powertrain.Converters.Combustor()   \n",
    "    combustor.tag                                  = 'Comb'\n",
    "    combustor.efficiency                           = 0.99 \n",
    "    combustor.alphac                               = 1.0     \n",
    "    combustor.turbine_inlet_temperature            = 1500\n",
    "    combustor.pressure_ratio                       = 0.95\n",
    "    combustor.fuel_data                            = RCAIDE.Library.Attributes.Propellants.Jet_A1()  \n",
    "    turbofan.combustor                             = combustor\n",
    "\n",
    "    # core nozzle\n",
    "    core_nozzle                                    = RCAIDE.Library.Components.Powertrain.Converters.Expansion_Nozzle()   \n",
    "    core_nozzle.tag                                = 'core nozzle'\n",
    "    core_nozzle.polytropic_efficiency              = 0.95\n",
    "    core_nozzle.pressure_ratio                     = 0.99  \n",
    "    turbofan.core_nozzle                           = core_nozzle\n",
    "             \n",
    "    # fan nozzle             \n",
    "    fan_nozzle                                     = RCAIDE.Library.Components.Powertrain.Converters.Expansion_Nozzle()   \n",
    "    fan_nozzle.tag                                 = 'fan nozzle'\n",
    "    fan_nozzle.polytropic_efficiency               = 0.95\n",
    "    fan_nozzle.pressure_ratio                      = 0.99 \n",
    "    turbofan.fan_nozzle                            = fan_nozzle \n",
    "    \n",
    "    # design turbofan\n",
    "    design_turbofan(turbofan)  \n",
    "    # append propulsor to distribution line  \n",
    "   \n",
    " \n",
    "    # Nacelle \n",
    "    nacelle                                     = RCAIDE.Library.Components.Nacelles.Body_of_Revolution_Nacelle()\n",
    "    nacelle.diameter                            = 2.05\n",
    "    nacelle.length                              = 2.71\n",
    "    nacelle.tag                                 = 'nacelle_1'\n",
    "    nacelle.inlet_diameter                      = 2.0\n",
    "    nacelle.origin                              = [[13.5,4.38,-1.5]] \n",
    "    nacelle.areas.wetted                        = 1.1*np.pi*nacelle.diameter*nacelle.length \n",
    "    nacelle_airfoil                             = RCAIDE.Library.Components.Airfoils.NACA_4_Series_Airfoil()\n",
    "    nacelle_airfoil.NACA_4_Series_code          = '2410'\n",
    "    nacelle.append_airfoil(nacelle_airfoil)  \n",
    "    turbofan.nacelle                            = nacelle\n",
    "\n",
    "    # append propulsor to network    \n",
    "    net.propulsors.append(turbofan)  \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Propulsor: Port Propulsor\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------      \n",
    "    # copy turbofan\n",
    "    turbofan_2                                  = deepcopy(turbofan)\n",
    "    turbofan_2.active_fuel_tanks                = ['fuel_tank'] \n",
    "    turbofan_2.tag                              = 'port_propulsor' \n",
    "    turbofan_2.origin                           = [[13.72,-4.38,-1.1]]  # change origin \n",
    "    turbofan_2.nacelle.origin                   = [[13.5,-4.38,-1.5]]\n",
    "         \n",
    "    # append propulsor to network\n",
    "    net.propulsors.append(turbofan_2)\n",
    "  \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    #  Energy Source: Fuel Tank\n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    # fuel tank\n",
    "    fuel_tank                                        = RCAIDE.Library.Components.Powertrain.Sources.Fuel_Tanks.Fuel_Tank()\n",
    "    fuel_tank.origin                                 = vehicle.wings.main_wing.origin  \n",
    "    fuel_tank.fuel                                   = RCAIDE.Library.Attributes.Propellants.Jet_A1()   \n",
    "    fuel_tank.fuel.mass_properties.mass              = vehicle.mass_properties.max_takeoff-vehicle.mass_properties.max_fuel\n",
    "    fuel_tank.fuel.origin                            = vehicle.wings.main_wing.mass_properties.center_of_gravity      \n",
    "    fuel_tank.fuel.mass_properties.center_of_gravity = vehicle.wings.main_wing.aerodynamic_center\n",
    "    fuel_tank.volume                                 = fuel_tank.fuel.mass_properties.mass/fuel_tank.fuel.density   \n",
    "    fuel_line.fuel_tanks.append(fuel_tank)\n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------   \n",
    "    # Assign propulsors to fuel line to network      \n",
    "    fuel_line.assigned_propulsors =  [[turbofan.tag, turbofan_2.tag]]\n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------   \n",
    "    # Append fuel line to fuel line to network      \n",
    "    net.fuel_lines.append(fuel_line)        \n",
    "    \n",
    "    # Append energy network to aircraft \n",
    "    vehicle.append_energy_network(net)       \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "    # Done ! \n",
    "    #------------------------------------------------------------------------------------------------------------------------- \n",
    "      \n",
    "    return vehicle"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Aerodynamic Analysis\n",
    "\n",
    "With the vehicle setup complete, we can now perform the aerodynamic analysis. This involves evaluating the aerodynamic performance of the aircraft over a range of Mach numbers and angles of attack.\n",
    "\n",
    "### Steps for Analysis\n",
    "\n",
    "1. **Define Input Parameters**:\n",
    "   - Specify a range of Mach numbers and angles of attack (`AoA`) for the analysis.\n",
    "\n",
    "2. **Run the Aerodynamic Analysis**:\n",
    "   - Use the `aircraft_aerodynamic_analysis` function to calculate key aerodynamic parameter, such as:\n",
    "     - Lift Coefficient (`C_L`)\n",
    "   - Perform the analysis for all combinations of Mach numbers and angles of attack.\n",
    "\n",
    "3. **Organize Results**:\n",
    "   - Store the computed aerodynamic data in a structured format, such as a dictionary or DataFrame, for easier visualization and interpretation.\n",
    "\n",
    "4. **Visualize Results**:\n",
    "   - Use the `plot_aircraft_aerodynamics` function to generate plots of the aerodynamic parameters across the defined ranges."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-10T19:14:24.547933Z",
     "iopub.status.busy": "2025-04-10T19:14:24.547497Z",
     "iopub.status.idle": "2025-04-10T19:14:33.504924Z",
     "shell.execute_reply": "2025-04-10T19:14:33.504340Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "vehicle                           = vehicle_setup()  \n",
    "Mach_number_range                 = np.atleast_2d(np.linspace(0.1, 0.9, 10)).T\n",
    "angle_of_attack_range             = np.atleast_2d(np.linspace(-5, 12, 18)).T*Units.degrees \n",
    "control_surface_deflection_range  = np.atleast_2d(np.linspace(0,30,7)).T*Units.degrees \n",
    "aerodynamics_analysis_routine     = RCAIDE.Framework.Analyses.Aerodynamics.Vortex_Lattice_Method()\n",
    "aerodynamics_analysis_routine.vehicle = vehicle\n",
    "    \n",
    "results                           = aircraft_aerodynamic_analysis(aerodynamics_analysis = aerodynamics_analysis_routine,\n",
    "                                                                      angle_of_attack_range = angle_of_attack_range,\n",
    "                                                                      Mach_number_range = Mach_number_range,\n",
    "                                                                      control_surface_deflection_range= control_surface_deflection_range)\n",
    "  \n",
    "plot_aircraft_aerodynamics(results) "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "testingenv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
