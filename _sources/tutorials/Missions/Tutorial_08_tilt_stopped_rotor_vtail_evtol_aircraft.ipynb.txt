{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tutorial 8 - Tilt Stopped Rotor Vtail eVTOL Aircraft Simulation\n",
    "Welcome to this tutorial on simulating a tilt stopped rotor vtail eVTOL aircraft aircraft using RCAIDE. This guide will walk you through the code, explain its components, and highlight where modifications can be made to customize the simulation for different vehicle designs.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Header and Imports\n",
    "\n",
    "\n",
    "The **Imports** section is divided into two parts: simulation-specific libraries and general-purpose Python libraries.\n",
    "\n",
    "The **RCAIDE Imports** section includes the core modules needed for the simulation. These libraries provide specialized classes and tools for building, analyzing, and running aircraft models.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:33.508748Z",
     "iopub.status.busy": "2025-01-08T13:15:33.508372Z",
     "iopub.status.idle": "2025-01-08T13:15:34.773728Z",
     "shell.execute_reply": "2025-01-08T13:15:34.773145Z"
    }
   },
   "outputs": [],
   "source": [
    "''' \n",
    "# Tilt_Stopped_Rotor.py\n",
    "# \n",
    "# Created: May 2019, M Clarke\n",
    "#          Sep 2020, M. Clarke \n",
    "\n",
    "'''\n",
    "#----------------------------------------------------------------------\n",
    "#   Imports\n",
    "# ---------------------------------------------------------------------\n",
    "import RCAIDE\n",
    "from RCAIDE.Framework.Core import Units\n",
    "from RCAIDE.Library.Methods.Geometry.Planform                                  import wing_segmented_planform     \n",
    "from RCAIDE.Library.Methods.Weights.Correlation_Buildups.Propulsion            import compute_motor_weight\n",
    "from RCAIDE.Library.Methods.Propulsors.Converters.DC_Motor                     import design_motor \n",
    "from RCAIDE.Library.Methods.Propulsors.Converters.Rotor                        import design_prop_rotor , design_lift_rotor\n",
    "from RCAIDE.Library.Methods.Weights.Physics_Based_Buildups.Electric            import converge_physics_based_weight_buildup \n",
    "from RCAIDE.Library.Methods.Weights.Moment_of_Inertia                          import compute_aircraft_moment_of_inertia\n",
    "from RCAIDE.Library.Methods.Weights.Center_of_Gravity                          import compute_vehicle_center_of_gravity\n",
    "from RCAIDE.Library.Plots                                                      import * \n",
    "from RCAIDE import  load \n",
    "from RCAIDE import  save  \n",
    "\n",
    "import os\n",
    "import numpy as np \n",
    "from copy import deepcopy\n",
    "import matplotlib.pyplot as plt \n",
    "import  pickle\n",
    "\n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Vehicle Setup\n",
    "\n",
    "The **`vehicle_setup`** function defines the baseline configuration of the aircraft. This section builds the vehicle step-by-step by specifying its components, geometric properties, and high-level parameters.\n",
    "\n",
    "---\n",
    "\n",
    "### 1. Creating the Vehicle Instance\n",
    "\n",
    "The setup begins by creating a vehicle instance and assigning it a **tag**. The tag is a unique string identifier used to reference the vehicle during analysis or in post-processing steps.\n",
    "\n",
    "---\n",
    "\n",
    "### 2. Defining High-Level Vehicle Parameters\n",
    "\n",
    "The high-level parameters describe the aircraft’s key operational characteristics, such as:\n",
    "\n",
    "- **Maximum Takeoff Weight**: The heaviest allowable weight of the aircraft for safe flight.\n",
    "- **Operating Empty Weight**: The aircraft weight without fuel, passengers, or payload.\n",
    "- **Payload**: The weight of cargo and passengers.\n",
    "- **Max Zero Fuel Weight**: The maximum weight of the aircraft excluding fuel.\n",
    "\n",
    "Units for these parameters can be converted automatically using the `Units` module to ensure consistency and reduce errors.\n",
    "\n",
    "---\n",
    "\n",
    "### 3. Defining the Landing Gear\n",
    "\n",
    "Landing gear parameters, such as the number of main and nose wheels, are set for the aircraft. While not used in this tutorial, these values can be applied in advanced analyses, such as **ground loads** or **noise prediction**.\n",
    "\n",
    "---\n",
    "\n",
    "### 4. Main Wing Setup\n",
    "\n",
    "The main wing is added using the **`Main_Wing`** class. This designation ensures that the primary lifting surface is recognized correctly by the analysis tools. Key properties of the wing include:\n",
    "\n",
    "- **Area**: The total wing surface area.\n",
    "- **Span**: The length of the wing from tip to tip.\n",
    "- **Aspect Ratio**: A ratio of span to average chord, determining wing efficiency.\n",
    "- **Segments**: Divisions of the wing geometry (e.g., root and tip sections).\n",
    "- **Control Surfaces**: High-lift devices like flaps and ailerons, defined by span fractions and deflections.\n",
    "\n",
    "---\n",
    "\n",
    "### 5. Horizontal and Vertical Stabilizers\n",
    "\n",
    "The stabilizers provide stability and control for the aircraft:\n",
    "\n",
    "- **Horizontal Stabilizer**: Defined using the `Horizontal_Tail` class. It follows a similar setup to the main wing but acts as a stabilizing surface.\n",
    "- **Vertical Stabilizer**: Defined using the `Vertical_Tail` class, with an additional option to designate the tail as a **T-tail** for weight calculations.\n",
    "\n",
    "---\n",
    "\n",
    "### 6. Fuselage Definition\n",
    "\n",
    "The fuselage is modeled by specifying its geometric parameters, such as:\n",
    "\n",
    "- **Length**: The overall length of the aircraft body.\n",
    "- **Width**: The widest part of the fuselage cross-section.\n",
    "- **Height**: The height of the fuselage.\n",
    "\n",
    "These values influence drag calculations and overall structural weight.\n",
    "\n",
    "---\n",
    "\n",
    "### 7. Energy Network\n",
    "\n",
    "The **energy network** models the propulsion system. The energy network determines the engine’s thrust, bypass ratio, and fuel type. These parameters are essential for performance and fuel efficiency analyses.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.776566Z",
     "iopub.status.busy": "2025-01-08T13:15:34.776314Z",
     "iopub.status.idle": "2025-01-08T13:15:34.881660Z",
     "shell.execute_reply": "2025-01-08T13:15:34.881092Z"
    }
   },
   "outputs": [],
   "source": [
    "def vehicle_setup() : \n",
    "\n",
    "    ospath                                = os.path.abspath(os.path.join('Notebook'))\n",
    "    separator                             = os.path.sep\n",
    "    airfoil_path = os.path.dirname(ospath) + separator + '..' + separator + '..' + separator + 'Regressions' + separator + 'Vehicles' + separator \n",
    "    \n",
    "    print(airfoil_path)\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Initialize the Vehicle\n",
    "    # ------------------------------------------------------------------             \n",
    "    vehicle               = RCAIDE.Vehicle()\n",
    "    vehicle.tag           = 'Tilt_Stopped_Rotor_V_Tail'\n",
    "    vehicle.configuration = 'eVTOL'\n",
    "     \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ################################################# Vehicle-level Properties #####################################################  \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    # mass properties \n",
    "    vehicle.mass_properties.max_takeoff       = 2700 \n",
    "    vehicle.mass_properties.takeoff           = vehicle.mass_properties.max_takeoff\n",
    "    vehicle.mass_properties.operating_empty   = vehicle.mass_properties.max_takeoff\n",
    "    vehicle.mass_properties.center_of_gravity = [[ 2.1345, 0 , 0 ]] \n",
    "    vehicle.mass_properties.moments_of_inertia.tensor = np.array([[164627.7,0.0,0.0],[0.0,471262.4,0.0],[0.0,0.0,554518.7]])\n",
    "    vehicle.flight_envelope.ultimate_load            = 5.7   \n",
    "    vehicle.flight_envelope.positive_limit_load      = 3.  \n",
    "    vehicle.passengers                        = 5 \n",
    "        \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ######################################################## Wings ####################################################################  \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Main Wing\n",
    "    # ------------------------------------------------------------------\n",
    "    wing                          = RCAIDE.Library.Components.Wings.Main_Wing() \n",
    "    wing.aspect_ratio             = 8.95198  # will  be overwritten\n",
    "    wing.sweeps.quarter_chord     = 0.0  \n",
    "    wing.thickness_to_chord       = 0.14 \n",
    "    wing.taper                    = 0.292\n",
    "    wing.spans.projected          = 11.82855\n",
    "    wing.total_length             = 1.75\n",
    "    wing.chords.root              = 1.75\n",
    "    wing.chords.tip               = 1.0\n",
    "    wing.chords.mean_aerodynamic  = 1.5\n",
    "    wing.dihedral                 = 0.0  \n",
    "    wing.areas.reference          = 15.629\n",
    "    wing.twists.root              = 4. * Units.degrees\n",
    "    wing.twists.tip               = 0. \n",
    "    wing.origin                   = [[1.5, 0., 0.991]]\n",
    "    wing.aerodynamic_center       = [ 1.567, 0., 0.991]    \n",
    "    wing.winglet_fraction         = 0.0  \n",
    "    wing.symmetric                = True\n",
    "    wing.vertical                 = False\n",
    "    airfoil                       = RCAIDE.Library.Components.Airfoils.Airfoil()\n",
    "    airfoil.coordinate_file       = airfoil_path + 'Airfoils' + separator + 'NACA_63_412.txt'\n",
    "    \n",
    "    # Segment                                  \n",
    "    segment                       = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                   = 'Section_1'   \n",
    "    segment.percent_span_location = 0.0\n",
    "    segment.twist                 = 4. * Units.degrees \n",
    "    segment.root_chord_percent    = 1. \n",
    "    segment.dihedral_outboard     = 8 * Units.degrees\n",
    "    segment.sweeps.quarter_chord  = 0.9  * Units.degrees \n",
    "    segment.thickness_to_chord    = 0.16  \n",
    "    segment.append_airfoil(airfoil)\n",
    "    wing.append_segment(segment)               \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                       = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                   = 'Section_2'    \n",
    "    segment.percent_span_location = 3.5/wing.spans.projected\n",
    "    segment.twist                 = 3. * Units.degrees \n",
    "    segment.root_chord_percent    = 1.4000/1.7500\n",
    "    segment.dihedral_outboard     = 0.0 * Units.degrees\n",
    "    segment.sweeps.quarter_chord  = 1.27273 * Units.degrees \n",
    "    segment.thickness_to_chord    = 0.16  \n",
    "    segment.append_airfoil(airfoil)\n",
    "    wing.append_segment(segment)               \n",
    "     \n",
    "    # Segment                                  \n",
    "    segment                       = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                   = 'Section_3'   \n",
    "    segment.percent_span_location = 11.3/wing.spans.projected \n",
    "    segment.twist                 = 2.0 * Units.degrees \n",
    "    segment.root_chord_percent    = 1.000/1.7500\n",
    "    segment.dihedral_outboard     = 35.000* Units.degrees \n",
    "    segment.sweeps.quarter_chord  = 45.000* Units.degrees \n",
    "    segment.thickness_to_chord    = 0.16  \n",
    "    segment.append_airfoil(airfoil)\n",
    "    wing.append_segment(segment)     \n",
    "    \n",
    "    # Segment                                  \n",
    "    segment                       = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                   = 'Section_4'   \n",
    "    segment.percent_span_location = 11.6/wing.spans.projected \n",
    "    segment.twist                 = 0.0 * Units.degrees \n",
    "    segment.root_chord_percent    = 0.9/1.7500\n",
    "    segment.dihedral_outboard     = 60. * Units.degrees \n",
    "    segment.sweeps.quarter_chord  = 70.0 * Units.degrees \n",
    "    segment.thickness_to_chord    = 0.16  \n",
    "    segment.append_airfoil(airfoil)\n",
    "    wing.append_segment(segment)  \n",
    "    \n",
    "    # Segment                                  \n",
    "    segment                       = RCAIDE.Library.Components.Wings.Segments.Segment()\n",
    "    segment.tag                   = 'Section_5'   \n",
    "    segment.percent_span_location = 1.0\n",
    "    segment.twist                 = 0.0 * Units.degrees \n",
    "    segment.root_chord_percent    = 0.35/1.7500\n",
    "    segment.dihedral_outboard     = 0  * Units.degrees \n",
    "    segment.sweeps.quarter_chord  = 0  * Units.degrees \n",
    "    segment.thickness_to_chord    = 0.16  \n",
    "    segment.append_airfoil(airfoil)\n",
    "    wing.append_segment(segment)                 \n",
    "    \n",
    "    \n",
    "    # compute reference properties \n",
    "    wing_segmented_planform(wing, overwrite_reference = True )  \n",
    "    vehicle.reference_area        = wing.areas.reference  \n",
    "    wing.areas.wetted             = wing.areas.reference  * 2 \n",
    "    wing.areas.exposed            = wing.areas.reference  * 2  \n",
    "\n",
    "                                          \n",
    "    # control surfaces ------------------------------------------- \n",
    "    flap                          = RCAIDE.Library.Components.Wings.Control_Surfaces.Flap()\n",
    "    flap.tag                      = 'flap'\n",
    "    flap.span_fraction_start      = 0.2\n",
    "    flap.span_fraction_end        = 0.5\n",
    "    flap.deflection               = 0.0 * Units.degrees \n",
    "    flap.chord_fraction           = 0.20\n",
    "    wing.append_control_surface(flap)  \n",
    "    \n",
    "\n",
    "    aileron                       = RCAIDE.Library.Components.Wings.Control_Surfaces.Aileron()\n",
    "    aileron.tag                   = 'aileron'\n",
    "    aileron.span_fraction_start   = 0.7\n",
    "    aileron.span_fraction_end     = 0.9 \n",
    "    aileron.deflection            = 0.0 * Units.degrees\n",
    "    aileron.chord_fraction        = 0.2\n",
    "    wing.append_control_surface(aileron)      \n",
    "\n",
    "        \n",
    "    # add to vehicle \n",
    "    wing_segmented_planform(wing, overwrite_reference = True ) \n",
    "    vehicle.append_component(wing)  \n",
    "    \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    #   Horizontal Tail\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    wing                          = RCAIDE.Library.Components.Wings.Horizontal_Tail() \n",
    "    wing.aspect_ratio             = 3.04444\n",
    "    wing.sweeps.quarter_chord     = 17. * Units.degrees\n",
    "    wing.thickness_to_chord       = 0.12 \n",
    "    wing.spans.projected          = 2.71805\n",
    "    wing.chords.root              = 0.94940\n",
    "    wing.total_length             = 0.94940\n",
    "    wing.chords.tip               = 0.62731 \n",
    "    wing.chords.mean_aerodynamic  = 0.809 \n",
    "    wing.dihedral                 = 20 *Units.degrees\n",
    "    wing.taper                    = wing.chords.tip / wing.chords.root \n",
    "    wing.areas.reference          = 2.14279\n",
    "    wing.areas.wetted             = 2.14279   * 2\n",
    "    wing.areas.exposed            = 2.14279   * 2\n",
    "    wing.twists.root              = 0.0\n",
    "    wing.twists.tip               = 0.0\n",
    "    wing.origin                   = [[  5.374 ,0.0 ,  0.596]]\n",
    "    wing.aerodynamic_center       = [   5.374, 0.0,   0.596]  \n",
    "    wing.symmetric                = True     \n",
    "\n",
    "    elevator                              = RCAIDE.Library.Components.Wings.Control_Surfaces.Elevator()\n",
    "    elevator.tag                          = 'elevator'\n",
    "    elevator.span_fraction_start          = 0.6\n",
    "    elevator.span_fraction_end            = 0.9\n",
    "    elevator.deflection                   = 0.0  * Units.deg\n",
    "    elevator.chord_fraction               = 0.4\n",
    "    wing.append_control_surface(elevator)       \n",
    "    \n",
    "\n",
    "    rudder                                = RCAIDE.Library.Components.Wings.Control_Surfaces.Rudder()\n",
    "    rudder.tag                            = 'rudder'\n",
    "    rudder.span_fraction_start            = 0.1\n",
    "    rudder.span_fraction_end              = 0.5\n",
    "    rudder.deflection                     = 0.0  * Units.deg\n",
    "    rudder.chord_fraction                 = 0.4\n",
    "    wing.append_control_surface(rudder)  \n",
    "        \n",
    "    # add to vehicle  \n",
    "    vehicle.append_component(wing)     \n",
    "      \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ##########################################################   Fuselage  ############################################################   \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    fuselage                                    = RCAIDE.Library.Components.Fuselages.Fuselage()\n",
    "    fuselage.tag                                = 'fuselage' \n",
    "    fuselage.seats_abreast                      = 2.  \n",
    "    fuselage.seat_pitch                         = 3.  \n",
    "    fuselage.fineness.nose                      = 0.88   \n",
    "    fuselage.fineness.tail                      = 1.13   \n",
    "    fuselage.lengths.nose                       = 0.5  \n",
    "    fuselage.lengths.tail                       = 1.5\n",
    "    fuselage.lengths.cabin                      = 4.46 \n",
    "    fuselage.lengths.total                      = 6.46\n",
    "    fuselage.width                              = 1.75\n",
    "    fuselage.heights.maximum                    = 4.65 * Units.feet      # change \n",
    "    fuselage.heights.at_quarter_length          = 3.75 * Units.feet      # change \n",
    "    fuselage.heights.at_wing_root_quarter_chord = 4.65 * Units.feet      # change \n",
    "    fuselage.heights.at_three_quarters_length   = 4.26 * Units.feet      # change \n",
    "    fuselage.areas.wetted                       = 236. * Units.feet**2   # change \n",
    "    fuselage.areas.front_projected              = 0.14 * Units.feet**2   # change \n",
    "    fuselage.effective_diameter                 = 1.276     # change \n",
    "    fuselage.differential_pressure              = 0. \n",
    "    \n",
    "    # Segment  \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                                 = 'segment_0'    \n",
    "    segment.percent_x_location                  = 0.0 \n",
    "    segment.percent_z_location                  = 0.     # change  \n",
    "    segment.height                              = 0.049 \n",
    "    segment.width                               = 0.032 \n",
    "    fuselage.append_segment(segment)                     \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_1'   \n",
    "    segment.percent_x_location                  = 0.10912/fuselage.lengths.total \n",
    "    segment.percent_z_location                  = 0.00849\n",
    "    segment.height                              = 0.481 \n",
    "    segment.width                               = 0.553 \n",
    "    fuselage.append_segment(segment)           \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_2'   \n",
    "    segment.percent_x_location                  = 0.47804/fuselage.lengths.total\n",
    "    segment.percent_z_location                  = 0.02874\n",
    "    segment.height                              = 1.00\n",
    "    segment.width                               = 0.912 \n",
    "    fuselage.append_segment(segment)                     \n",
    "                                                \n",
    "    # Segment                                            \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_3'   \n",
    "    segment.percent_x_location                  = 0.161  \n",
    "    segment.percent_z_location                  = 0.04348  \n",
    "    segment.height                              = 1.41\n",
    "    segment.width                               = 1.174  \n",
    "    fuselage.append_segment(segment)                     \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_4'   \n",
    "    segment.percent_x_location                  = 0.284 \n",
    "    segment.percent_z_location                  = 0.05435 \n",
    "    segment.height                              = 1.62\n",
    "    segment.width                               = 1.276  \n",
    "    fuselage.append_segment(segment)              \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_5'   \n",
    "    segment.percent_x_location                  = 3.43026/fuselage.lengths.total\n",
    "    segment.percent_z_location                  = 0.31483/fuselage.lengths.total \n",
    "    segment.height                              = 1.409\n",
    "    segment.width                               = 1.121 \n",
    "    fuselage.append_segment(segment)                     \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_6'   \n",
    "    segment.percent_x_location                  = 4.20546/fuselage.lengths.total\n",
    "    segment.percent_z_location                  = 0.32216/fuselage.lengths.total\n",
    "    segment.height                              = 1.11\n",
    "    segment.width                               = 0.833\n",
    "    fuselage.append_segment(segment)                  \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_7'   \n",
    "    segment.percent_x_location                  = 4.99358/fuselage.lengths.total\n",
    "    segment.percent_z_location                  = 0.37815/fuselage.lengths.total\n",
    "    segment.height                              = 0.78\n",
    "    segment.width                               = 0.512 \n",
    "    fuselage.append_segment(segment)                  \n",
    "                                                \n",
    "    # Segment                                             \n",
    "    segment                                     = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                                 = 'segment_8'   \n",
    "    segment.percent_x_location                  = 1.\n",
    "    segment.percent_z_location                  = 0.55/fuselage.lengths.total\n",
    "    segment.height                              = 0.195  \n",
    "    segment.width                               = 0.130 \n",
    "    fuselage.append_segment(segment)                   \n",
    "                                                \n",
    "    vehicle.append_component(fuselage) \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ##########################################################  Booms  ################################################################  \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------          \n",
    "    boom                                    = RCAIDE.Library.Components.Booms.Boom()\n",
    "    boom.tag                                = 'boom_1r'\n",
    "    boom.configuration                      = 'boom'  \n",
    "    boom.origin                             = [[   0.036, 2.25,  1]]  \n",
    "    boom.seats_abreast                      = 0.  \n",
    "    boom.seat_pitch                         = 0.0 \n",
    "    boom.fineness.nose                      = 0.950   \n",
    "    boom.fineness.tail                      = 1.029   \n",
    "    boom.lengths.nose                       = 0.2 \n",
    "    boom.lengths.tail                       = 0.2\n",
    "    boom.lengths.cabin                      = 4.15\n",
    "    boom.lengths.total                      = 4.2\n",
    "    boom.width                              = 0.15 \n",
    "    boom.heights.maximum                    = 0.15  \n",
    "    boom.heights.at_quarter_length          = 0.15  \n",
    "    boom.heights.at_three_quarters_length   = 0.15 \n",
    "    boom.heights.at_wing_root_quarter_chord = 0.15 \n",
    "    boom.areas.wetted                       = 0.018\n",
    "    boom.areas.front_projected              = 0.018 \n",
    "    boom.effective_diameter                 = 0.15  \n",
    "    boom.differential_pressure              = 0.  \n",
    "    boom.symmetric                          = True \n",
    "    boom.index                              = 1\n",
    "    \n",
    "    # Segment  \n",
    "    segment                           = RCAIDE.Library.Components.Fuselages.Segments.Segment() \n",
    "    segment.tag                       = 'segment_1'   \n",
    "    segment.percent_x_location        = 0.\n",
    "    segment.percent_z_location        = 0.0 \n",
    "    segment.height                    = 0.05  \n",
    "    segment.width                     = 0.05   \n",
    "    boom.append_segment(segment)           \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                           = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                       = 'segment_2'   \n",
    "    segment.percent_x_location        = 0.03\n",
    "    segment.percent_z_location        = 0. \n",
    "    segment.height                    = 0.15 \n",
    "    segment.width                     = 0.15 \n",
    "    boom.append_segment(segment) \n",
    "    \n",
    "    # Segment                                   \n",
    "    segment                           = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                       = 'segment_3'    \n",
    "    segment.percent_x_location        = 0.97\n",
    "    segment.percent_z_location        = 0. \n",
    "    segment.height                    = 0.15\n",
    "    segment.width                     = 0.15\n",
    "    boom.append_segment(segment)           \n",
    "    \n",
    "    # Segment                                  \n",
    "    segment                           = RCAIDE.Library.Components.Fuselages.Segments.Segment()\n",
    "    segment.tag                       = 'segment_4'   \n",
    "    segment.percent_x_location        = 1.   \n",
    "    segment.percent_z_location        = 0.   \n",
    "    segment.height                    = 0.05   \n",
    "    segment.width                     = 0.05   \n",
    "    boom.append_segment(segment)           \n",
    "    \n",
    "    # add to vehicle\n",
    "    vehicle.append_component(boom)   \n",
    "    \n",
    "    # add left long boom \n",
    "    boom              = deepcopy(vehicle.booms.boom_1r)\n",
    "    boom.origin[0][1] = -boom.origin[0][1]\n",
    "    boom.tag          = 'boom_1l' \n",
    "    vehicle.append_component(boom)         \n",
    "     \n",
    "    # add left long boom \n",
    "    boom              = deepcopy(vehicle.booms.boom_1r)\n",
    "    boom.origin       = [[     0.110,    2.25,   1.050]] \n",
    "    boom.tag          = 'boom_2r' \n",
    "    boom.lengths.total                      = 4.16\n",
    "    vehicle.append_component(boom)  \n",
    "     \n",
    "    # add inner left boom \n",
    "    boom              = deepcopy(vehicle.booms.boom_1r)\n",
    "    boom.origin       = [[     0.110, - 5.7 ,    1.050 ]]   \n",
    "    boom.lengths.total                      = 4.16\n",
    "    boom.tag          = 'boom_2l' \n",
    "    vehicle.append_component(boom)\n",
    "    \n",
    "\n",
    "    # add left long boom \n",
    "    boom              = deepcopy(vehicle.booms.boom_1r)\n",
    "    boom.origin       = [[     0.110, 9.2,   1.050]] \n",
    "    boom.tag          = 'boom_3r' \n",
    "    boom.lengths.total                      = 4.16\n",
    "    vehicle.append_component(boom)  \n",
    "     \n",
    "    # add inner left boom \n",
    "    boom              = deepcopy(vehicle.booms.boom_1r)\n",
    "    boom.origin       = [[     0.110, -  9.2,    1.050 ]]   \n",
    "    boom.lengths.total                      = 4.16\n",
    "    boom.tag          = 'boom_3l' \n",
    "    vehicle.append_component(boom)    \n",
    "    \n",
    "    \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ########################################################  Energy Network  ######################################################### \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    network                                                = RCAIDE.Framework.Networks.Electric()   \n",
    "    #==================================================================================================================================== \n",
    "    # Tilt Rotor Bus \n",
    "    #====================================================================================================================================          \n",
    "    prop_rotor_bus                           = RCAIDE.Library.Components.Energy.Distributors.Electrical_Bus()\n",
    "    prop_rotor_bus.tag                       = 'prop_rotor_bus'\n",
    "    prop_rotor_bus.origin                    =  [[2.43775609, 0 , 1.2]]\n",
    "    prop_rotor_bus.number_of_battery_modules =  2    \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Bus Battery\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    battery_module                                                    = RCAIDE.Library.Components.Energy.Sources.Battery_Modules.Lithium_Ion_NMC() \n",
    "    battery_module.tag                                                = 'bus_battery'\n",
    "    battery_module.electrical_configuration.series                    = 140  \n",
    "    battery_module.electrical_configuration.parallel                  = 30  \n",
    "    battery_module.geometrtic_configuration.normal_count              = 168\n",
    "    battery_module.geometrtic_configuration.parallel_count            = 25\n",
    "     \n",
    "    modules_origins = [[0.25 , 0.0, 0.0],[1.5 , 0.0, 0.0]]  # large prop-rotor modules are beneath floor\n",
    "    for m_i in range(prop_rotor_bus.number_of_battery_modules):\n",
    "        module =  deepcopy(battery_module)\n",
    "        module.tag = 'nmc_module_' + str(m_i+1) \n",
    "        module.origin = [modules_origins[m_i]]\n",
    "        prop_rotor_bus.battery_modules.append(module) \n",
    "    prop_rotor_bus.initialize_bus_properties()\n",
    "\n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Front Propulsors \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------    \n",
    "     \n",
    "    # Define Lift Propulsor Container \n",
    "    front_propulsor                                = RCAIDE.Library.Components.Propulsors.Electric_Rotor()\n",
    "    front_propulsor.tag                            = 'front_propulsor'       \n",
    "              \n",
    "    # Electronic Speed Controller           \n",
    "    prop_rotor_esc                                = RCAIDE.Library.Components.Energy.Modulators.Electronic_Speed_Controller()\n",
    "    prop_rotor_esc.efficiency                     = 0.95    \n",
    "    prop_rotor_esc.tag                            = 'prop_rotor_esc_1'  \n",
    "    front_propulsor.electronic_speed_controller         = prop_rotor_esc  \n",
    "    \n",
    "    # Lift Rotor Design\n",
    "    g                                             = 9.81                                    # gravitational acceleration   \n",
    "    Hover_Load                                    = vehicle.mass_properties.takeoff*g *1.1  # hover load   \n",
    "\n",
    "    prop_rotor                                    = RCAIDE.Library.Components.Propulsors.Converters.Prop_Rotor()   \n",
    "    prop_rotor.tag                                = 'prop_rotor'   \n",
    "    prop_rotor.tip_radius                         = 1.51\n",
    "    prop_rotor.hub_radius                         = 0.15 * prop_rotor.tip_radius\n",
    "    prop_rotor.number_of_blades                   = 4\n",
    "\n",
    "    prop_rotor.hover.design_altitude              = 40 * Units.feet  \n",
    "    prop_rotor.hover.design_thrust                = Hover_Load/12\n",
    "    prop_rotor.hover.design_freestream_velocity   = np.sqrt(prop_rotor.hover.design_thrust/(2*1.2*np.pi*(prop_rotor.tip_radius**2)))\n",
    "    \n",
    "    prop_rotor.oei.design_altitude                = 40 * Units.feet  \n",
    "    prop_rotor.oei.design_thrust                  = Hover_Load/11 \n",
    "    prop_rotor.oei.design_freestream_velocity     = np.sqrt(prop_rotor.oei.design_thrust/(2*1.2*np.pi*(prop_rotor.tip_radius**2)))\n",
    "    \n",
    "    prop_rotor.cruise.design_altitude             = 1500 * Units.feet\n",
    "    prop_rotor.cruise.design_thrust               = 3150 / 6\n",
    "    prop_rotor.cruise.design_freestream_velocity  = 130.* Units['mph']      \n",
    "    \n",
    "    airfoil                                       = RCAIDE.Library.Components.Airfoils.Airfoil()   \n",
    "    airfoil.coordinate_file                       =  airfoil_path + 'Airfoils' + separator + 'NACA_4412.txt'\n",
    "    airfoil.polar_files                           = [airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_50000.txt' ,\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_100000.txt' ,\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_200000.txt' ,\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_500000.txt' ,\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_1000000.txt',\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_3500000.txt',\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_5000000.txt',\n",
    "                                                     airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_7500000.txt' ]\n",
    "    prop_rotor.append_airfoil(airfoil)                \n",
    "    prop_rotor.airfoil_polar_stations             = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]    \n",
    "    prop_rotor.fidelity                           = \"Momentum_Theory\"  \n",
    "     \n",
    "    design_prop_rotor(prop_rotor) \n",
    "        \n",
    "    front_propulsor.rotor =  prop_rotor \n",
    "    \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------               \n",
    "    # Front Rotor Motor  \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------    \n",
    "    prop_rotor_motor                         = RCAIDE.Library.Components.Propulsors.Converters.DC_Motor()\n",
    "    prop_rotor_motor.efficiency              = 0.95\n",
    "    prop_rotor_motor.nominal_voltage         = prop_rotor_bus.voltage * 0.75\n",
    "    prop_rotor_motor.prop_rotor_radius       = prop_rotor.tip_radius \n",
    "    prop_rotor_motor.no_load_current         = 0.01 \n",
    "    prop_rotor_motor.rotor_radius            = prop_rotor.tip_radius\n",
    "    prop_rotor_motor.design_torque           = prop_rotor.hover.design_torque\n",
    "    prop_rotor_motor.angular_velocity        = prop_rotor.hover.design_angular_velocity/prop_rotor_motor.gear_ratio  \n",
    "    design_motor(prop_rotor_motor) \n",
    "    prop_rotor_motor.mass_properties.mass    = 0.75 *  compute_motor_weight(prop_rotor_motor)     \n",
    "    front_propulsor.motor                          = prop_rotor_motor\n",
    "     \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------               \n",
    "    # Lift Rotor Nacelle\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------     \n",
    "    nacelle                           = RCAIDE.Library.Components.Nacelles.Nacelle() \n",
    "    nacelle.length                    = 0.45\n",
    "    nacelle.diameter                  = 0.3 \n",
    "    nacelle.orientation_euler_angles  = [0,-90*Units.degrees,0.]   \n",
    "    nacelle.flow_through              = False  \n",
    "    front_propulsor.nacelle           = nacelle  \n",
    "\n",
    "    # Front Rotors Locations \n",
    "    origins =  [[-0.073, -2.25 ,1.2],  [-0.073, 2.25 ,1.2] , [ -0.073 , -5.7  , 1.2] ,[ -0.073 ,  5.7, 1.2], [ -0.073 , -9.2  , 1.2] ,[ -0.073 , 9.2, 1.2]]\n",
    "   \n",
    "    assigned_propulsor_list = []         \n",
    "    for i in range(len(origins)): \n",
    "        propulsor_i                                       = deepcopy(front_propulsor)\n",
    "        propulsor_i.tag                                   = 'prop_rotor_propulsor_' + str(i + 1)\n",
    "        propulsor_i.rotor.tag                             = 'prop_rotor_' + str(i + 1) \n",
    "        propulsor_i.rotor.origin                          = [origins[i]]  \n",
    "        propulsor_i.motor.tag                             = 'prop_rotor_motor_' + str(i + 1)   \n",
    "        propulsor_i.motor.origin                          = [origins[i]]  \n",
    "        propulsor_i.electronic_speed_controller.tag       = 'prop_rotor_esc_' + str(i + 1)  \n",
    "        propulsor_i.electronic_speed_controller.origin    = [origins[i]]  \n",
    "        propulsor_i.nacelle.tag                           = 'prop_rotor_nacelle_' + str(i + 1)  \n",
    "        propulsor_i.nacelle.origin                        = [origins[i]]   \n",
    "        network.propulsors.append(propulsor_i) \n",
    "        assigned_propulsor_list.append(propulsor_i.tag) \n",
    "    prop_rotor_bus.assigned_propulsors = [assigned_propulsor_list]\n",
    " \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Additional Bus Loads\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------     \n",
    "    # Payload   \n",
    "    payload                        = RCAIDE.Library.Components.Systems.Avionics()\n",
    "    payload.power_draw             = 10. # Watts \n",
    "    payload.mass_properties.mass   = 1.0 * Units.kg\n",
    "    prop_rotor_bus.payload         = payload \n",
    "    \n",
    "    # Avionics   \n",
    "    avionics                       = RCAIDE.Library.Components.Systems.Avionics()\n",
    "    avionics.power_draw            = 10. # Watts  \n",
    "    avionics.mass_properties.mass  = 1.0 * Units.kg\n",
    "    prop_rotor_bus.avionics            = avionics    \n",
    "\n",
    "    # append forward bus\n",
    "    network.busses.append(prop_rotor_bus)    \n",
    "    \n",
    "        \n",
    "    #==================================================================================================================================== \n",
    "    # Rear Bus \n",
    "    #====================================================================================================================================          \n",
    "    lift_rotor_bus                           = RCAIDE.Library.Components.Energy.Distributors.Electrical_Bus()\n",
    "    lift_rotor_bus.tag                       = 'lift_rotor_bus'  \n",
    "    lift_rotor_bus.number_of_battery_modules =  2\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Bus Battery\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    battery_module                                                    = RCAIDE.Library.Components.Energy.Sources.Battery_Modules.Lithium_Ion_NMC() \n",
    "    battery_module.tag                                                = 'lift_bus_battery'\n",
    "    battery_module.electrical_configuration.series                    = 140   \n",
    "    battery_module.electrical_configuration.parallel                  = 10  \n",
    "    battery_module.geometrtic_configuration.normal_count              = 56\n",
    "    battery_module.geometrtic_configuration.parallel_count            = 25\n",
    "\n",
    "    modules_origins = [[4, 0.0, 0.0],[4, 0.0, 0.2 ]]  # rear modules are stacked inside cabin\n",
    "    for m_i in range(lift_rotor_bus.number_of_battery_modules):\n",
    "        module =  deepcopy(battery_module)\n",
    "        module.tag = 'nmc_module_' + str(m_i+1) \n",
    "        module.origin = [modules_origins[m_i]]\n",
    "        lift_rotor_bus.battery_modules.append(module) \n",
    "    lift_rotor_bus.initialize_bus_properties()\n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Lift Propulsors \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------    \n",
    "     \n",
    "    # Define Lift Propulsor Container \n",
    "    lift_propulsor                                        = RCAIDE.Library.Components.Propulsors.Electric_Rotor()  \n",
    "              \n",
    "    # Electronic Speed Controller           \n",
    "    lift_rotor_esc                                         = RCAIDE.Library.Components.Energy.Modulators.Electronic_Speed_Controller() \n",
    "    lift_rotor_esc.efficiency                              = 0.95      \n",
    "    lift_propulsor.electronic_speed_controller             = lift_rotor_esc \n",
    "           \n",
    "    # Lift Rotor Design              \n",
    "    lift_rotor                                             = RCAIDE.Library.Components.Propulsors.Converters.Lift_Rotor()   \n",
    "    lift_rotor.tip_radius                                  = 1.51\n",
    "    lift_rotor.hub_radius                                  = 0.15* lift_rotor.tip_radius \n",
    "    lift_rotor.number_of_blades                            = 3\n",
    "\n",
    "    lift_rotor.hover.design_altitude                       = 40 * Units.feet  \n",
    "    lift_rotor.hover.design_thrust                         = Hover_Load/12\n",
    "    lift_rotor.hover.design_freestream_velocity            = np.sqrt(lift_rotor.hover.design_thrust/(2*1.2*np.pi*(lift_rotor.tip_radius**2)))\n",
    "               \n",
    "    lift_rotor.oei.design_altitude                         = 40 * Units.feet  \n",
    "    lift_rotor.oei.design_thrust                           = Hover_Load/11\n",
    "    lift_rotor.oei.design_freestream_velocity              = np.sqrt(lift_rotor.oei.design_thrust/(2*1.2*np.pi*(lift_rotor.tip_radius**2)))\n",
    "     \n",
    "    airfoil                                                = RCAIDE.Library.Components.Airfoils.Airfoil()   \n",
    "    airfoil.coordinate_file                                = airfoil_path + 'Airfoils' + separator + 'NACA_4412.txt'\n",
    "    airfoil.polar_files                                    = [airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_50000.txt' ,\n",
    "                                                             airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_100000.txt' ,\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_200000.txt' ,\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_500000.txt' ,\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_1000000.txt',\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_3500000.txt',\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_5000000.txt',\n",
    "                                                              airfoil_path + 'Airfoils' + separator + 'Polars' + separator + 'NACA_4412_polar_Re_7500000.txt' ]\n",
    "    lift_rotor.append_airfoil(airfoil)                         \n",
    "    lift_rotor.airfoil_polar_stations                      = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]  \n",
    "     \n",
    "    design_lift_rotor(lift_rotor)         \n",
    "            \n",
    "    lift_propulsor.rotor =  lift_rotor          \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------               \n",
    "    # Lift Rotor Motor  \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------    \n",
    "    lift_rotor_motor                                       = RCAIDE.Library.Components.Propulsors.Converters.DC_Motor()\n",
    "    lift_rotor_motor.efficiency                            = 0.9\n",
    "    lift_rotor_motor.nominal_voltage                       = lift_rotor_bus.voltage*3/4  \n",
    "    lift_rotor_motor.propeller_radius                      = lift_rotor.tip_radius \n",
    "    lift_rotor_motor.no_load_current                       = 0.01   \n",
    "    lift_rotor_motor.rotor_radius                          = lift_rotor.tip_radius\n",
    "    lift_rotor_motor.design_torque                         = lift_rotor.hover.design_torque\n",
    "    lift_rotor_motor.angular_velocity                      = lift_rotor.hover.design_angular_velocity/lift_rotor_motor.gear_ratio  \n",
    "    design_motor(lift_rotor_motor)\n",
    "    lift_rotor_motor.mass_properties.mass                  = 0.75 *  compute_motor_weight(lift_rotor_motor)     \n",
    "    lift_propulsor.motor                                   = lift_rotor_motor \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------               \n",
    "    # Lift Rotor Nacelle\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------     \n",
    "    nacelle                           = RCAIDE.Library.Components.Nacelles.Nacelle() \n",
    "    nacelle.length                    = 0.45\n",
    "    nacelle.diameter                  = 0.3\n",
    "    nacelle.orientation_euler_angles  = [0,-90*Units.degrees,0.]    \n",
    "    nacelle.flow_through              = False     \n",
    "    lift_propulsor.nacelle          =  nacelle  \n",
    "\n",
    " \n",
    "    # Front Rotors Locations\n",
    "    origins =  [[ 4.196, -2.25 ,1.2],  [ 4.196, 2.25 ,1.2] , [ 4.196, -5.7  , 1.2] ,[ 4.196,  5.7, 1.2], [ 4.196, -9.2  , 1.2] ,[  4.196 , 9.2, 1.2]] \n",
    "    orientation_euler_angles = [[0,-90*Units.degrees,0.] ,[0,-90*Units.degrees,0.]  ,[0,-90*Units.degrees,0.] , [0,-90*Units.degrees,0.] ,[0,-90*Units.degrees,0.] , [0,-90*Units.degrees,0.]  ]  \n",
    "\n",
    "    \n",
    "    assigned_propulsor_list = []          \n",
    "    for i in range(len(origins)): \n",
    "        propulsor_i                                       = deepcopy(lift_propulsor)\n",
    "        propulsor_i.tag                                   = 'lift_rotor_propulsor_' + str(i + 1)\n",
    "        propulsor_i.rotor.tag                             = 'lift_rotor_' + str(i + 1) \n",
    "        propulsor_i.rotor.origin                          = [origins[i]] \n",
    "        propulsor_i.rotor.orientation_euler_angle         = orientation_euler_angles[i]\n",
    "        propulsor_i.motor.tag                             = 'lift_rotor_motor_' + str(i + 1)   \n",
    "        propulsor_i.motor.origin                          = [origins[i]]  \n",
    "        propulsor_i.electronic_speed_controller.tag       = 'lift_rotor_esc_' + str(i + 1)  \n",
    "        propulsor_i.electronic_speed_controller.origin    = [origins[i]]  \n",
    "        propulsor_i.nacelle.tag                           = 'lift_rotor_nacelle_' + str(i + 1)  \n",
    "        propulsor_i.nacelle.origin                        = [origins[i]]    \n",
    "        network.propulsors.append(propulsor_i) \n",
    "        assigned_propulsor_list.append(propulsor_i.tag) \n",
    "    lift_rotor_bus.assigned_propulsors = [assigned_propulsor_list] \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------  \n",
    "    # Additional Bus Loads\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------            \n",
    "    # Payload   \n",
    "    payload                                                 = RCAIDE.Library.Components.Systems.Avionics()\n",
    "    payload.power_draw                                      = 10. # Watts \n",
    "    payload.mass_properties.mass                            = 1.0 * Units.kg\n",
    "    lift_rotor_bus.payload                                        = payload \n",
    "                             \n",
    "    # Avionics                            \n",
    "    avionics                                                = RCAIDE.Library.Components.Systems.Avionics()\n",
    "    avionics.power_draw                                     = 10. # Watts  \n",
    "    avionics.mass_properties.mass                           = 1.0 * Units.kg\n",
    "    lift_rotor_bus.avionics                                       = avionics    \n",
    "\n",
    "   \n",
    "    network.busses.append(lift_rotor_bus)       \n",
    "        \n",
    "    # append energy network \n",
    "    vehicle.append_energy_network(network)\n",
    "    \n",
    "\n",
    "    #------------------------------------------------------------------------------------------------------------------------------------\n",
    "    # ##################################   Determine Vehicle Mass Properties Using Physic Based Methods  ################################ \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------   \n",
    "    converged_vehicle, breakdown = converge_physics_based_weight_buildup(vehicle)  \n",
    "    print(breakdown) \n",
    "     \n",
    "    # ------------------------------------------------------------------\n",
    "    #   CG Location\n",
    "    # ------------------------------------------------------------------    \n",
    "    _ , _ =  compute_vehicle_center_of_gravity(converged_vehicle) \n",
    "    CG_location  = converged_vehicle.mass_properties.center_of_gravity\n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Operating Aircraft MOI\n",
    "    # ------------------------------------------------------------------    \n",
    "    _, _ = compute_aircraft_moment_of_inertia(converged_vehicle, CG_location) \n",
    "\n",
    "    return converged_vehicle\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Configurations Setup\n",
    "\n",
    "The **`configs_setup`** function defines the different vehicle configurations (referred to as **configs**) used during the simulation. Configurations allow for modifications to the baseline vehicle, such as altering control surface settings, without redefining the entire vehicle.\n",
    "\n",
    "---\n",
    "\n",
    "### 1. Base Configuration\n",
    "\n",
    "The **base configuration** serves as the foundation for all other configurations. It is defined to match the baseline vehicle created in the `vehicle_setup` function. Configurations in RCAIDE are created as **containers** using **RCAIDE Data classes**. These classes provide additional functionality, such as the ability to **append** new configurations or modifications.\n",
    "\n",
    "---\n",
    "\n",
    "### 2. Cruise Configuration\n",
    "\n",
    "The **cruise configuration** demonstrates that new configurations can inherit properties directly from existing configurations (e.g., the base config). This avoids redundancy and ensures consistency across configurations.\n",
    "\n",
    "- The cruise configuration typically reflects the clean flight condition, with no high-lift devices like flaps or slats deployed.\n",
    "  \n",
    "---\n",
    "\n",
    "### 3. Remaining Configurations\n",
    "\n",
    "The remaining configurations, such as **climb**, **approach**, and **hover**, follow a similar pattern:\n",
    "\n",
    "- Hover Climb\n",
    "- Hover-to-Cruise\n",
    "- Approach\n",
    "- Hover\n",
    "\n",
    "Each configuration is built upon the previous one or the base configuration, ensuring modularity and easy customization.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.883623Z",
     "iopub.status.busy": "2025-01-08T13:15:34.883414Z",
     "iopub.status.idle": "2025-01-08T13:15:34.896552Z",
     "shell.execute_reply": "2025-01-08T13:15:34.896124Z"
    }
   },
   "outputs": [],
   "source": [
    " \n",
    "def configs_setup(vehicle):\n",
    "    '''\n",
    "    The configration set up below the scheduling of the nacelle angle and vehicle speed.\n",
    "    Since one prop_rotor operates at varying flight conditions, one must perscribe  the \n",
    "    pitch command of the prop_rotor which us used in the variable pitch model in the analyses\n",
    "    Note: low pitch at take off & low speeds, high pitch at cruise\n",
    "    '''\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Initialize Configurations\n",
    "    # ------------------------------------------------------------------ \n",
    "    configs = RCAIDE.Library.Components.Configs.Config.Container() \n",
    "    base_config                                                       = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    base_config.tag                                                   = 'base'     \n",
    "    configs.append(base_config)\n",
    "    \n",
    "\n",
    "    propulsor =  vehicle.networks.electric.propulsors['prop_rotor_propulsor_1'] \n",
    " \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Hover Climb Configuration\n",
    "    # ------------------------------------------------------------------\n",
    "    config                                                 = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    config.tag                                             = 'vertical_flight'\n",
    "    vector_angle                                           = 90.0 * Units.degrees   \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    configs.append(config)\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #    \n",
    "    # ------------------------------------------------------------------\n",
    "    config                                            = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    vector_angle                                      = 75.0  * Units.degrees   \n",
    "    config.tag                                        = 'vertical_transition'\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.pitch_command   = propulsor.rotor.hover.design_pitch_command  \n",
    "    configs.append(config) \n",
    " \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Hover-to-Cruise Configuration\n",
    "    # ------------------------------------------------------------------\n",
    "    config                                            = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    config.tag                                        = 'descent_transtion'\n",
    "    vector_angle                                      = 65.0  * Units.degrees    \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_1'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_2'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_3'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_4'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_5'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_6'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_1'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5 \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_2'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5 \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_3'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5 \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_4'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5 \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_5'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5 \n",
    "    config.networks.electric.propulsors['lift_rotor_propulsor_6'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  * 0.5   \n",
    "    configs.append(config)    \n",
    "\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Hover-to-Cruise Configuration\n",
    "    # ------------------------------------------------------------------\n",
    "    config                                            = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    config.tag                                        = 'climb_transtion'\n",
    "    vector_angle                                      = 85.0  * Units.degrees \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "     \n",
    "    configs.append(config) \n",
    "  \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Cruise Configuration\n",
    "    # ------------------------------------------------------------------\n",
    "    config                                                 = RCAIDE.Library.Components.Configs.Config(vehicle)\n",
    "    config.tag                                             = 'forward_flight'   \n",
    "    vector_angle                                           = 0.0 * Units.degrees   \n",
    "    config.networks.electric.busses.lift_rotor_bus.active  = False   \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.orientation_euler_angles =  [0, vector_angle, 0]\n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_1'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_2'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_3'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_4'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_5'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command  \n",
    "    config.networks.electric.propulsors['prop_rotor_propulsor_6'].rotor.pitch_command   = propulsor.rotor.cruise.design_pitch_command   \n",
    "    configs.append(config)       \n",
    "\n",
    "    return configs\n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Base Analysis\n",
    "\n",
    "The **`base_analysis`** function defines the analyses required for evaluating the aircraft. Each analysis addresses a specific aspect of the vehicle’s performance or characteristics. Below are the key analyses, their purpose, and considerations for their use.\n",
    "\n",
    "---\n",
    "\n",
    "### 1. Weights Analysis\n",
    "\n",
    "The **weights analysis** calculates the distribution of the aircraft's weight across various components. This method is based on **empirical correlations** designed for **tube-and-wing transport aircraft** configurations.\n",
    "\n",
    "- Provides a breakdown of component weights (e.g., wings, fuselage, engines).\n",
    "- While informative, the results of this analysis are **not directly used** in the performance evaluation.\n",
    "\n",
    "---\n",
    "\n",
    "### 2. Aerodynamics Analysis\n",
    "\n",
    "The **aerodynamics analysis** evaluates the aerodynamic performance of the aircraft. It uses RCAIDE's **fidelity zero** method:\n",
    "\n",
    "- **Fidelity Zero**: This is RCAIDE's baseline aerodynamic analysis method, suitable for **subsonic transport aircraft**.\n",
    "- Similar to aerodynamic methods found in conceptual design texts.\n",
    "- Provides estimates for lift, drag, and other aerodynamic coefficients.\n",
    "\n",
    "> Note: Higher-fidelity aerodynamic methods are available for more detailed analyses if needed.\n",
    "\n",
    "---\n",
    "\n",
    "### 3. Stability Analysis\n",
    "\n",
    "The **stability analysis** calculates stability derivatives for the aircraft. While it is **not used** in the current mission setup, it can be run post-mission for checks or additional analysis.\n",
    "\n",
    "- Like the aerodynamic method, it uses **fidelity zero** for baseline stability analysis.\n",
    "- Applicable for basic stability checks of subsonic transport aircraft.\n",
    "\n",
    "---\n",
    "\n",
    "### 4. Energy Analysis\n",
    "\n",
    "The **energy analysis** runs the energy network attached to the vehicle. For this turboprop-powered aircraft:\n",
    "\n",
    "- The analysis evaluates the **turboprop energy network**.\n",
    "- Ensures the propulsion system behavior, such as thrust and fuel consumption, is accounted for.\n",
    "\n",
    "---\n",
    "\n",
    "### 5. Planet Analysis\n",
    "\n",
    "The **planet analysis** defines the planetary environment the vehicle operates in. This setup allows for the attachment of an atmospheric model.\n",
    "\n",
    "---\n",
    "\n",
    "### 6. Atmosphere Analysis\n",
    "\n",
    "The **atmosphere analysis** sets the atmospheric conditions for the simulation. A common choice is the **US 1976 Standard Atmosphere**, which provides:\n",
    "\n",
    "- Standard temperature, pressure, and density profiles with altitude.\n",
    "- Consistent atmospheric conditions for performance evaluations.\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.898225Z",
     "iopub.status.busy": "2025-01-08T13:15:34.898052Z",
     "iopub.status.idle": "2025-01-08T13:15:34.901948Z",
     "shell.execute_reply": "2025-01-08T13:15:34.901488Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def base_analysis(vehicle):\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Initialize the Analyses\n",
    "    # ------------------------------------------------------------------     \n",
    "    analyses = RCAIDE.Framework.Analyses.Vehicle() \n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Weights\n",
    "    weights         = RCAIDE.Framework.Analyses.Weights.Weights_EVTOL()\n",
    "    weights.vehicle = vehicle\n",
    "    analyses.append(weights)\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #  Aerodynamics Analysis\n",
    "    aerodynamics         = RCAIDE.Framework.Analyses.Aerodynamics.Vortex_Lattice_Method() \n",
    "    aerodynamics.vehicle = vehicle\n",
    "    aerodynamics.settings.drag_coefficient_increment = 0.0000\n",
    "    analyses.append(aerodynamics)   \n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #  Stability Analysis\n",
    "    stability         = RCAIDE.Framework.Analyses.Stability.Vortex_Lattice_Method() \n",
    "    stability.vehicle = vehicle \n",
    "    analyses.append(stability)\n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Energy\n",
    "    energy          = RCAIDE.Framework.Analyses.Energy.Energy()\n",
    "    energy.vehicle = vehicle \n",
    "    analyses.append(energy)\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #  Planet Analysis\n",
    "    planet = RCAIDE.Framework.Analyses.Planets.Earth()\n",
    "    analyses.append(planet)\n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #  Atmosphere Analysis\n",
    "    atmosphere = RCAIDE.Framework.Analyses.Atmospheric.US_Standard_1976()\n",
    "    atmosphere.features.planet = planet.features\n",
    "    analyses.append(atmosphere)   \n",
    "\n",
    "    # done!\n",
    "    return analyses    \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Analyses Setup\n",
    "\n",
    "The **`analyses_setup`** function assigns a set of analyses to each vehicle configuration. Analyses are used to evaluate the aircraft’s performance, aerodynamics, energy systems, and other characteristics for a given configuration.\n",
    "\n",
    "---\n",
    "\n",
    "### 1. Overview of Analyses Assignment\n",
    "\n",
    "In this tutorial, **all configurations** share the same set of analyses. However, this function provides the flexibility to assign a unique set of analyses to any specific configuration.\n",
    "\n",
    "---\n",
    "\n",
    "### 2. Purpose of Analyses Assignment\n",
    "\n",
    "The analyses ensure that the defined vehicle configurations (e.g., **cruise**, **takeoff**, **landing**) are evaluated correctly during the simulation. Each configuration can have:\n",
    "\n",
    "- **Common Analyses**: Shared across multiple configurations for simplicity.\n",
    "- **Custom Analyses**: Tailored to a specific phase of flight or performance evaluation.\n",
    "\n",
    "---\n",
    "\n",
    "### 3. Typical Analyses Included\n",
    "\n",
    "The following analyses are typically assigned to each configuration:\n",
    "\n",
    "- **Weights Analysis**: Computes weight distribution across components.\n",
    "- **Aerodynamics Analysis**: Estimates lift, drag, and aerodynamic coefficients.\n",
    "- **Stability Analysis**: Evaluates stability derivatives for flight control assessments.\n",
    "- **Energy Analysis**: Runs the energy network (e.g., turboprop engine) for thrust and fuel performance.\n",
    "- **Atmosphere Analysis**: Sets atmospheric conditions using standard atmospheric models.\n",
    "\n",
    "By assigning these analyses, the vehicle's behavior under different configurations (e.g., **cruise**, **takeoff**, **landing**) can be comprehensively evaluated.\n",
    "\n",
    "---\n",
    "\n",
    "### 4. Customizing Analyses\n",
    "\n",
    "To assign a **custom analysis set** for a specific configuration:\n",
    "\n",
    "1. Define a new analysis function tailored to the desired evaluation.\n",
    "2. Replace the default analyses for the target configuration by calling the custom function.\n",
    "\n",
    "For example, the **takeoff configuration** might use a modified aerodynamic analysis to account for flap and slat deployment.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.903622Z",
     "iopub.status.busy": "2025-01-08T13:15:34.903425Z",
     "iopub.status.idle": "2025-01-08T13:15:34.906467Z",
     "shell.execute_reply": "2025-01-08T13:15:34.906012Z"
    }
   },
   "outputs": [],
   "source": [
    "def analyses_setup(configs):\n",
    "\n",
    "    analyses = RCAIDE.Framework.Analyses.Analysis.Container()\n",
    "\n",
    "    # build a base analysis for each config\n",
    "    for tag,config in configs.items():\n",
    "        analysis = base_analysis(config)\n",
    "        analyses[tag] = analysis\n",
    "\n",
    "    return analyses\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Mission Setup\n",
    "\n",
    "The **`mission_setup`** function defines the **mission profile** used to compute the aircraft's performance. A mission profile consists of sequential **segments** that represent different phases of flight, such as climb, cruise, and descent.\n",
    "\n",
    "---\n",
    "\n",
    "### 1. Mission Profile Overview\n",
    "\n",
    "A mission profile is made up of individual flight segments. Each segment specifies the aircraft's flight conditions, such as:\n",
    "\n",
    "- **Altitude**\n",
    "- **Speed**\n",
    "- **Range**\n",
    "- **Time**\n",
    "\n",
    "These segments are simulated sequentially, allowing for a detailed performance analysis of the vehicle across all phases of flight.\n",
    "\n",
    "---\n",
    "\n",
    "### 2. Segments in the Mission Profile\n",
    "\n",
    "Common segments in a mission profile include:\n",
    "\n",
    "- **Taxi**: Ground movement of the aircraft before takeoff and after landing.\n",
    "- **Takeoff**: Acceleration and lift-off phase with high-lift devices deployed.\n",
    "- **Climb**: Gradual ascent to cruise altitude, often with reduced flap/slat deployment.\n",
    "- **Cruise**: Level flight at a constant altitude and speed for fuel-efficient operation.\n",
    "- **Descent**: Controlled reduction in altitude as the aircraft prepares for landing.\n",
    "- **Landing**: Final phase of flight with maximum flap and slat deployment for touchdown.\n",
    "\n",
    "Each segment defines specific performance conditions and parameters, such as speed, altitude, and duration.\n",
    "\n",
    "\n",
    "For more information on the mission solver and its implementation, refer to the relevant RCAIDE documentation.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.908538Z",
     "iopub.status.busy": "2025-01-08T13:15:34.908376Z",
     "iopub.status.idle": "2025-01-08T13:15:34.923838Z",
     "shell.execute_reply": "2025-01-08T13:15:34.923393Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def mission_setup(analyses):\n",
    "    \n",
    "    number_of_cpts         =  16\n",
    "    radius_Vert1           = 3600*Units.feet\n",
    "    radius_Vert2           = 3600*Units.feet\n",
    "    dep_heading            = 0 * Units.feet \n",
    "    app_heading            = 180 *  Units.degrees \n",
    "    dep_sector             =  90 *  Units.degrees \n",
    "    app_sector             =  90 *  Units.degrees \n",
    "    path_heading           = 180 *  Units.degrees \n",
    "    level_cruise_distance  =  40 * Units.nmi\n",
    "    cruise_altitude        =  1000 * Units.feet\n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Initialize the Mission\n",
    "    # ------------------------------------------------------------------\n",
    "    mission = RCAIDE.Framework.Mission.Sequential_Segments()\n",
    "    mission.tag = 'mission'\n",
    "\n",
    "    # unpack Segments module\n",
    "    Segments = RCAIDE.Framework.Mission.Segments\n",
    "    \n",
    "    \n",
    "    base_segment = Segments.Segment()\n",
    "    base_segment.state.numerics.number_of_control_points    = number_of_cpts\n",
    "    \n",
    "\n",
    "    # ------------------------------------------------------------------\n",
    "    #   Mission Constants\n",
    "    # ------------------------------------------------------------------\n",
    "    hover_altitude = 50.0 * Units.ft\n",
    "    \n",
    "    pattern_speed    = 100. * Units['mph'] \n",
    "    cruise_speed     = 125. * Units['mph']\n",
    "    transition_speed = 35.  * Units['mph']\n",
    "    \n",
    "    transition_climb_rate = 824.0 * Units['ft/min']\n",
    "    \n",
    "    cruise_climb_rate =  500. * Units['ft/min']\n",
    "    pattern_altitude  =  500.0 * Units.ft\n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Vertical Climb from vertiport A\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                                            = Segments.Vertical_Flight.Climb(base_segment)\n",
    "    segment.tag                                        = \"Vertical_Climb\"   \n",
    "    segment.analyses.extend(analyses.vertical_flight) \n",
    "    segment.altitude_start                             = 0.0  * Units.ft  \n",
    "    segment.altitude_end                               = hover_altitude   \n",
    "    segment.climb_rate                                 = 500. * Units['ft/min'] \n",
    "    segment.initial_battery_state_of_charge            = 1.0 \n",
    "    segment.true_course                                = 0   * Units.degree # this is the true couse of the starting value  \n",
    "            \n",
    "    # define flight dynamics to model  \n",
    "    segment.flight_dynamics.force_z                        = True   \n",
    "    segment.flight_dynamics.moment_y                       = True\n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "       \n",
    "    mission.append_segment(segment)\n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Horizontal Transition\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                                               = Segments.Cruise.Constant_Acceleration_Constant_Altitude(base_segment)\n",
    "    segment.tag                                           = \"Horizontal_Transition\"  \n",
    "    segment.analyses.extend( analyses.vertical_transition)   \n",
    "    segment.air_speed_end                                 = transition_speed    \n",
    "    segment.acceleration                                  = 1.0\n",
    "    segment.true_course                                   = dep_heading  \n",
    "\n",
    "    # define flight dynamics to model \n",
    "    segment.flight_dynamics.force_x                        = True  \n",
    "    segment.flight_dynamics.force_z                        = True  \n",
    "    segment.flight_dynamics.moment_y                       = True     \n",
    "    \n",
    "    # define flight controls\n",
    "    segment.assigned_control_variables.body_angle.active             = True\n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "    # IF NEEDED ADD   segment.assigned_control_variables.body_angle.active             = True \n",
    "    mission.append_segment(segment) \n",
    "     \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Transition and climb to departure pattern High-speed\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                          = Segments.Climb.Linear_Speed_Constant_Rate(base_segment)\n",
    "    segment.tag                      = \"Climb_Transition\" \n",
    "    segment.analyses.extend(analyses.climb_transtion) \n",
    "    segment.climb_rate               = transition_climb_rate \n",
    "    segment.air_speed_end            = pattern_speed\n",
    "    segment.altitude_end             = pattern_altitude\n",
    "    segment.true_course              = dep_heading\n",
    "            \n",
    "    # define flight dynamics to model \n",
    "    segment.flight_dynamics.force_x                       = True  \n",
    "    segment.flight_dynamics.force_z                       = True \n",
    "    segment.flight_dynamics.moment_y                      = True     \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.body_angle.active             = True\n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "                \n",
    "    mission.append_segment(segment)   \n",
    "  \n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #   Climb to cruise altitude from pattern\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                           = Segments.Climb.Linear_Speed_Constant_Rate(base_segment)\n",
    "    segment.tag                       = \"Cruise_Climb\"  \n",
    "    segment.analyses.extend(analyses.forward_flight) \n",
    "    segment.climb_rate                = cruise_climb_rate\n",
    "    segment.air_speed_start           = pattern_speed\n",
    "    segment.air_speed_end             = cruise_speed\n",
    "    segment.altitude_end              = cruise_altitude\n",
    "    segment.true_course               = path_heading    \n",
    "\n",
    "    # define flight dynamics to model   \n",
    "    segment.flight_dynamics.force_x                       = True  \n",
    "    segment.flight_dynamics.force_z                       = True     \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'] ] \n",
    "    segment.assigned_control_variables.body_angle.active             = True                \n",
    "                 \n",
    "    mission.append_segment(segment)  \n",
    "\n",
    "     # ------------------------------------------------------------------\n",
    "    #  Cruise \n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                          = Segments.Cruise.Constant_Speed_Constant_Altitude(base_segment)\n",
    "    segment.tag                      = \"Cruise\"  \n",
    "    segment.analyses.extend(analyses.forward_flight) \n",
    "    segment.altitude                 = cruise_altitude\n",
    "    segment.air_speed                = cruise_speed\n",
    "    segment.distance                 = level_cruise_distance\n",
    "    segment.true_course              = path_heading\n",
    "                                                                     \n",
    "    # define flight dynamics to model                                \n",
    "    segment.flight_dynamics.force_x                                  = True  \n",
    "    segment.flight_dynamics.force_z                                  = True     \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'] ] \n",
    "    segment.assigned_control_variables.body_angle.active             = True                \n",
    "         \n",
    "    mission.append_segment(segment)   \n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Descent from cruise to approach pattern\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                          = Segments.Climb.Linear_Speed_Constant_Rate(base_segment)\n",
    "    segment.tag                      = \"Cruise_Descent\"  \n",
    "    segment.analyses.extend(analyses.forward_flight)\n",
    "    segment.climb_rate               = -cruise_climb_rate\n",
    "    segment.air_speed_start          = cruise_speed\n",
    "    segment.air_speed_end            = pattern_speed\n",
    "    segment.altitude_start           = cruise_altitude\n",
    "    segment.altitude_end             = pattern_altitude\n",
    "    segment.true_course              = path_heading\n",
    "            \n",
    "    # define flight dynamics to model \n",
    "    segment.flight_dynamics.force_x                       = True  \n",
    "    segment.flight_dynamics.force_z                       = True     \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'] ] \n",
    "    segment.assigned_control_variables.body_angle.active             = True                \n",
    "       \n",
    "    mission.append_segment(segment)  \n",
    "     \n",
    "         \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Transition and descent to vertiport\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                          = Segments.Descent.Linear_Speed_Constant_Rate(base_segment)\n",
    "    segment.tag                      = \"Transition_Descend\" \n",
    "    segment.analyses.extend(analyses.descent_transtion)\n",
    "    \n",
    "    segment.descent_rate             = transition_climb_rate    \n",
    "    segment.air_speed_start          = pattern_speed\n",
    "    segment.air_speed_end            = transition_speed   \n",
    "    segment.altitude_end             = hover_altitude\n",
    "    segment.true_course              = app_heading\n",
    "\n",
    "    # define flight dynamics to model \n",
    "    segment.flight_dynamics.force_x                        = True  \n",
    "    segment.flight_dynamics.force_z                        = True  \n",
    "    segment.flight_dynamics.moment_y                       = True     \n",
    "    \n",
    "    # define flight controls\n",
    "    segment.assigned_control_variables.body_angle.active             = True\n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "    mission.append_segment(segment)   \n",
    "    \n",
    "    # ------------------------------------------------------------------\n",
    "    #  Horizontal Transition\n",
    "    # ------------------------------------------------------------------ \n",
    "    segment                                               = Segments.Cruise.Constant_Acceleration_Constant_Altitude(base_segment)\n",
    "    segment.tag                                           = \"Horizontal_Transition_Approach\"  \n",
    "    segment.analyses.extend( analyses.vertical_transition)   \n",
    "    segment.air_speed_end                                 = 0  \n",
    "    segment.acceleration                                  = -1.0\n",
    "    segment.true_course                                   = dep_heading  \n",
    "\n",
    "    # define flight dynamics to model \n",
    "    segment.flight_dynamics.force_x                       = True  \n",
    "    segment.flight_dynamics.force_z                       = True\n",
    "    segment.flight_dynamics.moment_y                       = True  \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True\n",
    "    segment.assigned_control_variables.body_angle.active             = True # added this line!!\n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "    mission.append_segment(segment)   \n",
    "    \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    # Vertical Descent \n",
    "    #------------------------------------------------------------------------------------------------------------------------------------ \n",
    "    segment                                                         = Segments.Vertical_Flight.Descent(base_segment)\n",
    "    segment.tag                                                     = \"Vertical_Descent\" \n",
    "    segment.analyses.extend( analyses.vertical_flight)                \n",
    "    segment.altitude_end                                            = 0.   * Units.ft  \n",
    "    segment.descent_rate                                            = 300. * Units['ft/min'] \n",
    "    segment.true_course                                             = app_heading\n",
    "     \n",
    "    # define flight dynamics to model  \n",
    "    segment.flight_dynamics.force_z                        = True   \n",
    "    segment.flight_dynamics.moment_y                       = True  \n",
    "    \n",
    "    # define flight controls \n",
    "    segment.assigned_control_variables.throttle.active               = True           \n",
    "    segment.assigned_control_variables.throttle.assigned_propulsors  = [['prop_rotor_propulsor_1','prop_rotor_propulsor_2','prop_rotor_propulsor_3',\n",
    "                                                                         'prop_rotor_propulsor_4','prop_rotor_propulsor_5','prop_rotor_propulsor_6'],\n",
    "                                                                        ['lift_rotor_propulsor_1','lift_rotor_propulsor_2','lift_rotor_propulsor_3',\n",
    "                                                                         'lift_rotor_propulsor_4', 'lift_rotor_propulsor_5', 'lift_rotor_propulsor_6']]\n",
    "       \n",
    "    mission.append_segment(segment)  \n",
    "    \n",
    "    \n",
    "    return mission \n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Missions Setup\n",
    "\n",
    "The `missions_setup` function is responsible for setting up a list of missions. This allows multiple missions to be incorporated if desired, but only one is used here.\n",
    "\n",
    "1. **Initialize Missions Object**: It creates an empty `Missions` object from the `RCAIDE.Framework.Mission` module.\n",
    "2. **Tag the Mission**: It assigns the tag `'base_mission'` to the provided `mission` object. This tag is used to identify the mission.\n",
    "3. **Add Mission to List**: It adds the tagged `mission` to the `Missions` object.\n",
    "4. **Return Missions Object**: Finally, it returns the `Missions` object, which now contains the tagged mission.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.925438Z",
     "iopub.status.busy": "2025-01-08T13:15:34.925262Z",
     "iopub.status.idle": "2025-01-08T13:15:34.928282Z",
     "shell.execute_reply": "2025-01-08T13:15:34.927722Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def missions_setup(mission): \n",
    " \n",
    "    missions         = RCAIDE.Framework.Mission.Missions()\n",
    "    \n",
    "    # base mission \n",
    "    mission.tag  = 'base_mission'\n",
    "    missions.append(mission)\n",
    " \n",
    "    return missions \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot Mission\n",
    "\n",
    "The last function in this file is used to plot the performance results from the mission evaluation. The results shown are not an exhaustive list of RCAIDE outputs, and custom plotting routines can be created."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.930267Z",
     "iopub.status.busy": "2025-01-08T13:15:34.929942Z",
     "iopub.status.idle": "2025-01-08T13:15:34.933284Z",
     "shell.execute_reply": "2025-01-08T13:15:34.932811Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def plot_results(results): \n",
    "    # Plots fligh conditions \n",
    "    plot_flight_conditions(results) \n",
    "    \n",
    "    # Plot arcraft trajectory\n",
    "    plot_flight_trajectory(results)\n",
    "    \n",
    "    # Plot Aerodynamic Coefficients\n",
    "    plot_aerodynamic_coefficients(results)  \n",
    "     \n",
    "    # Plot Aircraft Stability\n",
    "    plot_longitudinal_stability(results) \n",
    "    \n",
    "    # Plot Aircraft Electronics \n",
    "    plot_battery_temperature(results)\n",
    "    plot_battery_cell_conditions(results) \n",
    "    plot_battery_degradation(results) \n",
    "    plot_electric_propulsor_efficiencies(results) \n",
    "    \n",
    "    # Plot Propeller Conditions \n",
    "    plot_rotor_conditions(results) \n",
    "    plot_disc_and_power_loading(results) \n",
    "      \n",
    "    return\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save Aircraft Geometry\n",
    "\n",
    "**`save_aircraft_geometry`** is a function that saves an aircraft geometry to a pickle (.pkl) file. This is useful for saving the geometry to a file for later use.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.935069Z",
     "iopub.status.busy": "2025-01-08T13:15:34.934744Z",
     "iopub.status.idle": "2025-01-08T13:15:34.937507Z",
     "shell.execute_reply": "2025-01-08T13:15:34.937073Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def save_aircraft_geometry(geometry,filename): \n",
    "    pickle_file  = filename + '.pkl'\n",
    "    with open(pickle_file, 'wb') as file:\n",
    "        pickle.dump(geometry, file) \n",
    "    return \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load Aircraft Geometry\n",
    "\n",
    "**`load_aircraft_geometry`** is a function that loads an aircraft geometry from a pickle (.pkl)file. This geometry may have been created earlier or in a separate file. \n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.939431Z",
     "iopub.status.busy": "2025-01-08T13:15:34.939086Z",
     "iopub.status.idle": "2025-01-08T13:15:34.941892Z",
     "shell.execute_reply": "2025-01-08T13:15:34.941446Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def load_aircraft_geometry(filename):  \n",
    "    load_file = filename + '.pkl' \n",
    "    with open(load_file, 'rb') as file:\n",
    "        results = pickle.load(file) \n",
    "    return results\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load Rotor\n",
    "\n",
    "**`load_rotor`** is a function that loads a rotor from a file. This rotor may have been created earlier or in a separate file. Documentation for the load function can be found in the RCAIDE documentation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.943755Z",
     "iopub.status.busy": "2025-01-08T13:15:34.943393Z",
     "iopub.status.idle": "2025-01-08T13:15:34.946102Z",
     "shell.execute_reply": "2025-01-08T13:15:34.945652Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def load_rotor(filename):\n",
    "    rotor =  load(filename)\n",
    "    return rotor\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save Rotor\n",
    "\n",
    "**`save_rotor`** is a function that saves a rotor to a file. This is useful for saving the rotor to a file for later use.\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.947957Z",
     "iopub.status.busy": "2025-01-08T13:15:34.947589Z",
     "iopub.status.idle": "2025-01-08T13:15:34.950074Z",
     "shell.execute_reply": "2025-01-08T13:15:34.949635Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "def save_rotor(rotor, filename):\n",
    "    save(rotor, filename)\n",
    "    return \n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Main Script\n",
    "\n",
    "The main script is used to call each of the functions defined above to execute the mission. A main script is used to run the functions for increased readability and maintainability.\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-08T13:15:34.951687Z",
     "iopub.status.busy": "2025-01-08T13:15:34.951496Z",
     "iopub.status.idle": "2025-01-08T13:23:56.533201Z",
     "shell.execute_reply": "2025-01-08T13:23:56.532626Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/runner/work/RCAIDE_LEADS/RCAIDE_LEADS/Tutorials/Missions/../../Regressions/Vehicles/\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936649]\n",
      "Inputs\n",
      "[ 0.151001    2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936512]\n",
      "Inputs\n",
      "[ 0.151       1.999999    1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936652]\n",
      "Inputs\n",
      "[ 0.151       2.          1.000001    0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936653]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.075501    0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936568]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359978  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936703]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.000001\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.08936659]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.500001    0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936624]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359978  0.5         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936699]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.500001    0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936643]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.500001    0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936649]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359778  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.08936649]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.300001\n",
      " -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.08936678]\n",
      "Inputs\n",
      "[ 0.151       2.          1.          0.0755      0.52359878  1.\n",
      "  0.5         0.52359878  0.5         0.5         0.52359878  0.3\n",
      " -0.52359778]\n",
      "Obj\n",
      "[0.08936682]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369507]\n",
      "Inputs\n",
      "[ 0.075501    0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369682]\n",
      "Inputs\n",
      "[ 0.0755      0.250001    0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369547]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87500088  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369491]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.030201    0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.18369165]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539716  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369807]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  1.999999\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369529]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.250001    0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369758]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519553  0.3         0.5         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369197]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.300001    0.5         0.52359878  0.3\n",
      " -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.18369505]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.500001    0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369507]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359778  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.18369507]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.300001\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.1836887]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.87499988  0.0302      0.78539816  2.\n",
      "  0.25        0.67519453  0.3         0.5         0.52359878  0.3\n",
      " -0.52359778]\n",
      "Obj\n",
      "[0.18369104]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     0.25       0.80796137 0.0302     0.11702443 2.\n",
      " 0.25       0.24497422 0.3        0.5        0.52359878 0.3\n",
      " 0.34501245]\n",
      "Obj\n",
      "[-0.10195855]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86344404  0.0302      0.67018647  2.\n",
      "  0.25        0.60103481  0.3         0.5         0.52359878  0.3\n",
      " -0.37387092]\n",
      "Obj\n",
      "[0.15789959]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013211]\n",
      "Inputs\n",
      "[ 0.075501    0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013402]\n",
      "Inputs\n",
      "[ 0.0755      0.250001    0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.17013254]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86882091  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013195]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.030201    0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17012814]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378496  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17012887]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  1.999999\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013233]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.250001    0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.17013456]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553557  0.3         0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17012881]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.300001    0.5         0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013209]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.500001    0.52359878  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013211]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359778  0.3\n",
      " -0.44352563]\n",
      "Obj\n",
      "[0.17013211]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.300001\n",
      " -0.44352563]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.17012524]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.86881991  0.0302      0.72378396  2.\n",
      "  0.25        0.63553457  0.3         0.5         0.52359878  0.3\n",
      " -0.44352463]\n",
      "Obj\n",
      "[0.1701278]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.12584095  0.43306401  1.36809409  0.03138124  0.72544575  2.\n",
      "  0.37762118  0.78539816  0.3         0.51098609  0.48544611  0.3\n",
      " -0.45133882]\n",
      "Obj\n",
      "[0.01715028]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340427]\n",
      "Inputs\n",
      "[ 0.08053509  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340626]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683074   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.16340473]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874833  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.16340409]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031912  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16339985]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395114  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340078]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  1.999999\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340451]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276312  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.16340681]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052193  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.16340073]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.300001    0.50109861  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340425]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109961  0.51978351  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340427]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978451  0.3\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16340427]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.300001\n",
      " -0.44430695]\n",
      "Obj\n",
      "[0.16339682]\n",
      "Inputs\n",
      "[ 0.08053409  0.2683064   0.91874733  0.03031812  0.72395014  2.\n",
      "  0.26276212  0.65052093  0.3         0.50109861  0.51978351  0.3\n",
      " -0.44430595]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.16339961]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.302       0.25        0.84298768  0.11986895  0.78539816  2.\n",
      "  0.50809865  0.78539816  0.5428524   0.54008101  0.37684489  0.3\n",
      " -0.35714386]\n",
      "Obj\n",
      "[0.67584567]\n",
      "Inputs\n",
      "[ 0.10268069  0.26647576  0.91117137  0.03927321  0.73009494  2.\n",
      "  0.28729577  0.66400865  0.32428524  0.50499685  0.50548965  0.3\n",
      " -0.43559064]\n",
      "Obj\n",
      "[0.11165338]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.1388504]\n",
      "Inputs\n",
      "[ 0.09248375  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13885289]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731972  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13885107]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146609   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13885015]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03515062  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13884589]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726642  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13884584]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  1.999999\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13885073]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599966  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13885364]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577989   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13884581]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310351  0.50320181  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.13885038]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320281  0.5120716   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.1388504]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120726   0.3\n",
      " -0.43960428]\n",
      "Obj\n",
      "[0.1388504]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.300001\n",
      " -0.43960428]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13884057]\n",
      "Inputs\n",
      "[ 0.09248275  0.26731872  0.9146599   0.03514962  0.72726542  2.\n",
      "  0.27599866  0.6577979   0.31310251  0.50320181  0.5120716   0.3\n",
      " -0.43960328]\n",
      "Obj\n",
      "[0.13884428]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.95678273  0.34843628  0.11217391  0.78539816  2.\n",
      "  0.53295443  0.78539816  0.31635224  0.50380916  0.50994535  0.3\n",
      " -0.36896993]\n",
      "Obj\n",
      "[0.63617834]\n",
      "Inputs\n",
      "[ 0.09078448  0.33626512  0.85803754  0.04285205  0.7330787   2.\n",
      "  0.30169423  0.67055793  0.31342749  0.50326254  0.51185898  0.3\n",
      " -0.43254084]\n",
      "Obj\n",
      "[0.08238878]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622485]\n",
      "Inputs\n",
      "[ 0.09231392  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622743]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421436  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13622551]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899867  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.1362246]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03592086  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622018]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784775  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622009]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  1.999999\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.1362252]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856921  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13622821]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590749   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622006]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313601  0.50320788  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622484]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320888  0.51205034  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622485]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205134  0.3\n",
      " -0.43889793]\n",
      "Obj\n",
      "[0.13622485]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.300001\n",
      " -0.43889793]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13621454]\n",
      "Inputs\n",
      "[ 0.09231292  0.27421336  0.90899767  0.03591986  0.72784675  2.\n",
      "  0.27856821  0.6590739   0.31313501  0.50320788  0.51205034  0.3\n",
      " -0.43889693]\n",
      "Obj\n",
      "[0.13621846]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.19264646  0.8672192   0.25        0.151       0.7236604   2.\n",
      "  0.5377373   0.47151028  0.3         0.45858264  0.52359878  0.3\n",
      " -0.04043187]\n",
      "Obj\n",
      "[0.5006342]\n",
      "Inputs\n",
      "[ 0.10234628  0.33351395  0.8430979   0.04742788  0.72742811  2.\n",
      "  0.30448512  0.64031754  0.31182151  0.49874536  0.51320518  0.3\n",
      " -0.39905133]\n",
      "Obj\n",
      "[-1.91403511e-05]\n",
      "Inputs\n",
      "[ 0.09331626  0.28014342  0.90240769  0.03707067  0.72780488  2.\n",
      "  0.2811599   0.65719827  0.31300366  0.50276163  0.51216582  0.3\n",
      " -0.43491327]\n",
      "Obj\n",
      "[0.13127758]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408636]\n",
      "Inputs\n",
      "[ 0.09275293  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13408901]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680906  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408703]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611523  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.1340861]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364244   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408165]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782943  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408147]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  1.999999\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13408672]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970321  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.1340898]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825422  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408145]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307854  0.50301263  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408634]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301363  0.51210087  0.3\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13408636]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210187  0.3\n",
      " -0.43715445]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13408636]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.300001\n",
      " -0.43715445]\n",
      "Obj\n",
      "[0.13407578]\n",
      "Inputs\n",
      "[ 0.09275193  0.27680806  0.90611423  0.0364234   0.72782843  2.\n",
      "  0.27970221  0.65825322  0.31307754  0.50301263  0.51210087  0.3\n",
      " -0.43715345]\n",
      "Obj\n",
      "[0.1340798]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.15410464  0.46329318  1.5         0.04171147  0.70379904  2.\n",
      "  0.40936516  0.78539816  0.3         0.50301504  0.51258831  0.3\n",
      " -0.42251127]\n",
      "Obj\n",
      "[-0.1178599]\n",
      "Inputs\n",
      "[ 0.0988872   0.29545657  0.9655028   0.0369522   0.72542549  2.\n",
      "  0.2926685   0.67096771  0.31176978  0.50301287  0.51214961  0.3\n",
      " -0.43569013]\n",
      "Obj\n",
      "[0.12862337]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360348]\n",
      "Inputs\n",
      "[ 0.09336646  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360613]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867391  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13360416]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205408  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360322]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647728  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13359874]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758914  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13359858]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  1.999999\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360384]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099984  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13360692]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952567  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13359856]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294776  0.50301265  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360346]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301365  0.51210574  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360348]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210674  0.3\n",
      " -0.43700802]\n",
      "Obj\n",
      "[0.13360348]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.300001\n",
      " -0.43700802]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13359286]\n",
      "Inputs\n",
      "[ 0.09336546  0.27867291  0.91205308  0.03647628  0.72758814  2.\n",
      "  0.28099884  0.65952467  0.31294676  0.50301265  0.51210574  0.3\n",
      " -0.43700702]\n",
      "Obj\n",
      "[0.1335969]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.18374542  0.50912037  1.5         0.08421351  0.72945633  2.\n",
      "  0.39539743  0.78539816  0.3         0.50414012  0.5108887   0.3\n",
      " -0.43949579]\n",
      "Obj\n",
      "[-6.59174354]\n",
      "Inputs\n",
      "[ 0.10240346  0.30171765  0.97084778  0.04125     0.72777496  2.\n",
      "  0.2924387   0.67211202  0.31165209  0.5031254   0.51198404  0.3\n",
      " -0.43725679]\n",
      "Obj\n",
      "[0.10991667]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156277]\n",
      "Inputs\n",
      "[ 0.09427026  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156545]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097838  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13156346]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793355  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.1315625]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695465  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13155798]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760782  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13155777]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  1.999999\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156313]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214382  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13156627]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607844   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13155774]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128183   0.50302392  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156275]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302492  0.51209357  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156277]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209457  0.3\n",
      " -0.43703289]\n",
      "Obj\n",
      "[0.13156277]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.300001\n",
      " -0.43703289]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.13155193]\n",
      "Inputs\n",
      "[ 0.09426926  0.28097738  0.91793255  0.03695365  0.72760682  2.\n",
      "  0.28214282  0.6607834   0.3128173   0.50302392  0.51209357  0.3\n",
      " -0.43703189]\n",
      "Obj\n",
      "[0.13155605]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.1860212   0.51671045  1.49999996  0.08601192  0.73108782  2.\n",
      "  0.39480936  0.78539815  0.3         0.50420416  0.51079746  0.3\n",
      " -0.44063287]\n",
      "Obj\n",
      "[-7.17984082]\n",
      "Inputs\n",
      "[ 0.10344445  0.30455069  0.97613929  0.04185948  0.72795492  2.\n",
      "  0.29340948  0.67324488  0.31153557  0.50314195  0.51196396  0.3\n",
      " -0.43739289]\n",
      "Obj\n",
      "[0.10643103]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951079]\n",
      "Inputs\n",
      "[ 0.09518778  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951351]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333571  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12951149]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375423  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951052]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744523  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12950596]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764263  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.1295057]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  1.999999\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951116]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28327049  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951435]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66203055  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12950566]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31269012  0.50303573  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951077]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303673  0.51208061  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951079]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208161  0.3\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12951079]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.300001\n",
      " -0.43706889]\n",
      "Obj\n",
      "[0.12949972]\n",
      "Inputs\n",
      "[ 0.09518678  0.28333471  0.92375323  0.03744423  0.72764163  2.\n",
      "  0.28326949  0.66202955  0.31268912  0.50303573  0.51208061  0.3\n",
      " -0.43706789]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12950394]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.18833067  0.52551483  1.49997485  0.08795748  0.73284687  2.\n",
      "  0.39412373  0.78539271  0.30000052  0.50427124  0.51070225  0.3\n",
      " -0.44187013]\n",
      "Obj\n",
      "[-7.91848333]\n",
      "Inputs\n",
      "[ 0.10450117  0.30755272  0.98137539  0.04249556  0.72816215  2.\n",
      "  0.29435491  0.67436587  0.31142026  0.50315928  0.51194278  0.3\n",
      " -0.43754902]\n",
      "Obj\n",
      "[0.10243536]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744201]\n",
      "Inputs\n",
      "[ 0.09611922  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744476]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575751  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12744273]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951644  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744174]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03795037  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.1274371]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769468  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12743682]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  1.999999\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.1274424]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437903  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12744564]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326418  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12743678]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256324  0.50304808  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744199]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304908  0.51206683  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744201]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206783  0.3\n",
      " -0.43711691]\n",
      "Obj\n",
      "[0.12744201]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.300001\n",
      " -0.43711691]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12743071]\n",
      "Inputs\n",
      "[ 0.09611822  0.28575651  0.92951544  0.03794937  0.72769368  2.\n",
      "  0.28437803  0.66326318  0.31256224  0.50304808  0.51206683  0.3\n",
      " -0.43711591]\n",
      "Obj\n",
      "[0.12743502]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.19077693  0.48056694  1.5         0.08349496  0.72945499  2.\n",
      "  0.39642037  0.78539816  0.3         0.50426651  0.51072911  0.3\n",
      " -0.43927863]\n",
      "Obj\n",
      "[-7.32209233]\n",
      "Inputs\n",
      "[ 0.10558409  0.30523756  0.9865639   0.04250392  0.72786981  2.\n",
      "  0.29558226  0.67547668  0.31130601  0.50316993  0.51193306  0.3\n",
      " -0.43733308]\n",
      "Obj\n",
      "[0.10049843]\n",
      "Inputs\n",
      "[ 0.0970648   0.28770462  0.93522029  0.03840482  0.72771129  2.\n",
      "  0.28549845  0.66448453  0.31243661  0.50306027  0.51205345  0.3\n",
      " -0.43713852]\n",
      "Obj\n",
      "[0.12537776]\n",
      "Inputs\n",
      "[ 0.09655282  0.28665094  0.93213469  0.03815848  0.72770177  2.\n",
      "  0.28489245  0.66382394  0.31250456  0.50305368  0.51206069  0.3\n",
      " -0.43712683]\n",
      "Obj\n",
      "[0.12649909]\n",
      "Inputs\n",
      "[ 0.09632633  0.28618481  0.93076968  0.0380495   0.72769755  2.\n",
      "  0.28462436  0.6635317   0.31253462  0.50305076  0.51206389  0.3\n",
      " -0.43712166]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.1269915]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720868]\n",
      "Inputs\n",
      "[ 0.09622711  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12721144]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597956  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.1272094]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016668  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720841]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800228  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12720377]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769669  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720349]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  1.999999\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720907]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450674  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12721232]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340339  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720345]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254892  0.50304947  0.5120653   0.3\n",
      " -0.43711937]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12720867]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50305047  0.5120653   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720868]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120663   0.3\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12720868]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.300001\n",
      " -0.43711937]\n",
      "Obj\n",
      "[0.12719736]\n",
      "Inputs\n",
      "[ 0.09622611  0.28597856  0.93016568  0.03800128  0.72769569  2.\n",
      "  0.28450574  0.66340239  0.31254792  0.50304947  0.5120653   0.3\n",
      " -0.43711837]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12720168]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.14653138  0.65318803  1.5         0.08337691  0.72954231  2.\n",
      "  0.39217659  0.78100078  0.3         0.50340998  0.51178553  0.3\n",
      " -0.43836108]\n",
      "Obj\n",
      "[-3.66233238]\n",
      "Inputs\n",
      "[ 0.10125664  0.32269951  0.98714911  0.04253884  0.72788035  2.\n",
      "  0.29527282  0.67516223  0.31129313  0.50308552  0.51203733  0.3\n",
      " -0.43724354]\n",
      "Obj\n",
      "[0.10076629]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517842]\n",
      "Inputs\n",
      "[ 0.09673016  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12518123]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965165  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12517915]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586502  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517815]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845603  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517346]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771516  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517313]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  1.999999\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517882]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558344  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12518212]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457938  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517309]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242344  0.50305308  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517841]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305408  0.51206251  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517842]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206351  0.3\n",
      " -0.43713179]\n",
      "Obj\n",
      "[0.12517842]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.300001\n",
      " -0.43713179]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12516688]\n",
      "Inputs\n",
      "[ 0.09672916  0.28965065  0.93586402  0.03845503  0.72771416  2.\n",
      "  0.28558244  0.66457838  0.31242244  0.50305308  0.51206251  0.3\n",
      " -0.43713079]\n",
      "Obj\n",
      "[0.12517129]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.14940557  0.62057409  1.49999999  0.07616387  0.72893012  1.84865387\n",
      "  0.39004924  0.78539816  0.3         0.50284201  0.51222727  0.3\n",
      " -0.43601712]\n",
      "Obj\n",
      "[-1.1271456]\n",
      "Inputs\n",
      "[ 0.1019968   0.322743    0.99227762  0.04222592  0.72783575  1.98486539\n",
      "  0.29602912  0.67666035  0.3111802   0.50303197  0.51207898  0.3\n",
      " -0.43702032]\n",
      "Obj\n",
      "[0.10284621]\n",
      "Inputs\n",
      "[ 0.09725593  0.29295989  0.94150538  0.03883212  0.72772631  1.99848654\n",
      "  0.28662711  0.66578657  0.31229821  0.50305097  0.51206415  0.3\n",
      " -0.43712064]\n",
      "Obj\n",
      "[0.12348998]\n",
      "Inputs\n",
      "[ 0.09678184  0.28998158  0.93642816  0.03849274  0.72771537  1.99984865\n",
      "  0.28568691  0.6646992   0.31241002  0.50305287  0.51206267  0.3\n",
      " -0.43713067]\n",
      "Obj\n",
      "[0.12501054]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12516164]\n",
      "Inputs\n",
      "[ 0.09673543  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516445]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968474  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516237]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592144  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516137]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845981  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12515668]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771528  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12515635]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998587\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516125]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559389  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516534]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459146  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12515631]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124222   0.50305306  0.51206252  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516163]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305406  0.51206252  0.3\n",
      " -0.43713168]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12516164]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206352  0.3\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.12516164]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.300001\n",
      " -0.43713168]\n",
      "Obj\n",
      "[0.1251501]\n",
      "Inputs\n",
      "[ 0.09673443  0.28968374  0.93592044  0.03845881  0.72771428  1.99998487\n",
      "  0.28559289  0.66459046  0.3124212   0.50305306  0.51206252  0.3\n",
      " -0.43713068]\n",
      "Obj\n",
      "[0.12515451]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.14840024  0.61872091  1.5         0.07476324  0.72873387  1.82665257\n",
      "  0.38917404  0.78539816  0.3         0.50273156  0.5123259   0.3\n",
      " -0.43551385]\n",
      "Obj\n",
      "[-0.96761818]\n",
      "Inputs\n",
      "[ 0.10190101  0.32258746  0.99232839  0.04208925  0.72781624  1.98265164\n",
      "  0.29595101  0.67667123  0.31117908  0.50302091  0.51208886  0.3\n",
      " -0.43696989]\n",
      "Obj\n",
      "[0.10379819]\n",
      "Inputs\n",
      "[ 0.09725109  0.29297412  0.94156123  0.03882185  0.72772447  1.99825154\n",
      "  0.2866287   0.66579853  0.31229698  0.50304984  0.51206516  0.3\n",
      " -0.4371155 ]\n",
      "Obj\n",
      "[0.12353047]\n",
      "Inputs\n",
      "[ 0.0967861   0.29001278  0.93648452  0.03849511  0.7277153   1.99981153\n",
      "  0.28569647  0.66471127  0.31240878  0.50305273  0.51206279  0.3\n",
      " -0.43713006]\n",
      "Obj\n",
      "[0.12499942]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12514543]\n",
      "Inputs\n",
      "[ 0.0967406   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514823]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971765  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514616]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597784  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514515]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846344  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514047]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771538  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12514014]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996853\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514504]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560425  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514913]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460354  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514009]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31242095  0.50305302  0.51206255  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514541]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305402  0.51206255  0.3\n",
      " -0.43713151]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12514543]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206355  0.3\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12514543]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.300001\n",
      " -0.43713151]\n",
      "Obj\n",
      "[0.12513388]\n",
      "Inputs\n",
      "[ 0.0967396   0.28971665  0.93597684  0.03846244  0.72771438  1.99996753\n",
      "  0.28560325  0.66460254  0.31241995  0.50305302  0.51206255  0.3\n",
      " -0.43713051]\n",
      "Obj\n",
      "[0.12513829]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.14830266  0.61804088  1.5         0.07448426  0.72870453  1.82201347\n",
      "  0.38899825  0.78539816  0.3         0.50271054  0.51234375  0.3\n",
      " -0.43541704]\n",
      "Obj\n",
      "[-0.93705669]\n",
      "Inputs\n",
      "[ 0.1018959   0.32254907  0.99237916  0.04206462  0.72781339  1.98217213\n",
      "  0.29594275  0.6766821   0.31117796  0.50301877  0.51209067  0.3\n",
      " -0.43696007]\n",
      "Obj\n",
      "[0.10397447]\n",
      "Inputs\n",
      "[ 0.09725523  0.29299989  0.94161708  0.03882265  0.72772428  1.99818799\n",
      "  0.2866372   0.66581049  0.31229575  0.5030496   0.51206536  0.3\n",
      " -0.43711437]\n",
      "Obj\n",
      "[0.12352696]\n",
      "Inputs\n",
      "[ 0.09679116  0.29004497  0.93654087  0.03849846  0.72771537  1.99978958\n",
      "  0.28570664  0.66472333  0.31240753  0.50305268  0.51206283  0.3\n",
      " -0.4371298 ]\n",
      "Obj\n",
      "[0.12498446]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12512934]\n",
      "Inputs\n",
      "[ 0.09674575  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12513214]\n",
      "Inputs\n",
      "[ 0.09674475  0.28975048  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12513007]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603425  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12512906]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846704  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12512438]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771548  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12512405]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99995074\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12512895]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561459  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12513304]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461562  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.125124]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241971  0.50305299  0.51206258  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12512932]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305399  0.51206258  0.3\n",
      " -0.43713134]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12512934]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206358  0.3\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12512934]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.300001\n",
      " -0.43713134]\n",
      "Obj\n",
      "[0.12511779]\n",
      "Inputs\n",
      "[ 0.09674475  0.28974948  0.93603325  0.03846604  0.72771448  1.99994974\n",
      "  0.28561359  0.66461462  0.31241871  0.50305299  0.51206258  0.3\n",
      " -0.43713034]\n",
      "Obj\n",
      "[0.1251222]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.1480651   0.61793348  1.5         0.07408714  0.72864335  1.8145913\n",
      "  0.38886966  0.78539816  0.3         0.50267435  0.51237593  0.3\n",
      " -0.43524949]\n",
      "Obj\n",
      "[-0.88400991]\n",
      "Inputs\n",
      "[ 0.10187679  0.32256788  0.99242992  0.04202815  0.72780737  1.98141389\n",
      "  0.2959392   0.67669297  0.31117684  0.50301512  0.51209391  0.3\n",
      " -0.43694316]\n",
      "Obj\n",
      "[0.10433368]\n",
      "Inputs\n",
      "[ 0.09725796  0.29303132  0.94167291  0.03882225  0.72772377  1.99809615\n",
      "  0.28664615  0.66582245  0.31229453  0.5030492   0.51206571  0.3\n",
      " -0.43711252]\n",
      "Obj\n",
      "[0.12353924]\n",
      "Inputs\n",
      "[ 0.09679607  0.29007766  0.93659721  0.03850166  0.72771541  1.99976438\n",
      "  0.28571684  0.6647354   0.31240629  0.50305261  0.51206289  0.3\n",
      " -0.43712946]\n",
      "Obj\n",
      "[0.12497117]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12511353]\n",
      "Inputs\n",
      "[ 0.09675088  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511634]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897833   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511426]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93609064  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511326]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384706   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12510857]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771557  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12510824]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999322\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511314]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562491  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511723]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646277   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12510819]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241847  0.50305295  0.51206261  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511351]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305395  0.51206261  0.3\n",
      " -0.43713115]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12511353]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206361  0.3\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12511353]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.300001\n",
      " -0.43713115]\n",
      "Obj\n",
      "[0.12510198]\n",
      "Inputs\n",
      "[ 0.09674988  0.2897823   0.93608964  0.0384696   0.72771457  1.9999312\n",
      "  0.28562391  0.6646267   0.31241747  0.50305295  0.51206261  0.3\n",
      " -0.43713015]\n",
      "Obj\n",
      "[0.12510639]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.13510545  0.53575601  1.36066884  0.06493884  0.7283702   1.85497165\n",
      "  0.36288958  0.75551939  0.30304936  0.50274083  0.512322    0.30000629\n",
      " -0.43558507]\n",
      "Obj\n",
      "[-0.36498327]\n",
      "Inputs\n",
      "[ 0.10058544  0.31437967  0.97854756  0.04111652  0.72778013  1.98543525\n",
      "  0.29335048  0.67371597  0.31148066  0.50302174  0.51208855  0.30000063\n",
      " -0.43697655]\n",
      "Obj\n",
      "[0.11111995]\n",
      "Inputs\n",
      "[ 0.09713344  0.29224204  0.94033543  0.03873429  0.72772113  1.99848161\n",
      "  0.28639657  0.66553562  0.31232379  0.50304983  0.5120652   0.30000006\n",
      " -0.43711569]\n",
      "Obj\n",
      "[0.12391779]\n",
      "Inputs\n",
      "[ 0.09678824  0.29002827  0.93651422  0.03849607  0.72771523  1.99978624\n",
      "  0.28570118  0.66471759  0.3124081   0.50305264  0.51206287  0.30000001\n",
      " -0.43712961]\n",
      "Obj\n",
      "[0.12499443]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12510163]\n",
      "Inputs\n",
      "[ 0.09675472  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510443]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898079   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510235]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361331   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510135]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847325  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12509666]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771564  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12509633]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999177\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510123]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563264  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510533]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463679  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12509629]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241753  0.50305292  0.51206263  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510161]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305392  0.51206263  0.3\n",
      " -0.437131  ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12510163]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206363  0.3\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12510163]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.300001\n",
      " -0.437131  ]\n",
      "Obj\n",
      "[0.12509008]\n",
      "Inputs\n",
      "[ 0.09675372  0.2898069   0.9361321   0.03847225  0.72771464  1.9999167\n",
      "  0.28563164  0.66463579  0.31241653  0.50305292  0.51206263  0.3\n",
      " -0.43713   ]\n",
      "Obj\n",
      "[0.12509449]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.302       2.          1.5         0.151       0.78539816  0.25\n",
      "  1.5         0.78539816  0.3         0.46090635  0.52359878  0.30009182\n",
      " -0.22712216]\n",
      "Obj\n",
      "[-0.08617845]\n",
      "Inputs\n",
      "[ 0.11727835  0.46082621  0.99251889  0.04972502  0.73348299  1.82492503\n",
      "  0.40706848  0.67671202  0.31117488  0.49883826  0.51321625  0.30000918\n",
      " -0.41613012]\n",
      "Obj\n",
      "[0.24854069]\n",
      "Inputs\n",
      "[ 0.09880618  0.30690883  0.94177078  0.03959752  0.72829147  1.98241754\n",
      "  0.29777532  0.66584341  0.31229237  0.50263145  0.512178    0.30000092\n",
      " -0.43503091]\n",
      "Obj\n",
      "[0.15925388]\n",
      "Inputs\n",
      "[ 0.09695897  0.29151709  0.93669597  0.03858477  0.72777232  1.99816679\n",
      "  0.28684601  0.66475655  0.31240412  0.50301077  0.51207417  0.30000009\n",
      " -0.43692099]\n",
      "Obj\n",
      "[0.12890091]\n",
      "Inputs\n",
      "[ 0.09677424  0.28997792  0.93618849  0.0384835   0.7277204   1.99974171\n",
      "  0.28575308  0.66464786  0.31241529  0.50304871  0.51206379  0.30000001\n",
      " -0.43711   ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12548492]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12513999]\n",
      "Inputs\n",
      "[ 0.09675677  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12514279]\n",
      "Inputs\n",
      "[ 0.09675577  0.289825    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12514072]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613874  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12513971]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847437  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12513503]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771621  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.1251347]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99990021\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.1251396]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564478  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12514369]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463799  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12513465]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241741  0.5030525   0.51206275  0.3\n",
      " -0.4371289 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.12513997]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030535   0.51206275  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12513999]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206375  0.3\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12513999]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.300001\n",
      " -0.4371289 ]\n",
      "Obj\n",
      "[0.12512844]\n",
      "Inputs\n",
      "[ 0.09675577  0.289824    0.93613774  0.03847337  0.72771521  1.99989921\n",
      "  0.28564378  0.66463699  0.31241641  0.5030525   0.51206275  0.3\n",
      " -0.4371279 ]\n",
      "Obj\n",
      "[0.12513285]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929211]\n",
      "Inputs\n",
      "[0.075501   2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929137]\n",
      "Inputs\n",
      "[0.0755     1.999999   0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929211]\n",
      "Inputs\n",
      "[0.0755     2.         0.250001   0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929214]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.030201   0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.25929168]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539716 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929222]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.250001\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2592916]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.499999   0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929191]\n",
      "Inputs\n",
      "[7.55000000e-02 2.00000000e+00 2.50000000e-01 3.02000000e-02\n",
      " 7.85398163e-01 2.50000000e-01 1.50000000e+00 1.00000000e-06\n",
      " 7.00000000e-01 3.00000000e-01 5.23598776e-01 3.06688308e-01\n",
      " 5.23598776e-01]\n",
      "Obj\n",
      "[0.25928837]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.699999   0.3        0.52359878 0.30668831\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.25929257]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.300001   0.52359878 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929211]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359778 0.30668831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929211]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668931\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25929022]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.3        0.52359878 0.30668831\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.25929334]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.07629808 1.91277421 0.4509195  0.06026785 0.78539816 0.86472802\n",
      " 1.35709346 0.05320589 0.65929202 0.43435762 0.50723992 0.32846898\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.24636391]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156439]\n",
      "Inputs\n",
      "[0.07558081 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156365]\n",
      "Inputs\n",
      "[0.07557981 1.99127842 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156438]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009295 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156444]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320778 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.20156375]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539716 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156453]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114738\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156387]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48571035 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156463]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532159 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156066]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959302  0.31343576 0.52196289 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156397]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343676 0.52196289 0.30886638\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.20156439]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196389 0.30886638\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156439]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886738\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.20156143]\n",
      "Inputs\n",
      "[0.07557981 1.99127742 0.27009195 0.03320678 0.78539816 0.3114728\n",
      " 1.48570935 0.00532059 0.6959292  0.31343576 0.52196289 0.30886638\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.20156631]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812981]\n",
      "Inputs\n",
      "[0.075501   2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51813036]\n",
      "Inputs\n",
      "[0.0755     1.999999   0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812981]\n",
      "Inputs\n",
      "[0.0755     2.         0.250001   0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812985]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.030201   0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.51812957]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539716 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51813002]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.250001\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812894]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.499999   0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812952]\n",
      "Inputs\n",
      "[7.55000000e-02 2.00000000e+00 2.50000000e-01 3.02000000e-02\n",
      " 7.85398163e-01 2.50000000e-01 1.50000000e+00 1.00000000e-06\n",
      " 7.00000000e-01 5.77851750e-01 4.97604003e-01 4.13161763e-01\n",
      " 5.23598776e-01]\n",
      "Obj\n",
      "[0.51812635]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.699999   0.57785175 0.497604   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51813028]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785275 0.497604   0.41316176\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.51812981]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497605   0.41316176\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812981]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316276\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.51812822]\n",
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.78539816 0.25\n",
      " 1.5        0.         0.7        0.57785175 0.497604   0.41316176\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.51813122]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892065]\n",
      "Inputs\n",
      "[0.07936447 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892049]\n",
      "Inputs\n",
      "[0.07936347 1.999999   0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892065]\n",
      "Inputs\n",
      "[0.07936347 2.         0.250001   0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892067]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.030201   0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892039]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747123  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28892034]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112411\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892024]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862164 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892098]\n",
      "Inputs\n",
      "[7.93634705e-02 2.00000000e+00 2.50000000e-01 3.02000000e-02\n",
      " 7.74711298e-01 4.51123111e-01 9.48620638e-01 1.00000000e-06\n",
      " 7.00000000e-01 5.62563873e-01 5.07048425e-01 3.30513673e-01\n",
      " 5.23598776e-01]\n",
      "Obj\n",
      "[0.28891968]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.699999   0.56256387 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892088]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256487 0.50704843 0.33051367\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28892065]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704943 0.33051367\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28892065]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051467\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28891971]\n",
      "Inputs\n",
      "[0.07936347 2.         0.25       0.0302     0.7747113  0.45112311\n",
      " 0.94862064 0.         0.7        0.56256387 0.50704843 0.33051367\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28892131]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12883002 1.57959439 0.47444173 0.03098855 0.78387684 0.32501042\n",
      " 0.55722741 0.00892507 0.60149542 0.44612264 0.52359878 0.31800308\n",
      " 0.51915325]\n",
      "Obj\n",
      "[0.24398807]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81848234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940628]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503871e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90021079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940643]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03416055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940619]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76346601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940612]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28637029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940603]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78832533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940673]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59242373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.2794056]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82436704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940618]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41802303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.10000509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28283916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940565]\n",
      "Inputs\n",
      "[8.81838234e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142373e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22807096e-01]\n",
      "Obj\n",
      "[0.27940588]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.302       0.25        1.5         0.151       0.78539816  0.25\n",
      "  0.25        0.78539816  0.3         0.3         0.52359878  0.3\n",
      " -0.52359878]\n",
      "Obj\n",
      "[0.2727442]\n",
      "Inputs\n",
      "[0.10956544 1.75753394 0.41101807 0.04240654 0.77725086 0.41077243\n",
      " 0.81594838 0.0799721  0.64419213 0.51762117 0.51135944 0.32545462\n",
      " 0.41816561]\n",
      "Obj\n",
      "[0.36288266]\n",
      "Inputs\n",
      "[0.09032199 1.90828733 0.30211988 0.0315472  0.77643613 0.42684967\n",
      " 0.87254322 0.00942949 0.67861135 0.53938329 0.5101355  0.32800009\n",
      " 0.51234205]\n",
      "Obj\n",
      "[0.27854763]\n",
      "Inputs\n",
      "[0.08839764 1.92336267 0.29123006 0.03046126 0.77635465 0.42845739\n",
      " 0.8782027  0.00237523 0.68205327 0.5415595  0.51001311 0.32825463\n",
      " 0.52175969]\n",
      "Obj\n",
      "[0.27928006]\n",
      "Inputs\n",
      "[8.82052051e-02 1.92487021e+00 2.90141077e-01 3.03526714e-02\n",
      " 7.76346506e-01 4.28618165e-01 8.78768650e-01 1.66980441e-03\n",
      " 6.82397461e-01 5.41777123e-01 5.10000869e-01 3.28280088e-01\n",
      " 5.22701456e-01]\n",
      "Obj\n",
      "[0.27939347]\n",
      "Inputs\n",
      "[8.81859616e-02 1.92502096e+00 2.90032179e-01 3.03418120e-02\n",
      " 7.76345692e-01 4.28634243e-01 8.78825244e-01 1.59926180e-03\n",
      " 6.82431880e-01 5.41798885e-01 5.09999645e-01 3.28282633e-01\n",
      " 5.22795632e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940511]\n",
      "Inputs\n",
      "[8.81840373e-02 1.92503604e+00 2.90021289e-01 3.03407261e-02\n",
      " 7.76345610e-01 4.28635850e-01 8.78830904e-01 1.59220754e-03\n",
      " 6.82435322e-01 5.41801061e-01 5.09999523e-01 3.28282888e-01\n",
      " 5.22805050e-01]\n",
      "Obj\n",
      "[0.27940628]\n",
      "Inputs\n",
      "[8.81838448e-02 1.92503754e+00 2.90020200e-01 3.03406175e-02\n",
      " 7.76345602e-01 4.28636011e-01 8.78831470e-01 1.59150211e-03\n",
      " 6.82435666e-01 5.41801279e-01 5.09999510e-01 3.28282913e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.2794064]\n",
      "Inputs\n",
      "[8.81838256e-02 1.92503770e+00 2.90020091e-01 3.03406067e-02\n",
      " 7.76345601e-01 4.28636027e-01 8.78831526e-01 1.59143157e-03\n",
      " 6.82435700e-01 5.41801301e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806086e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838237e-02 1.92503771e+00 2.90020080e-01 3.03406056e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831532e-01 1.59142452e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806095e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81848235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940628]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503871e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90021079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940643]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03416055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940619]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76346601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940612]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28637029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940603]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78832533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940673]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59242381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.2794056]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82436704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940618]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41802303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.10000509e-01 3.28282916e-01\n",
      " 5.22806096e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940641]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28283916e-01\n",
      " 5.22806096e-01]\n",
      "Obj\n",
      "[0.27940565]\n",
      "Inputs\n",
      "[8.81838235e-02 1.92503771e+00 2.90020079e-01 3.03406055e-02\n",
      " 7.76345601e-01 4.28636029e-01 8.78831533e-01 1.59142381e-03\n",
      " 6.82435704e-01 5.41801303e-01 5.09999509e-01 3.28282916e-01\n",
      " 5.22807096e-01]\n",
      "Obj\n",
      "[0.27940588]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      2.          0.25        0.151       0.          2.\n",
      "  1.5         0.78539816  0.7         0.85       -0.52359878  0.7\n",
      " -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[-0.28116851]\n",
      "Inputs\n",
      "[0.08691544 1.93253394 0.28601807 0.04240654 0.69871104 0.58577243\n",
      " 0.94094838 0.0799721  0.68419213 0.57262117 0.40663968 0.36545462\n",
      " 0.41816561]\n",
      "Obj\n",
      "[0.24726763]\n",
      "Inputs\n",
      "[0.08805699 1.92578733 0.28961988 0.0315472  0.76858215 0.44434967\n",
      " 0.88504322 0.00942949 0.68261135 0.54488329 0.49966353 0.33200009\n",
      " 0.51234205]\n",
      "Obj\n",
      "[0.27405261]\n",
      "Inputs\n",
      "[0.08817114 1.92511267 0.28998006 0.03046126 0.77556926 0.43020739\n",
      " 0.8794527  0.00237523 0.68245327 0.5421095  0.50896591 0.32865463\n",
      " 0.52175969]\n",
      "Obj\n",
      "[0.27884249]\n",
      "Inputs\n",
      "[8.81803663e-02 1.92505814e+00 2.90009171e-01 3.03734934e-02\n",
      " 7.76133994e-01 4.29064334e-01 8.79000844e-01 1.80506499e-03\n",
      " 6.82440492e-01 5.41885308e-01 5.09717782e-01 3.28384235e-01\n",
      " 5.22520879e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27925244]\n",
      "Inputs\n",
      "[8.81828961e-02 1.92504319e+00 2.90017153e-01 3.03494276e-02\n",
      " 7.76288838e-01 4.28750921e-01 8.78876950e-01 1.64873257e-03\n",
      " 6.82436988e-01 5.41823837e-01 5.09923936e-01 3.28310095e-01\n",
      " 5.22729587e-01]\n",
      "Obj\n",
      "[0.27936506]\n",
      "Inputs\n",
      "[8.81835753e-02 1.92503918e+00 2.90019296e-01 3.03429658e-02\n",
      " 7.76330414e-01 4.28666768e-01 8.78843684e-01 1.60675660e-03\n",
      " 6.82436048e-01 5.41807332e-01 5.09979290e-01 3.28290188e-01\n",
      " 5.22785627e-01]\n",
      "Obj\n",
      "[0.27939534]\n",
      "Inputs\n",
      "[8.81837571e-02 1.92503810e+00 2.90019870e-01 3.03412365e-02\n",
      " 7.76341541e-01 4.28644247e-01 8.78834781e-01 1.59552318e-03\n",
      " 6.82435796e-01 5.41802915e-01 5.09994103e-01 3.28284860e-01\n",
      " 5.22800623e-01]\n",
      "Obj\n",
      "[0.27940345]\n",
      "Inputs\n",
      "[8.81838057e-02 1.92503782e+00 2.90020023e-01 3.03407742e-02\n",
      " 7.76344516e-01 4.28638226e-01 8.78832401e-01 1.59251961e-03\n",
      " 6.82435729e-01 5.41801734e-01 5.09998064e-01 3.28283436e-01\n",
      " 5.22804633e-01]\n",
      "Obj\n",
      "[0.27940562]\n",
      "Inputs\n",
      "[8.81838187e-02 1.92503774e+00 2.90020064e-01 3.03406506e-02\n",
      " 7.76345311e-01 4.28636616e-01 8.78831765e-01 1.59171671e-03\n",
      " 6.82435711e-01 5.41801418e-01 5.09999123e-01 3.28283055e-01\n",
      " 5.22805705e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2794062]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940635]\n",
      "Inputs\n",
      "[8.81848222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940622]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503872e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940635]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90021075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940637]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03416175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940613]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76346524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940607]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28637186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940597]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78832595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940667]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59250210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940555]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82436706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940612]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41802334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27940635]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.10000406e-01 3.28282953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.27940635]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28283953e-01\n",
      " 5.22805992e-01]\n",
      "Obj\n",
      "[0.2794056]\n",
      "Inputs\n",
      "[8.81838222e-02 1.92503772e+00 2.90020075e-01 3.03406175e-02\n",
      " 7.76345524e-01 4.28636186e-01 8.78831595e-01 1.59150210e-03\n",
      " 6.82435706e-01 5.41801334e-01 5.09999406e-01 3.28282953e-01\n",
      " 5.22806992e-01]\n",
      "Obj\n",
      "[0.27940582]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      0.25       1.5        0.0302     0.78539816 0.25\n",
      " 0.25       0.         0.3        0.3        0.52359878 0.3\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.38754501]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754983]\n",
      "Inputs\n",
      "[1.09597242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754976]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729364e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754983]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11193376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754985]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03275355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27754963]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77253092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754954]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10747833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754946]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15858846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27755016]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43312262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754911]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44138042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754959]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17587367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27754983]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11362302e-01 3.25450584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754983]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25451584e-01\n",
      " 5.22885384e-01]\n",
      "Obj\n",
      "[0.27754914]\n",
      "Inputs\n",
      "[1.09596242e-01 1.75729264e+00 4.11192376e-01 3.03265355e-02\n",
      " 7.77252092e-01 4.10746833e-01 8.15857846e-01 1.43212262e-03\n",
      " 6.44137042e-01 5.17586367e-01 5.11361302e-01 3.25450584e-01\n",
      " 5.22886384e-01]\n",
      "Obj\n",
      "[0.27754934]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      0.25       1.5        0.0302     0.78539816 0.25\n",
      " 0.25       0.         0.3        0.3        0.52359878 0.3\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.38754501]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658377]\n",
      "Inputs\n",
      "[1.28837618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.2765837]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656438e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658377]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20074139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.2765838]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03148820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27658355]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78067699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658349]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94673150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658342]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59273062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.2765841]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28991036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658314]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09724338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658352]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95828730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27658377]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12586049e-01 3.22905525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658377]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22906525e-01\n",
      " 5.22956723e-01]\n",
      "Obj\n",
      "[0.27658316]\n",
      "Inputs\n",
      "[1.28836618e-01 1.60656338e+00 5.20073139e-01 3.03138820e-02\n",
      " 7.78066699e-01 3.94672150e-01 7.59272062e-01 1.28891036e-03\n",
      " 6.09723338e-01 4.95827730e-01 5.12585049e-01 3.22905525e-01\n",
      " 5.22957723e-01]\n",
      "Obj\n",
      "[0.27658334]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394992 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338014]\n",
      "Inputs\n",
      "[0.13394892 1.5124944  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207738 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338018]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355911 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337995]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539716 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338054]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696594\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337968]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80131055 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338058]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383947 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2933793]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119116 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337988]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505143 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359778 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155793\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337907]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29338089]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.17307571 1.08217287 0.8975573  0.0694445  0.78539816 0.31103703\n",
      " 0.41741179 0.         0.50681209 0.3935352  0.52359878 0.3\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.24914459]\n",
      "Inputs\n",
      "[0.1378616  1.46946135 0.56862447 0.04614675 0.78539816 0.39737215\n",
      " 0.76291977 0.00345462 0.57375235 0.44889891 0.52359878 0.31402047\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2866602]\n",
      "Inputs\n",
      "[0.13434018 1.50819019 0.53573119 0.04381698 0.78539816 0.40600567\n",
      " 0.79747057 0.00380008 0.58044638 0.45443528 0.52359878 0.31542252\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29269551]\n",
      "Inputs\n",
      "[0.13398804 1.51206308 0.53244186 0.043584   0.78539816 0.40686902\n",
      " 0.80092565 0.00383463 0.58111578 0.45498891 0.52359878 0.31556273\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29331164]\n",
      "Inputs\n",
      "[0.13395283 1.51245037 0.53211293 0.0435607  0.78539816 0.40695535\n",
      " 0.80127116 0.00383808 0.58118272 0.45504428 0.52359878 0.31557675\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337331]\n",
      "Inputs\n",
      "[0.13394931 1.5124891  0.53208004 0.04355837 0.78539816 0.40696399\n",
      " 0.80130571 0.00383843 0.58118941 0.45504981 0.52359878 0.31557815\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29337948]\n",
      "Inputs\n",
      "[0.13394895 1.51249297 0.53207675 0.04355814 0.78539816 0.40696485\n",
      " 0.80130917 0.00383846 0.58119008 0.45505037 0.52359878 0.31557829\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338009]\n",
      "Inputs\n",
      "[0.13394892 1.51249336 0.53207642 0.04355811 0.78539816 0.40696493\n",
      " 0.80130951 0.00383847 0.58119015 0.45505042 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338015]\n",
      "Inputs\n",
      "[0.13394892 1.51249339 0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394992 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338014]\n",
      "Inputs\n",
      "[0.13394892 1.5124944  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207738 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338018]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355911 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337995]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539716 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338054]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696594\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337968]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80131055 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338058]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383947 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2933793]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119116 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337988]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505143 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359778 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155793\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337907]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338089]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.71880171 2.\n",
      " 1.5        0.24226639 0.7        0.85       0.34239356 0.7\n",
      " 0.12812735]\n",
      "Obj\n",
      "[0.30255379]\n",
      "Inputs\n",
      "[0.12810402 1.56124406 0.50386874 0.0422223  0.77873852 0.56626845\n",
      " 0.87117859 0.02768126 0.59307114 0.49454539 0.50547825 0.35402047\n",
      " 0.48405163]\n",
      "Obj\n",
      "[0.25378737]\n",
      "Inputs\n",
      "[0.13336443 1.51736847 0.52925562 0.04342453 0.7847322  0.42289529\n",
      " 0.80829645 0.00622275 0.58237826 0.45899992 0.52178672 0.31942252\n",
      " 0.51964406]\n",
      "Obj\n",
      "[0.28591995]\n",
      "Inputs\n",
      "[0.13389047 1.51298091 0.5317943  0.04354475 0.78533157 0.40855798\n",
      " 0.80200824 0.00407689 0.58130897 0.45544538 0.52341757 0.31596273\n",
      " 0.5232033 ]\n",
      "Obj\n",
      "[0.2925648]\n",
      "Inputs\n",
      "[0.13394307 1.51254215 0.53204817 0.04355678 0.7853915  0.40712425\n",
      " 0.80137942 0.00386231 0.58120204 0.45508992 0.52358066 0.31561675\n",
      " 0.52355923]\n",
      "Obj\n",
      "[0.29329791]\n",
      "Inputs\n",
      "[0.13394833 1.51249827 0.53207356 0.04355798 0.7853975  0.40698087\n",
      " 0.80131654 0.00384085 0.58119135 0.45505438 0.52359696 0.31558215\n",
      " 0.52359482]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29337193]\n",
      "Inputs\n",
      "[0.13394886 1.51249389 0.5320761  0.0435581  0.7853981  0.40696654\n",
      " 0.80131025 0.0038387  0.58119028 0.45505082 0.52359859 0.31557869\n",
      " 0.52359838]\n",
      "Obj\n",
      "[0.29337934]\n",
      "Inputs\n",
      "[0.13394891 1.51249345 0.53207635 0.04355811 0.78539816 0.4069651\n",
      " 0.80130962 0.00383849 0.58119017 0.45505047 0.52359876 0.31557834\n",
      " 0.52359874]\n",
      "Obj\n",
      "[0.29338008]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696496\n",
      " 0.80130956 0.00383847 0.58119016 0.45505043 0.52359877 0.31557831\n",
      " 0.52359877]\n",
      "Obj\n",
      "[0.29338015]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696495\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394992 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338014]\n",
      "Inputs\n",
      "[0.13394892 1.5124944  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207738 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338018]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355911 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337995]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539716 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338054]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696594\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337968]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80131055 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338058]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383947 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2933793]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119116 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337988]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505143 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359778 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155793\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337907]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338089]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     2.         0.25       0.0302     0.77429961 0.88337652\n",
      " 1.5        0.04509137 0.7        0.85       0.49340024 0.40526193\n",
      " 0.45769196]\n",
      "Obj\n",
      "[0.25569605]\n",
      "Inputs\n",
      "[0.12810402 1.56124406 0.50386874 0.0422223  0.78428831 0.4546061\n",
      " 0.87117859 0.00796376 0.59307114 0.49454539 0.52057892 0.32454667\n",
      " 0.51700809]\n",
      "Obj\n",
      "[0.28783158]\n",
      "Inputs\n",
      "[0.13336443 1.51736847 0.52925562 0.04342453 0.78528718 0.41172906\n",
      " 0.80829645 0.004251   0.58237826 0.45899992 0.52329679 0.31647514\n",
      " 0.52293971]\n",
      "Obj\n",
      "[0.29281104]\n",
      "Inputs\n",
      "[0.13389047 1.51298091 0.5317943  0.04354475 0.78538706 0.40744136\n",
      " 0.80200824 0.00387972 0.58130897 0.45544538 0.52356858 0.31566799\n",
      " 0.52353287]\n",
      "Obj\n",
      "[0.29332313]\n",
      "Inputs\n",
      "[0.13394307 1.51254215 0.53204817 0.04355678 0.78539705 0.40701259\n",
      " 0.80137942 0.00384259 0.58120204 0.45508992 0.52359576 0.31558727\n",
      " 0.52359218]\n",
      "Obj\n",
      "[0.29337446]\n",
      "Inputs\n",
      "[0.13394833 1.51249827 0.53207356 0.04355798 0.78539805 0.40696971\n",
      " 0.80131654 0.00383888 0.58119135 0.45505438 0.52359847 0.3155792\n",
      " 0.52359812]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29337959]\n",
      "Inputs\n",
      "[0.13394886 1.51249389 0.5320761  0.0435581  0.78539815 0.40696542\n",
      " 0.80131025 0.00383851 0.58119028 0.45505082 0.52359875 0.31557839\n",
      " 0.52359871]\n",
      "Obj\n",
      "[0.2933801]\n",
      "Inputs\n",
      "[0.13394891 1.51249345 0.53207635 0.04355811 0.78539816 0.40696499\n",
      " 0.80130962 0.00383847 0.58119017 0.45505047 0.52359877 0.31557831\n",
      " 0.52359877]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696495\n",
      " 0.80130956 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359877]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696495\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394992 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338014]\n",
      "Inputs\n",
      "[0.13394892 1.5124944  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207738 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338018]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355911 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337995]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539716 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338054]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696594\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337968]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80131055 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338058]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383947 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2933793]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119116 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337988]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505143 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359778 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155793\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337907]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338089]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.15820268 1.16577218 0.85139733 0.08455473 0.78539816 0.32890625\n",
      " 0.55301556 0.00244081 0.53872054 0.44992724 0.52359878 0.3\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.25860588]\n",
      "Inputs\n",
      "[0.13637429 1.47782128 0.56400848 0.04765777 0.78539816 0.39915907\n",
      " 0.77648015 0.0036987  0.5769432  0.45453811 0.52359878 0.31402047\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28974134]\n",
      "Inputs\n",
      "[0.13420178 1.50887862 0.5354055  0.04398553 0.78539816 0.40615113\n",
      " 0.79872093 0.00382389 0.58074739 0.45499702 0.52359878 0.31541589\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29300454]\n",
      "Inputs\n",
      "[0.13397659 1.51209784 0.53244068 0.04360488 0.78539816 0.40687589\n",
      " 0.80102628 0.00383687 0.58114171 0.45504458 0.52359878 0.31556053\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29333911]\n",
      "Inputs\n",
      "[0.13395196 1.5124499  0.53211645 0.04356326 0.78539816 0.40695515\n",
      " 0.8012784  0.00383829 0.58118483 0.45504979 0.52359878 0.31557635\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337565]\n",
      "Inputs\n",
      "[0.13394925 1.51248861 0.53208079 0.04355868 0.78539816 0.40696387\n",
      " 0.80130612 0.00383845 0.58118957 0.45505036 0.52359878 0.31557809\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29337966]\n",
      "Inputs\n",
      "[0.13394895 1.51249287 0.53207687 0.04355817 0.78539816 0.40696483\n",
      " 0.80130917 0.00383846 0.58119009 0.45505042 0.52359878 0.31557828\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338011]\n",
      "Inputs\n",
      "[0.13394892 1.51249334 0.53207643 0.04355812 0.78539816 0.40696493\n",
      " 0.80130951 0.00383847 0.58119015 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338015]\n",
      "Inputs\n",
      "[0.13394892 1.51249339 0.53207639 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394992 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338014]\n",
      "Inputs\n",
      "[0.13394892 1.5124944  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207738 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338018]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355911 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337995]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539716 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338054]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696594\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337968]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80131055 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338058]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383947 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2933793]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119116 0.45505043 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337988]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505143 0.52359878 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359778 0.3155783\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29338016]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155793\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29337907]\n",
      "Inputs\n",
      "[0.13394892 1.5124934  0.53207638 0.04355811 0.78539816 0.40696494\n",
      " 0.80130955 0.00383847 0.58119016 0.45505043 0.52359878 0.3155783\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29338089]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.14516467 1.2158796  0.86620826 0.10577455 0.78231764 0.32282897\n",
      " 0.64807096 0.         0.57636323 0.4916253  0.50951283 0.30000039\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285299]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242065]\n",
      "Inputs\n",
      "[0.13602164 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242065]\n",
      "Inputs\n",
      "[0.13602064 1.45770522 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242065]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379673 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242067]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505145 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29242045]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78483014 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242026]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142472\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242015]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773005   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242109]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00313044 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29241979]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029955 0.46180638 0.52099688 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242038]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180738 0.52099688 0.31270082\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29242065]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099788 0.31270082\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29242065]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270182\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2924195]\n",
      "Inputs\n",
      "[0.13602064 1.45770422 0.59379573 0.05505045 0.78482914 0.39142372\n",
      " 0.773004   0.00312944 0.58029855 0.46180638 0.52099688 0.31270082\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29242142]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2931607]\n",
      "Inputs\n",
      "[0.13822754 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316074]\n",
      "Inputs\n",
      "[0.13822654 1.36532747 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316069]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154253 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316071]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762568 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316052]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410349 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29316028]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36621081\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316014]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314979 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316119]\n",
      "Inputs\n",
      "[1.38226541e-01 1.36532647e+00 6.91541525e-01 7.76246846e-02\n",
      " 7.84102486e-01 3.66209808e-01 7.33148794e-01 1.00000000e-06\n",
      " 5.81139466e-01 4.29081499e-01 5.19722743e-01 3.08461557e-01\n",
      " 5.23598776e-01]\n",
      "Obj\n",
      "[0.29315978]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58114047 0.4290815  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29316043]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290825  0.51972274 0.30846156\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2931607]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972374 0.30846156\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2931607]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846256\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29315938]\n",
      "Inputs\n",
      "[0.13822654 1.36532647 0.69154153 0.07762468 0.78410249 0.36620981\n",
      " 0.73314879 0.         0.58113947 0.4290815  0.51972274 0.30846156\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29316156]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13922036 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449195]\n",
      "Inputs\n",
      "[0.13921936 1.39658222 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449192]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872979 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449195]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535243 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449173]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78533028 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29449152]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37584071\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449138]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184391 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2944924]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282469 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449103]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560358 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449165]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195897 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579552 0.31045824\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045924\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449066]\n",
      "Inputs\n",
      "[0.13921936 1.39658122 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29449276]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12741776 1.07115811 0.9833842  0.151      0.77316519 0.2853535\n",
      " 0.57453339 0.         0.63153715 0.30742956 0.52359878 0.3\n",
      " 0.51649035]\n",
      "Obj\n",
      "[0.25939582]\n",
      "Inputs\n",
      "[0.1380392  1.3640389  0.69119433 0.07391628 0.78411287 0.36679109\n",
      " 0.73411195 0.00254132 0.58119604 0.42850513 0.51657495 0.30941242\n",
      " 0.52288793]\n",
      "Obj\n",
      "[0.29105588]\n",
      "Inputs\n",
      "[0.13908142 1.39277781 0.66252323 0.06635245 0.78518711 0.37478215\n",
      " 0.74977059 0.00279069 0.57625632 0.44038566 0.51588574 0.31033601\n",
      " 0.5235157 ]\n",
      "Obj\n",
      "[0.29409436]\n",
      "Inputs\n",
      "[0.13920184 1.39609812 0.65921075 0.06547857 0.78531122 0.37570538\n",
      " 0.75157969 0.0028195  0.57568562 0.44175826 0.51580611 0.31044271\n",
      " 0.52358822]\n",
      "Obj\n",
      "[0.29444146]\n",
      "Inputs\n",
      "[0.13921708 1.39651845 0.6587914  0.06536795 0.78532693 0.37582226\n",
      " 0.75180871 0.00282314 0.57561337 0.44193202 0.51579603 0.31045622\n",
      " 0.5235974 ]\n",
      "Obj\n",
      "[0.29448537]\n",
      "Inputs\n",
      "[0.13921906 1.39657306 0.65873693 0.06535357 0.78532897 0.37583744\n",
      " 0.75183846 0.00282362 0.57560399 0.4419546  0.51579472 0.31045798\n",
      " 0.5235986 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29449107]\n",
      "Inputs\n",
      "[0.13921932 1.39658016 0.65872985 0.06535171 0.78532924 0.37583942\n",
      " 0.75184233 0.00282368 0.57560277 0.44195753 0.51579455 0.3104582\n",
      " 0.52359875]\n",
      "Obj\n",
      "[0.29449182]\n",
      "Inputs\n",
      "[0.13921935 1.39658108 0.65872893 0.06535146 0.78532927 0.37583967\n",
      " 0.75184283 0.00282369 0.57560261 0.44195791 0.51579453 0.31045823\n",
      " 0.52359877]\n",
      "Obj\n",
      "[0.29449191]\n",
      "Inputs\n",
      "[0.13921936 1.3965812  0.65872881 0.06535143 0.78532927 0.37583971\n",
      " 0.7518429  0.00282369 0.57560259 0.44195796 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449192]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.7518429  0.00282369 0.57560259 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13922036 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29449195]\n",
      "Inputs\n",
      "[0.13921936 1.39658221 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449192]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872979 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449195]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535243 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449173]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78533028 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449152]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37584071\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449138]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184391 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2944924]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282469 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449103]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560358 0.44195797 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449165]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195897 0.51579452 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579552 0.31045824\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449193]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045924\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29449066]\n",
      "Inputs\n",
      "[0.13921936 1.39658121 0.65872879 0.06535143 0.78532928 0.37583971\n",
      " 0.75184291 0.00282369 0.57560258 0.44195797 0.51579452 0.31045824\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29449276]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[1.60659319e-01 1.39909890e+00 6.49665719e-01 1.25703818e-01\n",
      " 7.85398163e-01 4.65695785e-01 7.63335742e-01 5.44269491e-16\n",
      " 4.75527919e-01 4.41957968e-01 5.15794522e-01 3.53478645e-01\n",
      " 5.03187110e-01]\n",
      "Obj\n",
      "[0.29417986]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410058]\n",
      "Inputs\n",
      "[0.14687611 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410056]\n",
      "Inputs\n",
      "[0.14687511 1.39748123 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410057]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549356 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410058]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690297 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28410052]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535487 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410032]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792639\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410027]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594775 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410086]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181641 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410001]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986907 0.44195797 0.51579452 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410028]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195897 0.51579452 0.3258199\n",
      " 0.51631021]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28410058]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579552 0.3258199\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410058]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258209\n",
      " 0.51631021]\n",
      "Obj\n",
      "[0.28410024]\n",
      "Inputs\n",
      "[0.14687511 1.39748023 0.65549256 0.08690197 0.78535387 0.40792539\n",
      " 0.75594675 0.00181541 0.53986807 0.44195797 0.51579452 0.3258199\n",
      " 0.51631121]\n",
      "Obj\n",
      "[0.28410032]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295245]\n",
      "Inputs\n",
      "[0.13989621 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295239]\n",
      "Inputs\n",
      "[0.13989521 1.39577705 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295244]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785303 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295248]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.030201   0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295203]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595977 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29295207]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990487\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295198]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099372 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295285]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602851 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295171]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704974 0.44195797 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295217]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195897 0.51579452 0.31633266\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295245]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579552 0.31633266\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29295245]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633366\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29295136]\n",
      "Inputs\n",
      "[0.13989521 1.39577605 0.66785203 0.0302     0.74595877 0.36990387\n",
      " 0.74099272 0.02602751 0.57704874 0.44195797 0.51579452 0.31633266\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29295317]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460224]\n",
      "Inputs\n",
      "[0.17218004 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460225]\n",
      "Inputs\n",
      "[0.17217904 1.39798442 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460223]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660984 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460226]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410583 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460206]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640361 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27460188]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079555\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460189]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791306 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460255]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04241068 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460167]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500872 0.44195797 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460199]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195897 0.51579452 0.30812843\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460224]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579552 0.30812843\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.27460224]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812943\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.27460135]\n",
      "Inputs\n",
      "[0.17217904 1.39798342 0.67660884 0.05410483 0.68640261 0.42079455\n",
      " 0.71791206 0.04240968 0.58500772 0.44195797 0.51579452 0.30812843\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.27460282]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13927169 1.39621465 0.67094748 0.06222759 0.74914639 0.41736477\n",
      " 0.75705347 0.         0.58003422 0.44195797 0.51579452 0.31076831\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29266722]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251637]\n",
      "Inputs\n",
      "[0.15472397 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251638]\n",
      "Inputs\n",
      "[0.15472297 1.39704615 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251636]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360671 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251639]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841464 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28251617]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968675 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251598]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897619\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251596]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867606 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251674]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991399 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251566]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58237047 0.44195797 0.51579452 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251611]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195897 0.51579452 0.30952879\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28251637]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579552 0.30952879\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251637]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952979\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28251533]\n",
      "Inputs\n",
      "[0.15472297 1.39704515 0.67360571 0.05841364 0.71968575 0.41897519\n",
      " 0.73867506 0.01991299 0.58236947 0.44195797 0.51579452 0.30952879\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28251705]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166586]\n",
      "Inputs\n",
      "[0.14461648 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166582]\n",
      "Inputs\n",
      "[0.14461548 1.39609325 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166585]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910908 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2916659]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.030201   0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166543]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773249 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29166547]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743568\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166541]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936995 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166625]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937903 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2916651]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182108 0.49705365 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2916656]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705465 0.51266905 0.31676086\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166586]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51267005 0.31676086\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.29166586]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.29166471]\n",
      "Inputs\n",
      "[0.14461548 1.39609225 0.67910808 0.0302     0.72773149 0.39743468\n",
      " 0.76936895 0.02937803 0.59182008 0.49705365 0.51266905 0.31676086\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.29166663]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392559]\n",
      "Inputs\n",
      "[0.13039099 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392552]\n",
      "Inputs\n",
      "[0.13038999 1.39706371 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392558]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878855  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392562]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.030201   0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392517]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026784 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28392524]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925474\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392517]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458939 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392594]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927697 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392483]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076863 0.52516764 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392535]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516864 0.50610807 0.33367705\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392559]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610907 0.33367705\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28392559]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367805\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28392469]\n",
      "Inputs\n",
      "[0.13038999 1.39706271 0.6878845  0.0302     0.72026684 0.3925464\n",
      " 0.78458839 0.00927597 0.66076763 0.52516764 0.50610807 0.33367705\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28392622]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697934]\n",
      "Inputs\n",
      "[0.12324636 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697927]\n",
      "Inputs\n",
      "[0.12324536 1.3975596  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697933]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615374 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697937]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.030201   0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2869789]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371778 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28697899]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469139\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697892]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893787  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697969]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971842 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697856]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835657 0.53471952 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697909]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53472052 0.50859332 0.33438929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697934]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859432 0.33438929\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28697934]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33439029\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28697843]\n",
      "Inputs\n",
      "[0.12324536 1.3975586  0.68615274 0.0302     0.71371678 0.39469039\n",
      " 0.7893777  0.00971742 0.65835557 0.53471952 0.50859332 0.33438929\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28697998]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604812]\n",
      "Inputs\n",
      "[0.10192511 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604805]\n",
      "Inputs\n",
      "[0.10192411 1.39952087 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604811]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958754 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604815]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999851 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2860477]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552914 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2860478]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292863\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604775]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585621 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604844]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955705 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604735]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467674 0.56352532 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604789]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352632 0.5070151  0.33873422\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604812]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070161  0.33873422\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28604812]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873522\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28604732]\n",
      "Inputs\n",
      "[0.10192411 1.39951987 0.68958654 0.03999751 0.68552814 0.40292763\n",
      " 0.80585521 0.00955605 0.68467574 0.56352532 0.5070151  0.33873422\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28604869]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557072]\n",
      "Inputs\n",
      "[0.08715208 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557066]\n",
      "Inputs\n",
      "[0.08715108 1.40151878 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557072]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947389 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557075]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765172 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557033]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320877 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28557041]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458831\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557037]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917563 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557103]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131975 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28556995]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.699999   0.54824907 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557096]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54825007 0.50716918 0.33996539\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28557072]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50717018 0.33996539\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28557072]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996639\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28556996]\n",
      "Inputs\n",
      "[0.08715108 1.40151778 0.68947289 0.04765072 0.66320777 0.40458731\n",
      " 0.80917463 0.01131875 0.7        0.54824907 0.50716918 0.33996539\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28557127]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.40402077 0.6836719  0.05727114 0.64261043 0.39108623\n",
      " 0.78217242 0.01868726 0.69570226 0.3835468  0.51145401 0.33504008\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28457195]\n",
      "Inputs\n",
      "[0.08185335 1.40265589 0.68683519 0.05202511 0.6538422  0.39844839\n",
      " 0.79689677 0.0146692  0.69804583 0.47335923 0.50911749 0.33772586\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28507278]\n",
      "Inputs\n",
      "[0.08460551 1.40206465 0.68820547 0.04975262 0.65870759 0.40163754\n",
      " 0.80327508 0.01292865 0.69906101 0.51226429 0.50810535 0.33888929\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533021]\n",
      "Inputs\n",
      "[0.08589346 1.40178796 0.68884673 0.04868915 0.66098449 0.40313\n",
      " 0.80626001 0.01211411 0.6995361  0.53047109 0.50763169 0.33943375\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28545188]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550751]\n",
      "Inputs\n",
      "[0.08648268 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28550745]\n",
      "Inputs\n",
      "[0.08648168 1.40166259 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855075]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891406  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550753]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820445 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550712]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202537 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550719]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381262\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550716]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762424 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28550782]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117431  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550674]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975408 0.53878624 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550728]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878724 0.50741537 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550751]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741637 0.33968241\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550751]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968341\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28550675]\n",
      "Inputs\n",
      "[0.08648168 1.40166159 0.6891396  0.04820345 0.66202437 0.40381162\n",
      " 0.80762324 0.0117421  0.69975308 0.53878624 0.50741537 0.33968241\n",
      " 0.52359778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28550806]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561007]\n",
      "Inputs\n",
      "[0.08444652 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561002]\n",
      "Inputs\n",
      "[0.08444552 1.40304539 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561007]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68845011 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2856101]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949246 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28560969]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887116 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28560976]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445871\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28560973]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891643 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561038]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289152 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28560931]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.699999   0.54678911 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561031]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54679011 0.50750325 0.33930067\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28561007]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750425 0.33930067\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28561007]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930167\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28560931]\n",
      "Inputs\n",
      "[0.08444552 1.40304439 0.68844911 0.04949146 0.65887016 0.40445771\n",
      " 0.80891543 0.01289052 0.7        0.54678911 0.50750325 0.33930067\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28561062]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554335]\n",
      "Inputs\n",
      "[0.07790944 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554331]\n",
      "Inputs\n",
      "[0.07790844 1.40705644 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554335]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610408 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554337]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385197 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285543]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960706 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28554304]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456418\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554301]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912737 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554364]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016114   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855426]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.699999   0.55421863 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554358]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421963 0.50766347 0.33814186\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554335]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766447 0.33814186\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28554335]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814286\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28554261]\n",
      "Inputs\n",
      "[0.07790844 1.40705544 0.68610308 0.05385097 0.64960606 0.40456318\n",
      " 0.80912637 0.016113   0.7        0.55421863 0.50766347 0.33814186\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28554388]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555725]\n",
      "Inputs\n",
      "[0.08069816 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855572]\n",
      "Inputs\n",
      "[0.08069716 1.40650736 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555724]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618862 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555727]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185778 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555688]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533722  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28555694]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320172\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555691]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640243 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555755]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01442026 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555649]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.699999   0.54555687 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555748]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555787 0.50763093 0.33864332\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555725]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763193 0.33864332\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28555725]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864432\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855565]\n",
      "Inputs\n",
      "[0.08069716 1.40650636 0.68618762 0.05185678 0.6533712  0.40320072\n",
      " 0.80640143 0.01441926 0.7        0.54555687 0.50763093 0.33864332\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28555778]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855598]\n",
      "Inputs\n",
      "[0.07952759 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555976]\n",
      "Inputs\n",
      "[0.07952659 1.40846013 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555979]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495926 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555982]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253635 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555943]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146772 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28555949]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40225084\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555946]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80450069 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855601]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01477043 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555904]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.699999   0.54596461 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28556003]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596561 0.50760665 0.3384395\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2855598]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760765 0.3384395\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2855598]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384405\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28555905]\n",
      "Inputs\n",
      "[0.07952659 1.40845913 0.68495826 0.05253535 0.65146672 0.40224984\n",
      " 0.80449969 0.01476943 0.7        0.54596461 0.50760665 0.3384395\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28556033]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552709]\n",
      "Inputs\n",
      "[0.075501   1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552706]\n",
      "Inputs\n",
      "[0.0755     1.41550703 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552708]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055439 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552711]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481386 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552675]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500584 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28552678]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827597\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552675]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79655093 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552738]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01579078 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552634]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.699999   0.5455581  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552732]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455591  0.5074739  0.33774583\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552709]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074749  0.33774583\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28552709]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774683\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552635]\n",
      "Inputs\n",
      "[0.0755     1.41550603 0.68055339 0.05481286 0.64500484 0.39827497\n",
      " 0.79654993 0.01578978 0.7        0.5455581  0.5074739  0.33774583\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28552761]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551976]\n",
      "Inputs\n",
      "[0.075501   1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551972]\n",
      "Inputs\n",
      "[0.0755     1.41908168 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551975]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862104 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551977]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456698 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551941]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446514 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28551945]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956718\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551942]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134259 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28552005]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516398 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551901]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.699999   0.54578106 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551999]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578206 0.50720288 0.33776043\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551976]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720388 0.33776043\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28551976]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776143\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28551902]\n",
      "Inputs\n",
      "[0.0755     1.41908068 0.67862004 0.05456598 0.64446414 0.3956708\n",
      " 0.79134159 0.01516298 0.7        0.54578106 0.50720288 0.33776043\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28552028]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533257]\n",
      "Inputs\n",
      "[0.075501   1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533253]\n",
      "Inputs\n",
      "[0.0755     1.43657313 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533257]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894511 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533259]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532423  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2853322]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230195 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28533226]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285333\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533223]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570562 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533288]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192594 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533182]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.699999   0.54693994 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533281]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54694094 0.50587163 0.3378753\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533257]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587263 0.3378753\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28533257]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28533184]\n",
      "Inputs\n",
      "[0.0755     1.43657213 0.66894411 0.0532413  0.64230095 0.38285233\n",
      " 0.76570462 0.01192494 0.7        0.54693994 0.50587163 0.3378753\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28533309]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544194]\n",
      "Inputs\n",
      "[0.075501   1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544189]\n",
      "Inputs\n",
      "[0.0755     1.43905889 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544193]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748131 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544196]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318551 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544157]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240269 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28544162]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324738\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544159]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649376 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544225]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185586 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544119]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.699999   0.55460631 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544217]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460731 0.50569069 0.33787317\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28544194]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569169 0.33787317\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28544194]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787417\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2854412]\n",
      "Inputs\n",
      "[0.0755     1.43905789 0.66748031 0.05318451 0.64240169 0.38324638\n",
      " 0.76649276 0.01185486 0.7        0.55460631 0.50569069 0.33787317\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28544246]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542955]\n",
      "Inputs\n",
      "[0.075501   1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542951]\n",
      "Inputs\n",
      "[0.0755     1.44110719 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542955]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528839 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542957]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308916 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542918]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277447 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28542924]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526767\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542921]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053434 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542986]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242349 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2854288]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.699999   0.5473797  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542978]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473807  0.50592477 0.33787492\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542955]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592577 0.33787492\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28542955]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787592\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28542882]\n",
      "Inputs\n",
      "[0.0755     1.44110619 0.66528739 0.05308816 0.64277347 0.38526667\n",
      " 0.77053334 0.01242249 0.7        0.5473797  0.50592477 0.33787492\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28543007]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538954]\n",
      "Inputs\n",
      "[0.075501   1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538949]\n",
      "Inputs\n",
      "[0.0755     1.46438058 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538954]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64964056 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538956]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189809 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538918]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294638 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28538923]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384738\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2853892]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769377 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538985]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183532 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538879]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.699999   0.54743312 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538977]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743412 0.50516624 0.33794239\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538954]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516724 0.33794239\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28538954]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794339\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28538881]\n",
      "Inputs\n",
      "[0.0755     1.46437958 0.64963956 0.05189709 0.64294538 0.38384638\n",
      " 0.76769277 0.01183432 0.7        0.54743312 0.50516624 0.33794239\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28539006]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2846849]\n",
      "Inputs\n",
      "[0.075501   1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468478]\n",
      "Inputs\n",
      "[0.0755     1.72908725 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2846849]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875226 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468493]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838805 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468454]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576952 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28468459]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624528\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468456]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248954 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468522]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077772  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468416]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.699999   0.52000169 0.4978407  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468514]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000269 0.4978407  0.33861038\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2846849]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978417  0.33861038\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2846849]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861138\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28468419]\n",
      "Inputs\n",
      "[0.0755     1.72908625 0.46875126 0.03838705 0.64576852 0.37624428\n",
      " 0.75248854 0.0077762  0.7        0.52000169 0.4978407  0.33861038\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28468541]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520545]\n",
      "Inputs\n",
      "[0.075501   1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520534]\n",
      "Inputs\n",
      "[0.0755     1.70314287 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520544]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925294 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520547]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395696  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520508]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238651 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28520513]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378908\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2852051]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757715 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520577]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081654  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2852047]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.699999   0.54919475 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520568]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919575 0.49798914 0.33822763\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520545]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49799014 0.33822763\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28520545]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822863\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520472]\n",
      "Inputs\n",
      "[0.0755     1.70314187 0.48925194 0.0395686  0.64238551 0.37378808\n",
      " 0.74757615 0.0081644  0.7        0.54919475 0.49798914 0.33822763\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28520597]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520698]\n",
      "Inputs\n",
      "[0.075501   1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520687]\n",
      "Inputs\n",
      "[0.0755     1.71703552 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520698]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085173 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285207]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889406 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520661]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422329  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28520666]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734354\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520663]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686979 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2852073]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808609 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520623]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.699999   0.54911957 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520721]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54912057 0.49764145 0.33822013\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520698]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764245 0.33822013\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28520698]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822113\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28520625]\n",
      "Inputs\n",
      "[0.0755     1.71703452 0.48085073 0.03889306 0.6422319  0.3734344\n",
      " 0.74686879 0.00808509 0.7        0.54911957 0.49764145 0.33822013\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.2852075]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285188]\n",
      "Inputs\n",
      "[0.075501   1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518787]\n",
      "Inputs\n",
      "[0.0755     1.76493242 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518799]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512327 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518802]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680492 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518762]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214987 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518768]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739592\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518765]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791741 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518832]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828194 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518725]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.699999   0.54874645 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518823]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874745 0.49658383 0.33821264\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285188]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658483 0.33821264\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.285188]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821364\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518727]\n",
      "Inputs\n",
      "[0.0755     1.76493142 0.45512227 0.03680392 0.64214887 0.3739582\n",
      " 0.74791641 0.00828094 0.7        0.54874645 0.49658383 0.33821264\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28518852]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516324]\n",
      "Inputs\n",
      "[0.075501   1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2851631]\n",
      "Inputs\n",
      "[0.0755     1.82017941 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516324]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144685 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516326]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481497 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516287]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245294 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28516292]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725145\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516289]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450192 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516355]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093603  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516249]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.699999   0.54833354 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516347]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833454 0.49556831 0.3381834\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516324]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556931 0.3381834\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28516324]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381844\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516251]\n",
      "Inputs\n",
      "[0.0755     1.82017841 0.43144585 0.03481397 0.64245194 0.37725045\n",
      " 0.75450092 0.0093593  0.7        0.54833354 0.49556831 0.3381834\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28516376]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518473]\n",
      "Inputs\n",
      "[0.075501   1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2851846]\n",
      "Inputs\n",
      "[0.0755     1.79642062 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518473]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381299 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518476]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584635 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518436]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425108  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518442]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650272\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518438]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300443 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518505]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904463 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518398]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.699999   0.548425   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518496]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548426   0.49609798 0.33819207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518473]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609898 0.33819207\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518473]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819307\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.285184]\n",
      "Inputs\n",
      "[0.0755     1.79641962 0.44381199 0.03584535 0.6425098  0.37650172\n",
      " 0.75300343 0.00904363 0.7        0.548425   0.49609798 0.33819207\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28518525]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.74381069 0.47048235 0.03785076 0.64194851 0.37250116\n",
      " 0.7450023  0.00791052 0.7        0.54929782 0.4971691  0.33824542\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28516108]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518117]\n",
      "Inputs\n",
      "[0.075501   1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518105]\n",
      "Inputs\n",
      "[0.0755     1.78342161 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518117]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040291 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2851812]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634186 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.2851808]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237211 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518086]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551423\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518083]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102745 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518149]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876465 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518042]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.699999   0.54864067 0.49636264 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518141]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864167 0.49636264 0.33820525\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518117]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636364 0.33820525\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518117]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820625\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518044]\n",
      "Inputs\n",
      "[0.0755     1.78342061 0.45040191 0.03634086 0.64237111 0.37551323\n",
      " 0.75102645 0.00876365 0.7        0.54864067 0.49636264 0.33820525\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28518169]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.71451679 0.48394704 0.0387553  0.64090299 0.36731864\n",
      " 0.73463725 0.00652119 0.7        0.55005518 0.49770442 0.3382808\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28511549]\n",
      "Inputs\n",
      "[0.0755     1.77214493 0.45589136 0.03673597 0.64213086 0.37417223\n",
      " 0.74834446 0.00839669 0.7        0.54887214 0.49658221 0.33821762\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28517676]\n",
      "Inputs\n",
      "[0.0755     1.7812222  0.45147218 0.03641789 0.64232427 0.37525178\n",
      " 0.75050355 0.0086921  0.7        0.5486858  0.49640545 0.33820766\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2851805]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518103]\n",
      "Inputs\n",
      "[0.075501   1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.2851809]\n",
      "Inputs\n",
      "[0.0755     1.78291159 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518102]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065121 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518105]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635973 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518065]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236124 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518071]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545357\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518068]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090614 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518134]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874805 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.28518027]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.699999   0.54865114 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518126]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865214 0.49637257 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518103]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637357 0.33820581\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518103]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820681\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518029]\n",
      "Inputs\n",
      "[0.0755     1.78291059 0.45065021 0.03635873 0.64236024 0.37545257\n",
      " 0.75090514 0.00874705 0.7        0.54865114 0.49637257 0.33820581\n",
      " 0.52359778]\n",
      "Obj\n",
      "[0.28518154]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     1.78432923 0.4515064  0.03639433 0.64237763 0.3754778\n",
      " 0.7509556  0.00874846 0.7        0.54866135 0.49640363 0.338207\n",
      " 0.52359878]\n",
      "Obj\n",
      "[0.28518216]\n",
      "Optimization terminated successfully    (Exit mode 0)\n",
      "            Current function value: 0.28518215868478525\n",
      "            Iterations: 66\n",
      "            Function evaluations: 1046\n",
      "            Gradient evaluations: 65\n",
      "Lift-rotor Optimization Simulation Time: 1.96 mins\n",
      "[0.0755     1.78432923 0.4515064  0.03639433 0.64237763 0.3754778\n",
      " 0.7509556  0.00874846 0.7        0.54866135 0.49640363 0.338207\n",
      " 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Warning: pitch commanded for a fixed-pitch rotor. Changing to variable pitch rotor for weights analysis.\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.7659278]\n",
      "Inputs\n",
      "[0.15101    2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592088]\n",
      "Inputs\n",
      "[0.151      1.99999    1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592804]\n",
      "Inputs\n",
      "[0.151      2.         1.00001    0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592817]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.07551    0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592195]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52360878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76593255]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.00001\n",
      " 0.5        0.52359878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592876]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.50001    0.52359878 0.5        0.5        0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.76592528]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52360878 0.5        0.5        0.52359878]\n",
      "Obj\n",
      "[0.76593304]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.50001    0.5        0.52359878]\n",
      "Obj\n",
      "[0.76592673]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.50001    0.52359878]\n",
      "Obj\n",
      "[0.7659278]\n",
      "Inputs\n",
      "[0.151      2.         1.         0.0755     0.52359878 1.\n",
      " 0.5        0.52359878 0.5        0.5        0.52358878]\n",
      "Obj\n",
      "[0.7659278]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688892]\n",
      "Inputs\n",
      "[0.07551    0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688789]\n",
      "Inputs\n",
      "[0.0755     0.25001    0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688868]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87500875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.96688907]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.03021    0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688506]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78538816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.96688818]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 1.99999\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39788231]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.96688887]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25001    0.6785965  0.3        0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688833]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6786065  0.3        0.82792221 0.39788231]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.96688966]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.30001    0.82792221 0.39788231]\n",
      "Obj\n",
      "[0.96688866]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82793221 0.39788231]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.96688892]\n",
      "Inputs\n",
      "[0.0755     0.25       0.87499875 0.0302     0.78539816 2.\n",
      " 0.25       0.6785965  0.3        0.82792221 0.39789231]\n",
      "Obj\n",
      "[0.96688892]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.0755     0.25       0.84605256 0.0302     0.78539816 2.\n",
      " 0.3416191  0.78539816 0.7        0.85       0.35445982]\n",
      "Obj\n",
      "[0.95854648]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297665]\n",
      "Inputs\n",
      "[0.07551    0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.96297567]\n",
      "Inputs\n",
      "[0.0755     0.25001    0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297642]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85930958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297679]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.03021    0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297275]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78538816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297578]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 1.99999\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297658]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29970027 0.73652114 0.51694283 0.83989626 0.37433182]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.96297601]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73653114 0.51694283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297753]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51695283 0.83989626 0.37433182]\n",
      "Obj\n",
      "[0.96297637]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83990626 0.37433182]\n",
      "Obj\n",
      "[0.96297665]\n",
      "Inputs\n",
      "[0.0755     0.25       0.85929958 0.0302     0.78539816 2.\n",
      " 0.29969027 0.73652114 0.51694283 0.83989626 0.37434182]\n",
      "Obj\n",
      "[0.96297665]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      0.74586727 0.25       0.151      0.74834769 2.\n",
      " 0.37464279 0.78539816 0.7        0.85       0.26496366]\n",
      "Obj\n",
      "[0.85026176]\n",
      "Inputs\n",
      "[0.09815    0.29958673 0.79836962 0.04228    0.78169312 2.\n",
      " 0.30718552 0.74140884 0.53524855 0.84090663 0.363395  ]\n",
      "Obj\n",
      "[0.95325741]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.9591606]\n",
      "Inputs\n",
      "[0.08435338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95915961]\n",
      "Inputs\n",
      "[0.08434338 0.26937045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95916037]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83552032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95916076]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03492647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95915698]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78396158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95916155]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 1.99999\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95916052]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30262669 0.73842947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95915991]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73843947 0.52409004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95916156]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52410004 0.84029074 0.37006169]\n",
      "Obj\n",
      "[0.95916029]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84030074 0.37006169]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9591606]\n",
      "Inputs\n",
      "[0.08434338 0.26936045 0.83551032 0.03491647 0.78395158 2.\n",
      " 0.30261669 0.73842947 0.52409004 0.84029074 0.37007169]\n",
      "Obj\n",
      "[0.9591606]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Obj\n",
      "[0.95827578]\n",
      "Inputs\n",
      "[0.10153812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Obj\n",
      "[0.95827522]\n",
      "Inputs\n",
      "[0.10152812 0.48387264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95827564]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.49999    0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Obj\n",
      "[0.95827572]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04953493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.9582726]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78538816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95827484]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 1.99999\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95827569]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34436289 0.78539816 0.50471705 0.81533994 0.36112337]\n",
      "Obj\n",
      "[0.95827508]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78538816 0.50471705 0.81533994 0.36112337]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95827477]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50472705 0.81533994 0.36112337]\n",
      "Obj\n",
      "[0.95827547]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81534994 0.36112337]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95827578]\n",
      "Inputs\n",
      "[0.10152812 0.48386264 1.5        0.04952493 0.78539816 2.\n",
      " 0.34435289 0.78539816 0.50471705 0.81533994 0.36113337]\n",
      "Obj\n",
      "[0.95827578]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.12371263 0.4883095  1.5        0.0302     0.78539816 2.\n",
      " 0.34820195 0.78539816 0.63822213 0.85       0.10520031]\n",
      "Obj\n",
      "[0.95897117]\n",
      "Inputs\n",
      "[0.10983721 0.48552819 1.5        0.04228688 0.78539816 2.\n",
      " 0.34579453 0.78539816 0.55472065 0.82832168 0.26526878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95844447]\n",
      "Inputs\n",
      "[0.1038644  0.48433094 1.5        0.0474898  0.78539816 2.\n",
      " 0.34475824 0.78539816 0.51877662 0.81899003 0.33417183]\n",
      "Obj\n",
      "[0.95831559]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828703]\n",
      "Inputs\n",
      "[0.10221657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828647]\n",
      "Inputs\n",
      "[0.10220657 0.48400863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828689]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.49999    0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828696]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04894393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828383]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78538816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95828609]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 1.99999\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828694]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444806  0.78539816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828633]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78538816 0.50879993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828602]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50880993 0.81639992 0.35329668]\n",
      "Obj\n",
      "[0.95828671]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81640992 0.35329668]\n",
      "Obj\n",
      "[0.95828703]\n",
      "Inputs\n",
      "[0.10220657 0.48399863 1.5        0.04893393 0.78539816 2.\n",
      " 0.3444706  0.78539816 0.50879993 0.81639992 0.35330668]\n",
      "Obj\n",
      "[0.95828703]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Obj\n",
      "[0.95822917]\n",
      "Inputs\n",
      "[0.11711393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Obj\n",
      "[0.9582286]\n",
      "Inputs\n",
      "[0.11710393 0.48411276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95822901]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.49999    0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95822909]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04576924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95822595]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78538816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95822823]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 1.99999\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95822908]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34457076 0.78539816 0.5158136  0.8193299  0.35152092]\n",
      "Obj\n",
      "[0.95822848]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78538816 0.5158136  0.8193299  0.35152092]\n",
      "Obj\n",
      "[0.95822817]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158236  0.8193299  0.35152092]\n",
      "Obj\n",
      "[0.95822885]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193399  0.35152092]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95822917]\n",
      "Inputs\n",
      "[0.11710393 0.48410276 1.5        0.04575924 0.78539816 2.\n",
      " 0.34456076 0.78539816 0.5158136  0.8193299  0.35153092]\n",
      "Obj\n",
      "[0.95822917]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825915]\n",
      "Inputs\n",
      "[0.12253357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825857]\n",
      "Inputs\n",
      "[0.12252357 0.48414596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825897]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.49999    0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825907]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04430631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825592]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78538816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9582582]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 1.99999\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825906]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34459951 0.78539816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825846]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78538816 0.51982161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825815]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51983161 0.81992121 0.34992925]\n",
      "Obj\n",
      "[0.95825883]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81993121 0.34992925]\n",
      "Obj\n",
      "[0.95825915]\n",
      "Inputs\n",
      "[0.12252357 0.48413596 1.5        0.04429631 0.78539816 2.\n",
      " 0.34458951 0.78539816 0.51982161 0.81992121 0.34993925]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95825915]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.13360777 0.48430774 1.5        0.0407222  0.78539816 2.\n",
      " 0.34473828 0.78539816 0.53097669 0.8202837  0.34447772]\n",
      "Obj\n",
      "[0.95840547]\n",
      "Inputs\n",
      "[0.12542497 0.48418093 1.5        0.04336075 0.78539816 2.\n",
      " 0.34462845 0.78539816 0.52274155 0.82001609 0.34850226]\n",
      "Obj\n",
      "[0.9582973]\n",
      "Inputs\n",
      "[0.12328306 0.48414773 1.5        0.04405141 0.78539816 2.\n",
      " 0.3445997  0.78539816 0.52058595 0.81994604 0.34955571]\n",
      "Obj\n",
      "[0.95826915]\n",
      "Inputs\n",
      "[0.12273854 0.4841393  1.5        0.04422699 0.78539816 2.\n",
      " 0.3445924  0.78539816 0.52003795 0.81992824 0.34982352]\n",
      "Obj\n",
      "[0.95826198]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95826029]\n",
      "Inputs\n",
      "[0.12262029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95825971]\n",
      "Inputs\n",
      "[0.12261029 0.48414731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95826011]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.49999    0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95826021]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04427835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95825706]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78538816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95825935]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 1.99999\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.9582602]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34460067 0.78539816 0.51990888 0.81992404 0.3498866 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9582596]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78538816 0.51990888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.9582593]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51991888 0.81992404 0.3498866 ]\n",
      "Obj\n",
      "[0.95825997]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81993404 0.3498866 ]\n",
      "Obj\n",
      "[0.95826029]\n",
      "Inputs\n",
      "[0.12261029 0.48413731 1.5        0.04426835 0.78539816 2.\n",
      " 0.34459067 0.78539816 0.51990888 0.81992404 0.3498966 ]\n",
      "Obj\n",
      "[0.95826029]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     0.81757884 1.5        0.0302     0.78539816 2.\n",
      " 0.34547646 0.78539816 0.57786332 0.76981376 0.31378557]\n",
      "Obj\n",
      "[0.96035126]\n",
      "Inputs\n",
      "[0.11237686 0.55656845 1.5        0.04121238 0.78539816 2.\n",
      " 0.34478309 0.78539816 0.53249791 0.80903894 0.34204463]\n",
      "Obj\n",
      "[0.95825736]\n",
      "Inputs\n",
      "[0.12009431 0.50194516 1.5        0.04351701 0.78539816 2.\n",
      " 0.34463798 0.78539816 0.52300401 0.81724784 0.34795858]\n",
      "Obj\n",
      "[0.9582391]\n",
      "Inputs\n",
      "[0.12193466 0.48891938 1.5        0.04406659 0.78539816 2.\n",
      " 0.34460338 0.78539816 0.52074004 0.81920538 0.34936885]\n",
      "Obj\n",
      "[0.95825335]\n",
      "Inputs\n",
      "[0.12242478 0.48545032 1.5        0.04421295 0.78539816 2.\n",
      " 0.34459416 0.78539816 0.52013709 0.81972672 0.34974444]\n",
      "Obj\n",
      "[0.95825829]\n",
      "Inputs\n",
      "[0.12255905 0.48449999 1.5        0.04425305 0.78539816 2.\n",
      " 0.34459164 0.78539816 0.51997191 0.81986954 0.34984733]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95825973]\n",
      "Inputs\n",
      "[0.12259611 0.48423765 1.5        0.04426411 0.78539816 2.\n",
      " 0.34459094 0.78539816 0.51992632 0.81990896 0.34987573]\n",
      "Obj\n",
      "[0.95826014]\n",
      "Inputs\n",
      "[0.12260637 0.48416508 1.5        0.04426718 0.78539816 2.\n",
      " 0.34459075 0.78539816 0.51991371 0.81991987 0.34988359]\n",
      "Obj\n",
      "[0.95826025]\n",
      "Inputs\n",
      "[0.1226092  0.484145   1.5        0.04426802 0.78539816 2.\n",
      " 0.3445907  0.78539816 0.51991021 0.81992289 0.34988576]\n",
      "Obj\n",
      "[0.95826028]\n",
      "Inputs\n",
      "[0.12260999 0.48413944 1.5        0.04426826 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990925 0.81992372 0.34988637]\n",
      "Obj\n",
      "[0.95826029]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95826029]\n",
      "Inputs\n",
      "[0.12262021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95825971]\n",
      "Inputs\n",
      "[0.12261021 0.4841479  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95826011]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.49999    0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95826021]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04427832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95825706]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78538816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95825935]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 1.99999\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.9582602]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34460068 0.78539816 0.51990898 0.81992395 0.34988653]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9582596]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78538816 0.51990898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.9582593]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51991898 0.81992395 0.34988653]\n",
      "Obj\n",
      "[0.95825997]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81993395 0.34988653]\n",
      "Obj\n",
      "[0.95826029]\n",
      "Inputs\n",
      "[0.12261021 0.4841379  1.5        0.04426832 0.78539816 2.\n",
      " 0.34459068 0.78539816 0.51990898 0.81992395 0.34989653]\n",
      "Obj\n",
      "[0.95826029]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824664]\n",
      "Inputs\n",
      "[0.12452989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824602]\n",
      "Inputs\n",
      "[0.12451989 0.50487585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824646]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.49999    0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824655]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04236437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.9582434]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78538816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95824569]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 1.99999\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824655]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34460696 0.78539816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824596]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78538816 0.52456993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824565]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52457993 0.81827552 0.34726889]\n",
      "Obj\n",
      "[0.95824632]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81828552 0.34726889]\n",
      "Obj\n",
      "[0.95824664]\n",
      "Inputs\n",
      "[0.12451989 0.50486585 1.5        0.04235437 0.78539816 2.\n",
      " 0.34459696 0.78539816 0.52456993 0.81827552 0.34727889]\n",
      "Obj\n",
      "[0.95824664]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823829]\n",
      "Inputs\n",
      "[0.12536101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.95823766]\n",
      "Inputs\n",
      "[0.12535101 0.51379139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823811]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.49999    0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.9582382]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04152814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823505]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78538816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823734]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 1.99999\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.9582382]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34460841 0.78539816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823761]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78538816 0.5266363  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823731]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266463  0.81779086 0.34618607]\n",
      "Obj\n",
      "[0.95823798]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81780086 0.34618607]\n",
      "Obj\n",
      "[0.95823829]\n",
      "Inputs\n",
      "[0.12535101 0.51378139 1.5        0.04151814 0.78539816 2.\n",
      " 0.34459841 0.78539816 0.5266363  0.81779086 0.34619607]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823829]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.9582355]\n",
      "Inputs\n",
      "[0.12579639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823486]\n",
      "Inputs\n",
      "[0.12578639 0.51838937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823531]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.49999    0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823541]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04107915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823225]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78538816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823455]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 1.99999\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823541]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446112  0.78539816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823482]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78538816 0.52778764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823451]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52779764 0.82217449 0.33471643]\n",
      "Obj\n",
      "[0.95823518]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82218449 0.33471643]\n",
      "Obj\n",
      "[0.9582355]\n",
      "Inputs\n",
      "[0.12578639 0.51837937 1.5        0.04106915 0.78539816 2.\n",
      " 0.3446012  0.78539816 0.52778764 0.82217449 0.33472643]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9582355]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12657983 0.52638156 1.5        0.04019522 0.78539816 2.\n",
      " 0.34461857 0.78539816 0.53023528 0.85       0.25750555]\n",
      "Obj\n",
      "[0.95824203]\n",
      "Inputs\n",
      "[0.12604209 0.52095817 1.5        0.04078752 0.78539816 2.\n",
      " 0.34460679 0.78539816 0.52857642 0.83114158 0.30983434]\n",
      "Obj\n",
      "[0.9582378]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823675]\n",
      "Inputs\n",
      "[0.12593448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823611]\n",
      "Inputs\n",
      "[0.12592448 0.51978205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823657]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.49999    0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823666]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04092705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823351]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78538816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.9582358]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 1.99999\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823667]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34461422 0.78539816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823608]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78538816 0.52821362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823577]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52822362 0.82701716 0.32127887]\n",
      "Obj\n",
      "[0.95823644]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82702716 0.32127887]\n",
      "Obj\n",
      "[0.95823675]\n",
      "Inputs\n",
      "[0.12592448 0.51977205 1.5        0.04091705 0.78539816 2.\n",
      " 0.34460422 0.78539816 0.52821362 0.82701716 0.32128887]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823675]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12631167 0.52400333 1.5        0.04053117 0.78539816 2.\n",
      " 0.34460622 0.78539816 0.52915341 0.82722705 0.32086611]\n",
      "Obj\n",
      "[0.9582293]\n",
      "Inputs\n",
      "[0.12606236 0.52127881 1.5        0.04077964 0.78539816 2.\n",
      " 0.34460493 0.78539816 0.52854828 0.8270919  0.32113189]\n",
      "Obj\n",
      "[0.95823416]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823545]\n",
      "Inputs\n",
      "[0.12600368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823481]\n",
      "Inputs\n",
      "[0.12599368 0.52053825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823527]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.49999    0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823536]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04085809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.9582322]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78538816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.9582345]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 1.99999\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823536]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34461458 0.78539816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823477]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78538816 0.52838158 0.82705467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823446]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52839158 0.82705467 0.3212051 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823514]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82706467 0.3212051 ]\n",
      "Obj\n",
      "[0.95823545]\n",
      "Inputs\n",
      "[0.12599368 0.52052825 1.5        0.04084809 0.78539816 2.\n",
      " 0.34460458 0.78539816 0.52838158 0.82705467 0.3212151 ]\n",
      "Obj\n",
      "[0.95823545]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12599088 0.52052855 1.5        0.0408455  0.78539816 2.\n",
      " 0.34460487 0.78539816 0.52839586 0.82763677 0.31936201]\n",
      "Obj\n",
      "[0.958236]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823563]\n",
      "Inputs\n",
      "[0.12600275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823499]\n",
      "Inputs\n",
      "[0.12599275 0.52053835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823545]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.49999    0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823554]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04085723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823238]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78538816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823468]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 1.99999\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823554]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34461467 0.78539816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823495]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78538816 0.52838633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823464]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52839633 0.82724826 0.32059216]\n",
      "Obj\n",
      "[0.95823532]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82725826 0.32059216]\n",
      "Obj\n",
      "[0.95823563]\n",
      "Inputs\n",
      "[0.12599275 0.52052835 1.5        0.04084723 0.78539816 2.\n",
      " 0.34460467 0.78539816 0.52838633 0.82724826 0.32060216]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823563]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.12100975 0.52055044 1.5        0.04134071 0.78539816 2.\n",
      " 0.3405457  0.78131322 0.52838439 0.85       0.18008105]\n",
      "Obj\n",
      "[0.95826832]\n",
      "Inputs\n",
      "[0.12525367 0.52053163 1.5        0.04092042 0.78539816 2.\n",
      " 0.34400265 0.78479228 0.52838604 0.8306228  0.29975152]\n",
      "Obj\n",
      "[0.95824033]\n",
      "Inputs\n",
      "[0.12588167 0.52052884 1.5        0.04085823 0.78539816 2.\n",
      " 0.34451419 0.78530711 0.52838629 0.82775542 0.31745999]\n",
      "Obj\n",
      "[0.95823633]\n",
      "Inputs\n",
      "[0.12597542 0.52052843 1.5        0.04084894 0.78539816 2.\n",
      " 0.34459056 0.78538396 0.52838632 0.82732739 0.32010343]\n",
      "Obj\n",
      "[0.95823574]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823501]\n",
      "Inputs\n",
      "[0.12598921 0.52053837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823547]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.49999    0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04085758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78538816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.9582347]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 1.99999\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34461179 0.78539526 0.52838633 0.82726441 0.32049237]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78538526 0.52838633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52839633 0.82726441 0.32049237]\n",
      "Obj\n",
      "[0.95823534]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82727441 0.32049237]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598921 0.52052837 1.5        0.04084758 0.78539816 2.\n",
      " 0.34460179 0.78539526 0.52838633 0.82726441 0.32050237]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.52075267  1.5         0.04585078  0.78539816  2.\n",
      "  0.3034824   0.74401198  0.5283539   0.85       -0.52359878]\n",
      "Obj\n",
      "[0.9586678]\n",
      "Inputs\n",
      "[0.11911903 0.52055889 1.5        0.04152837 0.78539816 2.\n",
      " 0.33900658 0.77976415 0.52838192 0.8303581  0.20563497]\n",
      "Obj\n",
      "[0.9582813]\n",
      "Inputs\n",
      "[0.12496812 0.5205329  1.5        0.04094876 0.78539816 2.\n",
      " 0.3437702  0.78455833 0.52838567 0.82772422 0.30342156]\n",
      "Obj\n",
      "[0.95824215]\n",
      "Inputs\n",
      "[0.12583555 0.52052905 1.5        0.0408628  0.78539816 2.\n",
      " 0.34447665 0.78526931 0.52838623 0.82733361 0.31792341]\n",
      "Obj\n",
      "[0.95823662]\n",
      "Inputs\n",
      "[0.1259659  0.52052847 1.5        0.04084989 0.78539816 2.\n",
      " 0.34458281 0.78537616 0.52838631 0.82727491 0.32010273]\n",
      "Obj\n",
      "[0.9582358]\n",
      "Inputs\n",
      "[0.12598552 0.52052838 1.5        0.04084794 0.78539816 2.\n",
      " 0.34459879 0.78539224 0.52838633 0.82726607 0.32043077]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598842 0.52053837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.49999    0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04085766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78538816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 1.99999\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34461115 0.78539461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78538461 0.52838633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52839633 0.82726477 0.32047913]\n",
      "Obj\n",
      "[0.95823534]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82727477 0.32047913]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598842 0.52052837 1.5        0.04084766 0.78539816 2.\n",
      " 0.34460115 0.78539461 0.52838633 0.82726477 0.32048913]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.52075272  1.5         0.04585085  0.78539816  2.\n",
      "  0.30348301  0.74401247  0.52835381  0.85       -0.52359878]\n",
      "Obj\n",
      "[0.95866778]\n",
      "Inputs\n",
      "[0.11911763 0.5205589  1.5        0.04152852 0.78539816 2.\n",
      " 0.33900552 0.77976306 0.5283819  0.83035873 0.20561156]\n",
      "Obj\n",
      "[0.95828131]\n",
      "Inputs\n",
      "[0.12496699 0.52053291 1.5        0.04094888 0.78539816 2.\n",
      " 0.34376929 0.78455741 0.52838567 0.82772473 0.30340266]\n",
      "Obj\n",
      "[0.95824216]\n",
      "Inputs\n",
      "[0.12583476 0.52052905 1.5        0.04086288 0.78539816 2.\n",
      " 0.34447601 0.78526867 0.52838623 0.82733396 0.3179103 ]\n",
      "Obj\n",
      "[0.95823663]\n",
      "Inputs\n",
      "[0.12596522 0.52052847 1.5        0.04084995 0.78539816 2.\n",
      " 0.34458226 0.7853756  0.52838631 0.82727522 0.32009137]\n",
      "Obj\n",
      "[0.95823581]\n",
      "Inputs\n",
      "[0.12598487 0.52052839 1.5        0.04084801 0.78539816 2.\n",
      " 0.34459826 0.78539171 0.52838632 0.82726637 0.32041991]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598783 0.52052837 1.5        0.04084771 0.78539816 2.\n",
      " 0.34460067 0.78539413 0.52838633 0.82726503 0.32046935]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598823 0.52053837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.49999    0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04085767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78538816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 1.99999\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34461099 0.78539446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78538446 0.52838633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52839633 0.82726486 0.32047598]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82727486 0.32047598]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598823 0.52052837 1.5        0.04084767 0.78539816 2.\n",
      " 0.34460099 0.78539446 0.52838633 0.82726486 0.32048598]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.52075274  1.5         0.04585087  0.78539816  2.\n",
      "  0.30348312  0.74401255  0.5283538   0.85       -0.52359878]\n",
      "Obj\n",
      "[0.95866778]\n",
      "Inputs\n",
      "[0.11911733 0.5205589  1.5        0.04152855 0.78539816 2.\n",
      " 0.3390053  0.77976283 0.5283819  0.83035886 0.20560658]\n",
      "Obj\n",
      "[0.95828131]\n",
      "Inputs\n",
      "[0.12496673 0.52053291 1.5        0.0409489  0.78539816 2.\n",
      " 0.34376908 0.7845572  0.52838567 0.82772484 0.30339826]\n",
      "Obj\n",
      "[0.95824216]\n",
      "Inputs\n",
      "[0.12583458 0.52052905 1.5        0.0408629  0.78539816 2.\n",
      " 0.34447586 0.78526852 0.52838623 0.82733405 0.31790719]\n",
      "Obj\n",
      "[0.95823663]\n",
      "Inputs\n",
      "[0.12596506 0.52052847 1.5        0.04084997 0.78539816 2.\n",
      " 0.34458213 0.78537547 0.52838631 0.82727529 0.32008866]\n",
      "Obj\n",
      "[0.95823581]\n",
      "Inputs\n",
      "[0.12598472 0.52052839 1.5        0.04084802 0.78539816 2.\n",
      " 0.34459813 0.78539158 0.52838632 0.82726644 0.3204173 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598768 0.52052837 1.5        0.04084773 0.78539816 2.\n",
      " 0.34460055 0.78539401 0.52838633 0.8272651  0.32046681]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598812 0.52053837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.49999    0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04085769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78538816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 1.99999\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34461091 0.78539437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78538437 0.52838633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52839633 0.8272649  0.3204742 ]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272749  0.3204742 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598812 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460091 0.78539437 0.52838633 0.8272649  0.3204842 ]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.52075274  1.5         0.04585087  0.78539816  2.\n",
      "  0.30348314  0.74401256  0.52835379  0.85       -0.52359878]\n",
      "Obj\n",
      "[0.95866778]\n",
      "Inputs\n",
      "[0.11911716 0.52055891 1.5        0.04152857 0.78539816 2.\n",
      " 0.33900517 0.7797627  0.5283819  0.83035894 0.20560381]\n",
      "Obj\n",
      "[0.95828131]\n",
      "Inputs\n",
      "[0.1249666  0.52053291 1.5        0.04094892 0.78539816 2.\n",
      " 0.34376897 0.78455709 0.52838567 0.8277249  0.30339606]\n",
      "Obj\n",
      "[0.95824216]\n",
      "Inputs\n",
      "[0.12583448 0.52052905 1.5        0.04086291 0.78539816 2.\n",
      " 0.34447578 0.78526844 0.52838623 0.82733409 0.31790552]\n",
      "Obj\n",
      "[0.95823663]\n",
      "Inputs\n",
      "[0.12596497 0.52052847 1.5        0.04084998 0.78539816 2.\n",
      " 0.34458205 0.7853754  0.52838631 0.82727533 0.32008714]\n",
      "Obj\n",
      "[0.95823581]\n",
      "Inputs\n",
      "[0.12598463 0.52052839 1.5        0.04084803 0.78539816 2.\n",
      " 0.34459806 0.78539151 0.52838632 0.82726648 0.32041582]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598759 0.52052837 1.5        0.04084774 0.78539816 2.\n",
      " 0.34460048 0.78539394 0.52838633 0.82726514 0.32046535]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598804 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460084 0.7853943  0.52838633 0.82726494 0.32047282]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598811 0.52053837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.49999    0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.82726491 0.32047393]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.82726491 0.32047393]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82727491 0.32047393]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32048393]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.07550005  0.52075274  1.5         0.04585087  0.78539816  2.\n",
      "  0.30348318  0.7440126   0.52835379  0.84999998 -0.52359797]\n",
      "Obj\n",
      "[0.95866777]\n",
      "Inputs\n",
      "[0.11911715 0.52055891 1.5        0.04152857 0.78539816 2.\n",
      " 0.33900516 0.77976269 0.5283819  0.83035894 0.20560361]\n",
      "Obj\n",
      "[0.95828131]\n",
      "Inputs\n",
      "[0.12496657 0.52053291 1.5        0.04094892 0.78539816 2.\n",
      " 0.34376895 0.78455708 0.52838567 0.82772491 0.3033957 ]\n",
      "Obj\n",
      "[0.95824216]\n",
      "Inputs\n",
      "[0.12583446 0.52052905 1.5        0.04086291 0.78539816 2.\n",
      " 0.34447576 0.78526843 0.52838623 0.8273341  0.31790526]\n",
      "Obj\n",
      "[0.95823663]\n",
      "Inputs\n",
      "[0.12596496 0.52052847 1.5        0.04084998 0.78539816 2.\n",
      " 0.34458204 0.78537538 0.52838631 0.82727534 0.32008692]\n",
      "Obj\n",
      "[0.95823581]\n",
      "Inputs\n",
      "[0.12598462 0.52052839 1.5        0.04084803 0.78539816 2.\n",
      " 0.34459805 0.7853915  0.52838632 0.82726648 0.3204156 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598758 0.52052837 1.5        0.04084774 0.78539816 2.\n",
      " 0.34460046 0.78539393 0.52838633 0.82726515 0.32046514]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598803 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460083 0.78539429 0.52838633 0.82726495 0.3204726 ]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598809 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460088 0.78539435 0.52838633 0.82726492 0.32047373]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.3204739 ]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598811 0.52053837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.49999    0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.82726491 0.32047392]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.82726491 0.32047392]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82727491 0.32047392]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598811 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32048392]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.52075286  1.5         0.045853    0.78539816  2.\n",
      "  0.3034657   0.74399502  0.52835378  0.85       -0.52359878]\n",
      "Obj\n",
      "[0.95866656]\n",
      "Inputs\n",
      "[0.11911398 0.52055894 1.5        0.04152918 0.78539816 2.\n",
      " 0.3390002  0.7797577  0.5283819  0.83036037 0.20555059]\n",
      "Obj\n",
      "[0.95828117]\n",
      "Inputs\n",
      "[0.12496558 0.52053292 1.5        0.04094906 0.78539816 2.\n",
      " 0.34376779 0.7845559  0.52838567 0.82772536 0.30337904]\n",
      "Obj\n",
      "[0.95824214]\n",
      "Inputs\n",
      "[0.12583423 0.52052906 1.5        0.04086294 0.78539816 2.\n",
      " 0.34447552 0.78526818 0.52838623 0.8273342  0.31790139]\n",
      "Obj\n",
      "[0.95823663]\n",
      "Inputs\n",
      "[0.12596491 0.52052847 1.5        0.04084999 0.78539816 2.\n",
      " 0.34458199 0.78537534 0.52838631 0.82727536 0.32008612]\n",
      "Obj\n",
      "[0.95823581]\n",
      "Inputs\n",
      "[0.12598461 0.52052839 1.5        0.04084803 0.78539816 2.\n",
      " 0.34459804 0.78539149 0.52838632 0.82726649 0.32041544]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12598758 0.52052837 1.5        0.04084774 0.78539816 2.\n",
      " 0.34460046 0.78539393 0.52838633 0.82726515 0.3204651 ]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598803 0.52052837 1.5        0.0408477  0.78539816 2.\n",
      " 0.34460083 0.78539429 0.52838633 0.82726495 0.32047258]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598809 0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460088 0.78539435 0.52838633 0.82726492 0.32047371]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047388]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.1259981  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.1259881  0.52053837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.49999    0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.82726491 0.32047391]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.82726491 0.32047391]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82727491 0.32047391]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.1259881  0.52052837 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32048391]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     0.55671385 1.5        0.04565976 0.78539816 2.\n",
      " 0.34543716 0.78539816 0.52840545 0.80875993 0.0345075 ]\n",
      "Obj\n",
      "[0.95943946]\n",
      "Inputs\n",
      "[0.11452321 0.52874541 1.5        0.04194042 0.78539816 2.\n",
      " 0.34479079 0.78539522 0.52839067 0.82306278 0.25553633]\n",
      "Obj\n",
      "[0.95846534]\n",
      "Inputs\n",
      "[0.12326786 0.52247801 1.5        0.04110696 0.78539816 2.\n",
      " 0.34464595 0.78539456 0.52838736 0.82626788 0.30506634]\n",
      "Obj\n",
      "[0.95828788]\n",
      "Inputs\n",
      "[0.12533248 0.52099827 1.5        0.04091018 0.78539816 2.\n",
      " 0.34461175 0.78539441 0.52838658 0.82702461 0.31676041]\n",
      "Obj\n",
      "[0.95824813]\n",
      "Inputs\n",
      "[0.1258295  0.52064204 1.5        0.0408628  0.78539816 2.\n",
      " 0.34460352 0.78539437 0.52838639 0.82720678 0.31957558]\n",
      "Obj\n",
      "[0.95823867]\n",
      "Inputs\n",
      "[0.1259497  0.52055589 1.5        0.04085135 0.78539816 2.\n",
      " 0.34460153 0.78539436 0.52838634 0.82725084 0.3202564 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823639]\n",
      "Inputs\n",
      "[0.1259788  0.52053504 1.5        0.04084857 0.78539816 2.\n",
      " 0.34460105 0.78539436 0.52838633 0.8272615  0.32042123]\n",
      "Obj\n",
      "[0.95823584]\n",
      "Inputs\n",
      "[0.12598585 0.52052999 1.5        0.0408479  0.78539816 2.\n",
      " 0.34460093 0.78539436 0.52838633 0.82726409 0.32046115]\n",
      "Obj\n",
      "[0.95823571]\n",
      "Inputs\n",
      "[0.12598756 0.52052876 1.5        0.04084774 0.78539816 2.\n",
      " 0.3446009  0.78539436 0.52838633 0.82726471 0.32047082]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598797 0.52052847 1.5        0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726486 0.32047316]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598807 0.52053839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.49999    0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.8272649  0.32047373]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.8272649  0.32047373]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272749  0.32047373]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598807 0.52052839 1.5        0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32048373]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.0755     0.55332119 1.48782595 0.04553993 0.78539816 2.\n",
      " 0.34543244 0.78539816 0.52840735 0.81363236 0.0656909 ]\n",
      "Obj\n",
      "[0.9594481]\n",
      "Inputs\n",
      "[0.11497795 0.52767964 1.49734516 0.04187094 0.78539816 2.\n",
      " 0.34478223 0.78539519 0.52839091 0.824292   0.26491229]\n",
      "Obj\n",
      "[0.95845457]\n",
      "Inputs\n",
      "[0.12347694 0.52215941 1.4993945  0.04108107 0.78539816 2.\n",
      " 0.34464225 0.78539455 0.52838737 0.82658686 0.30780157]\n",
      "Obj\n",
      "[0.95828342]\n",
      "Inputs\n",
      "[0.12540674 0.52090598 1.49985982 0.04090172 0.78539816 2.\n",
      " 0.34461047 0.7853944  0.52838657 0.82710793 0.31754009]\n",
      "Obj\n",
      "[0.95824661]\n",
      "Inputs\n",
      "[0.12585304 0.5206161  1.49996744 0.04086024 0.78539816 2.\n",
      " 0.34460312 0.78539437 0.52838638 0.82722844 0.31979229]\n",
      "Obj\n",
      "[0.9582382]\n",
      "Inputs\n",
      "[0.12595668 0.52054878 1.49999243 0.04085061 0.78539816 2.\n",
      " 0.34460141 0.78539436 0.52838634 0.82725642 0.32031532]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823625]\n",
      "Inputs\n",
      "[0.12598077 0.52053313 1.49999824 0.04084837 0.78539816 2.\n",
      " 0.34460101 0.78539436 0.52838633 0.82726293 0.32043689]\n",
      "Obj\n",
      "[0.9582358]\n",
      "Inputs\n",
      "[0.12598638 0.5205295  1.49999959 0.04084785 0.78539816 2.\n",
      " 0.34460092 0.78539436 0.52838633 0.82726444 0.32046516]\n",
      "Obj\n",
      "[0.95823569]\n",
      "Inputs\n",
      "[0.12598768 0.52052865 1.4999999  0.04084773 0.78539816 2.\n",
      " 0.3446009  0.78539436 0.52838633 0.82726479 0.32047174]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598798 0.52052845 1.49999998 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726488 0.32047326]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598805 0.52053841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49998999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.82726489 0.32047362]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.82726489 0.32047362]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82727489 0.32047362]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598805 0.52052841 1.49999999 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32048362]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.49876036  1.4343535   0.04644027  0.78539816  2.\n",
      "  0.34562084  0.78539816  0.52843473  0.85       -0.37256951]\n",
      "Obj\n",
      "[0.95943731]\n",
      "Inputs\n",
      "[0.11423841 0.51546252 1.48472267 0.0421492  0.78539816 2.\n",
      " 0.34483826 0.78539524 0.52839759 0.83255583 0.15918781]\n",
      "Obj\n",
      "[0.95850733]\n",
      "Inputs\n",
      "[0.12336289 0.51939656 1.49658666 0.04113848 0.78539816 2.\n",
      " 0.34465393 0.78539456 0.52838884 0.82844702 0.28443837]\n",
      "Obj\n",
      "[0.95829608]\n",
      "Inputs\n",
      "[0.12539862 0.52027427 1.49923359 0.04091298 0.78539816 2.\n",
      " 0.3446128  0.7853944  0.52838689 0.82753032 0.31238251]\n",
      "Obj\n",
      "[0.95824922]\n",
      "Inputs\n",
      "[0.12585556 0.52047128 1.49982772 0.04086237 0.78539816 2.\n",
      " 0.34460357 0.78539437 0.52838645 0.82732456 0.31865493]\n",
      "Obj\n",
      "[0.95823871]\n",
      "Inputs\n",
      "[0.12595826 0.52051556 1.49996126 0.04085099 0.78539816 2.\n",
      " 0.34460149 0.78539436 0.52838636 0.82727831 0.32006472]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823635]\n",
      "Inputs\n",
      "[0.12598135 0.52052552 1.49999129 0.04084843 0.78539816 2.\n",
      " 0.34460103 0.78539436 0.52838633 0.82726791 0.32038168]\n",
      "Obj\n",
      "[0.95823582]\n",
      "Inputs\n",
      "[0.12598655 0.52052776 1.49999804 0.04084786 0.78539816 2.\n",
      " 0.34460092 0.78539436 0.52838633 0.82726557 0.32045295]\n",
      "Obj\n",
      "[0.9582357]\n",
      "Inputs\n",
      "[0.12598771 0.52052826 1.49999955 0.04084773 0.78539816 2.\n",
      " 0.3446009  0.78539436 0.52838633 0.82726505 0.32046897]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598798 0.52052837 1.4999999  0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726493 0.32047258]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598803 0.5205384  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49998997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04085769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823242]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.8272649  0.32047339]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823468]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.8272649  0.32047339]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272749  0.32047339]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598803 0.5205284  1.49999997 0.04084769 0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32048339]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.49876008  1.43435268  0.04644026  0.78539816  2.\n",
      "  0.34562084  0.78539816  0.52843473  0.84964504 -0.37276899]\n",
      "Obj\n",
      "[0.95943731]\n",
      "Inputs\n",
      "[0.11427262 0.51547721 1.48476696 0.04214541 0.78539816 2.\n",
      " 0.34483757 0.78539524 0.52839756 0.83245806 0.15961113]\n",
      "Obj\n",
      "[0.95850654]\n",
      "Inputs\n",
      "[0.12337712 0.51940268 1.49660511 0.04113691 0.78539816 2.\n",
      " 0.34465364 0.78539455 0.52838883 0.82842226 0.28462331]\n",
      "Obj\n",
      "[0.95829575]\n",
      "Inputs\n",
      "[0.12540324 0.52027626 1.49923959 0.04091247 0.78539816 2.\n",
      " 0.34461271 0.7853944  0.52838689 0.82752413 0.31244361]\n",
      "Obj\n",
      "[0.95824912]\n",
      "Inputs\n",
      "[0.12585691 0.52047186 1.49982947 0.04086222 0.78539816 2.\n",
      " 0.34460354 0.78539437 0.52838645 0.82732303 0.3186729 ]\n",
      "Obj\n",
      "[0.95823868]\n",
      "Inputs\n",
      "[0.12595862 0.52051572 1.49996173 0.04085095 0.78539816 2.\n",
      " 0.34460149 0.78539436 0.52838636 0.82727794 0.32006957]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823634]\n",
      "Inputs\n",
      "[0.12598144 0.52052556 1.4999914  0.04084842 0.78539816 2.\n",
      " 0.34460103 0.78539436 0.52838633 0.82726783 0.32038281]\n",
      "Obj\n",
      "[0.95823582]\n",
      "Inputs\n",
      "[0.12598655 0.52052776 1.49999805 0.04084786 0.78539816 2.\n",
      " 0.34460092 0.78539436 0.52838633 0.82726556 0.32045307]\n",
      "Obj\n",
      "[0.9582357]\n",
      "Inputs\n",
      "[0.1259877  0.52052826 1.49999954 0.04084773 0.78539816 2.\n",
      " 0.3446009  0.78539436 0.52838633 0.82726505 0.32046883]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598796 0.52052837 1.49999988 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726494 0.32047236]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598802 0.52053839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49998995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408577  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823242]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78538816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 1.99999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34461089 0.78539436 0.52838633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78538436 0.52838633 0.82726491 0.32047316]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823468]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52839633 0.82726491 0.32047316]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82727491 0.32047316]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598802 0.52052839 1.49999995 0.0408477  0.78539816 2.\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32048316]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.51322466  1.47622796  0.04662401  0.78539816  1.971181\n",
      "  0.34402973  0.78539816  0.52844182  0.81330934 -0.29646806]\n",
      "Obj\n",
      "[0.9593051]\n",
      "Inputs\n",
      "[0.11451263 0.51886833 1.49459683 0.04216059 0.78539816 1.99344975\n",
      " 0.34447107 0.78539522 0.52839894 0.82409296 0.18024903]\n",
      "Obj\n",
      "[0.95847773]\n",
      "Inputs\n",
      "[0.12344138 0.52015999 1.49880088 0.04113906 0.78539816 1.99854636\n",
      " 0.34457208 0.78539455 0.52838913 0.82656098 0.28935436]\n",
      "Obj\n",
      "[0.9582894]\n",
      "Inputs\n",
      "[0.1254201  0.52044624 1.49973255 0.04091267 0.78539816 1.99967582\n",
      " 0.34459447 0.7853944  0.52838695 0.82710793 0.3135334 ]\n",
      "Obj\n",
      "[0.95824766]\n",
      "Inputs\n",
      "[0.12586123 0.52051005 1.49994025 0.0408622  0.78539816 1.99992763\n",
      " 0.34459946 0.78539437 0.52838647 0.82722986 0.31892388]\n",
      "Obj\n",
      "[0.95823834]\n",
      "Inputs\n",
      "[0.12595971 0.5205243  1.49998662 0.04085094 0.78539816 1.99998384\n",
      " 0.34460057 0.78539436 0.52838636 0.82725708 0.3201272 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823626]\n",
      "Inputs\n",
      "[0.1259817  0.52052748 1.49999697 0.04084842 0.78539816 1.99999639\n",
      " 0.34460082 0.78539436 0.52838633 0.82726316 0.3203959 ]\n",
      "Obj\n",
      "[0.9582358]\n",
      "Inputs\n",
      "[0.12598661 0.52052819 1.49999929 0.04084786 0.78539816 1.99999919\n",
      " 0.34460088 0.78539436 0.52838633 0.82726452 0.3204559 ]\n",
      "Obj\n",
      "[0.95823569]\n",
      "Inputs\n",
      "[0.1259877  0.52052835 1.4999998  0.04084773 0.78539816 1.99999982\n",
      " 0.34460089 0.78539436 0.52838633 0.82726482 0.3204693 ]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598795 0.52052838 1.49999992 0.0408477  0.78539816 1.99999996\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.3204723 ]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.125998   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.125988   0.52053839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49998994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408577  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823242]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78538816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99998999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823558]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34461089 0.78539436 0.52838633 0.82726491 0.32047296]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823499]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78538436 0.52838633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823468]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52839633 0.82726491 0.32047296]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82727491 0.32047296]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.125988   0.52052839 1.49999994 0.0408477  0.78539816 1.99999999\n",
      " 0.34460089 0.78539436 0.52838633 0.82726491 0.32048296]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.07552149  0.51257492  1.47434675  0.04661325  0.78539816  1.97249535\n",
      "  0.34410203  0.78539816  0.52844146  0.81465223 -0.29982795]\n",
      "Obj\n",
      "[0.95931078]\n",
      "Inputs\n",
      "[0.11452316 0.51872154 1.49417212 0.0421575  0.78539816 1.99375157\n",
      " 0.34448756 0.78539522 0.52839885 0.82439959 0.17955478]\n",
      "Obj\n",
      "[0.95847856]\n",
      "Inputs\n",
      "[0.12344659 0.52012787 1.49870809 0.04113804 0.78539816 1.9986149\n",
      " 0.34457577 0.78539455 0.5283891  0.82662975 0.28923559]\n",
      "Obj\n",
      "[0.95828951]\n",
      "Inputs\n",
      "[0.12542189 0.52043917 1.49971218 0.04091237 0.78539816 1.99969145\n",
      " 0.3445953  0.7853944  0.52838695 0.82712342 0.31351466]\n",
      "Obj\n",
      "[0.95824767]\n",
      "Inputs\n",
      "[0.12586176 0.5205085  1.49993577 0.04086212 0.78539816 1.99993119\n",
      " 0.34459965 0.78539437 0.52838646 0.82723336 0.31892132]\n",
      "Obj\n",
      "[0.95823834]\n",
      "Inputs\n",
      "[0.12595984 0.52052395 1.49998563 0.04085091 0.78539816 1.99998465\n",
      " 0.34460062 0.78539436 0.52838636 0.82725787 0.32012688]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823626]\n",
      "Inputs\n",
      "[0.12598172 0.5205274  1.49999675 0.04084842 0.78539816 1.99999657\n",
      " 0.34460083 0.78539436 0.52838633 0.82726334 0.32039576]\n",
      "Obj\n",
      "[0.9582358]\n",
      "Inputs\n",
      "[0.1259866  0.52052817 1.49999923 0.04084786 0.78539816 1.99999923\n",
      " 0.34460088 0.78539436 0.52838633 0.82726456 0.32045574]\n",
      "Obj\n",
      "[0.95823569]\n",
      "Inputs\n",
      "[0.12598769 0.52052834 1.49999978 0.04084773 0.78539816 1.99999982\n",
      " 0.34460089 0.78539436 0.52838633 0.82726483 0.32046912]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598793 0.52052838 1.49999991 0.04084771 0.78539816 1.99999995\n",
      " 0.34460089 0.78539436 0.52838633 0.82726489 0.32047211]\n",
      "Obj\n",
      "[0.95823567]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12599799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823502]\n",
      "Inputs\n",
      "[0.12598799 0.52053839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823548]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49998994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408577  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823242]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78538816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823471]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99998998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823558]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34461089 0.78539436 0.52838633 0.8272649  0.32047277]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823499]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78538436 0.52838633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823468]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52839633 0.8272649  0.32047277]\n",
      "Obj\n",
      "[0.95823535]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272749  0.32047277]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598799 0.52052839 1.49999994 0.0408477  0.78539816 1.99999998\n",
      " 0.34460089 0.78539436 0.52838633 0.8272649  0.32048277]\n",
      "Obj\n",
      "[0.95823566]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.15277374 0.52534228 1.5        0.03777141 0.78539816 2.\n",
      " 0.3451501  0.78539816 0.52835699 0.83381626 0.52359878]\n",
      "Obj\n",
      "[0.95735884]\n",
      "Inputs\n",
      "[0.13457768 0.52207211 1.49999996 0.03986119 0.78539816 1.99999999\n",
      " 0.34477702 0.78539558 0.52837692 0.8293658  0.38561149]\n",
      "Obj\n",
      "[0.95796118]\n",
      "Inputs\n",
      "[0.12873462 0.52102201 1.49999994 0.04053225 0.78539816 1.99999998\n",
      " 0.34465721 0.78539475 0.52838332 0.82793668 0.3413015 ]\n",
      "Obj\n",
      "[0.95814858]\n",
      "Inputs\n",
      "[0.12686543 0.52068608 1.49999994 0.04074693 0.78539816 1.99999998\n",
      " 0.34461888 0.78539448 0.52838537 0.82747951 0.32712677]\n",
      "Obj\n",
      "[0.95820792]\n",
      "Inputs\n",
      "[0.12626823 0.52057875 1.49999994 0.04081551 0.78539816 1.99999998\n",
      " 0.34460664 0.7853944  0.52838602 0.82733344 0.32259796]\n",
      "Obj\n",
      "[0.95822681]\n",
      "Inputs\n",
      "[0.1260775  0.52054448 1.49999994 0.04083742 0.78539816 1.99999998\n",
      " 0.34460273 0.78539437 0.52838623 0.8272868  0.3211516 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823284]\n",
      "Inputs\n",
      "[0.1260166  0.52053353 1.49999994 0.04084441 0.78539816 1.99999998\n",
      " 0.34460148 0.78539436 0.5283863  0.8272719  0.32068974]\n",
      "Obj\n",
      "[0.95823476]\n",
      "Inputs\n",
      "[0.12599715 0.52053004 1.49999994 0.04084665 0.78539816 1.99999998\n",
      " 0.34460108 0.78539436 0.52838632 0.82726714 0.32054226]\n",
      "Obj\n",
      "[0.95823538]\n",
      "Inputs\n",
      "[0.12599094 0.52052892 1.49999994 0.04084736 0.78539816 1.99999998\n",
      " 0.34460095 0.78539436 0.52838632 0.82726562 0.32049517]\n",
      "Obj\n",
      "[0.95823557]\n",
      "Inputs\n",
      "[0.12598896 0.52052856 1.49999994 0.04084759 0.78539816 1.99999998\n",
      " 0.34460091 0.78539436 0.52838633 0.82726514 0.32048014]\n",
      "Obj\n",
      "[0.95823563]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12599833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823501]\n",
      "Inputs\n",
      "[0.12598833 0.52053845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823547]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49998994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04085766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78538816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.9582347]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99998998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446109  0.78539436 0.52838633 0.82726498 0.32047535]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823497]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78538436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52839633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823534]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82727498 0.32047535]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32048535]\n",
      "Obj\n",
      "[0.95823565]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.26278101 0.54379239 1.5        0.0302     0.78539816 2.\n",
      " 0.34661323 0.78539816 0.52823683 0.85       0.52359878]\n",
      "Obj\n",
      "[0.95180319]\n",
      "Inputs\n",
      "[0.13966759 0.52285484 1.49999994 0.03978289 0.78539816 1.99999998\n",
      " 0.34480213 0.78539474 0.52837138 0.82953849 0.3407877 ]\n",
      "Obj\n",
      "[0.95764231]\n",
      "Inputs\n",
      "[0.1277562  0.52082911 1.49999994 0.04071005 0.78539816 1.99999998\n",
      " 0.34462691 0.78539441 0.52838439 0.82755881 0.32310047]\n",
      "Obj\n",
      "[0.95815946]\n",
      "Inputs\n",
      "[0.12621573 0.52056712 1.49999994 0.04082996 0.78539816 1.99999998\n",
      " 0.34460425 0.78539436 0.52838608 0.82730278 0.32081302]\n",
      "Obj\n",
      "[0.95822586]\n",
      "Inputs\n",
      "[0.12601756 0.52053342 1.49999994 0.04084539 0.78539816 1.99999998\n",
      " 0.34460133 0.78539436 0.52838629 0.82726984 0.32051876]\n",
      "Obj\n",
      "[0.9582344]\n",
      "Inputs\n",
      "[0.12599208 0.52052909 1.49999994 0.04084737 0.78539816 1.99999998\n",
      " 0.34460096 0.78539436 0.52838632 0.82726561 0.32048093]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823549]\n",
      "Inputs\n",
      "[0.12598881 0.52052853 1.49999994 0.04084762 0.78539816 1.99999998\n",
      " 0.34460091 0.78539436 0.52838633 0.82726507 0.32047607]\n",
      "Obj\n",
      "[0.95823563]\n",
      "Inputs\n",
      "[0.12598839 0.52052846 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.827265   0.32047545]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726499 0.32047537]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047536]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12599833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823501]\n",
      "Inputs\n",
      "[0.12598833 0.52053845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823547]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49998994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04085766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78538816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.9582347]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99998998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446109  0.78539436 0.52838633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823497]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78538436 0.52838633 0.82726498 0.32047535]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52839633 0.82726498 0.32047535]\n",
      "Obj\n",
      "[0.95823534]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82727498 0.32047535]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598833 0.52052845 1.49999994 0.04084766 0.78539816 1.99999998\n",
      " 0.3446009  0.78539436 0.52838633 0.82726498 0.32048535]\n",
      "Obj\n",
      "[0.95823565]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.50834422  1.46144358  0.04936841  0.78538936  1.95962273\n",
      "  0.34380222  0.78530742  0.52846769  0.80910826 -0.52359878]\n",
      "Obj\n",
      "[0.95824011]\n",
      "Inputs\n",
      "[0.11389365 0.51760967 1.49076361 0.04288884 0.78539606 1.99032745\n",
      " 0.34440957 0.78537353 0.52840582 0.82291547 0.11827404]\n",
      "Obj\n",
      "[0.95824125]\n",
      "Inputs\n",
      "[0.12307494 0.51982537 1.49777507 0.04133934 0.78539766 1.99767005\n",
      " 0.34455481 0.78538934 0.52839102 0.82621727 0.27176878]\n",
      "Obj\n",
      "[0.95823737]\n",
      "Inputs\n",
      "[0.12528303 0.52035824 1.49946132 0.04096669 0.78539804 1.99943593\n",
      " 0.34458974 0.78539314 0.52838746 0.82701134 0.30868402]\n",
      "Obj\n",
      "[0.9582361]\n",
      "Inputs\n",
      "[0.12581733 0.52048718 1.49986935 0.04087652 0.78539813 1.99986323\n",
      " 0.3445982  0.78539406 0.5283866  0.82720349 0.31761655]\n",
      "Obj\n",
      "[0.95823576]\n",
      "Inputs\n",
      "[0.1259468  0.52051843 1.49996822 0.04085467 0.78539816 1.99996677\n",
      " 0.34460024 0.78539429 0.52838639 0.82725005 0.31978113]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823568]\n",
      "Inputs\n",
      "[0.12597819 0.520526   1.49999219 0.04084937 0.78539816 1.99999187\n",
      " 0.34460074 0.78539434 0.52838634 0.82726134 0.32030584]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598579 0.52052784 1.499998   0.04084809 0.78539816 1.99999796\n",
      " 0.34460086 0.78539435 0.52838633 0.82726407 0.32043301]\n",
      "Obj\n",
      "[0.95823566]\n",
      "Inputs\n",
      "[0.12598763 0.52052828 1.4999994  0.04084778 0.78539816 1.99999943\n",
      " 0.34460089 0.78539436 0.52838633 0.82726473 0.32046372]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12599803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823501]\n",
      "Inputs\n",
      "[0.12598803 0.52053838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823547]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49998971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04085771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823241]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78538816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.9582347]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99998975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823556]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446109  0.78539436 0.52838633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823498]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78538436 0.52838633 0.82726488 0.32047043]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95823467]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52839633 0.82726488 0.32047043]\n",
      "Obj\n",
      "[0.95823534]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82727488 0.32047043]\n",
      "Obj\n",
      "[0.95823565]\n",
      "Inputs\n",
      "[0.12598803 0.52052838 1.49999971 0.04084771 0.78539816 1.99999975\n",
      " 0.3446009  0.78539436 0.52838633 0.82726488 0.32048043]\n",
      "Obj\n",
      "[0.95823565]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.48426967  1.38784234  0.0657931   0.7853369   1.88071295\n",
      "  0.34189308  0.78476644  0.52862448  0.77408641 -0.52359878]\n",
      "Obj\n",
      "[0.9520488]\n",
      "Inputs\n",
      "[ 0.10017436  0.50198992  1.44265555  0.05360186  0.78536684  1.93901043\n",
      "  0.34321644  0.78507331  0.52850809  0.80007563 -0.11108781]\n",
      "Obj\n",
      "[0.9550702]\n",
      "Inputs\n",
      "[0.11273523 0.51101069 1.47055908 0.04739572 0.78538208 1.96868768\n",
      " 0.34389011 0.78522953 0.52844884 0.81330585 0.09890735]\n",
      "Obj\n",
      "[0.9566139]\n",
      "Inputs\n",
      "[0.11917585 0.51563611 1.48486668 0.04421351 0.7853899  1.98390477\n",
      " 0.34423554 0.78530963 0.52841846 0.82008968 0.20658293]\n",
      "Obj\n",
      "[0.95740332]\n",
      "Inputs\n",
      "[0.122485   0.51801262 1.49221784 0.04257851 0.78539391 1.99172321\n",
      " 0.34441302 0.78535079 0.52840285 0.82357517 0.26190596]\n",
      "Obj\n",
      "[0.95780781]\n",
      "Inputs\n",
      "[0.12418619 0.51923436 1.49599698 0.04173797 0.78539598 1.99574258\n",
      " 0.34450426 0.78537195 0.52839483 0.82536702 0.29034687]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95801567]\n",
      "Inputs\n",
      "[0.12506114 0.51986272 1.49794066 0.04130567 0.78539704 1.99780981\n",
      " 0.34455118 0.78538283 0.5283907  0.8262886  0.30497451]\n",
      "Obj\n",
      "[0.9581225]\n",
      "Inputs\n",
      "[0.12551119 0.52018593 1.49894043 0.04108331 0.78539758 1.99887313\n",
      " 0.34457532 0.78538843 0.52838858 0.82676263 0.31249854]\n",
      "Obj\n",
      "[0.95817744]\n",
      "Inputs\n",
      "[0.12574271 0.52035219 1.49945473 0.04096892 0.78539787 1.99942012\n",
      " 0.34458774 0.78539131 0.52838748 0.82700648 0.31636904]\n",
      "Obj\n",
      "[0.9582057]\n",
      "Inputs\n",
      "[0.12586181 0.52043773 1.49971931 0.04091008 0.78539801 1.99970152\n",
      " 0.34459413 0.78539279 0.52838692 0.82713193 0.31836017]\n",
      "Obj\n",
      "[0.95822024]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822772]\n",
      "Inputs\n",
      "[0.12593308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95822708]\n",
      "Inputs\n",
      "[0.12592308 0.52049173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822754]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49986542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822781]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408898  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822448]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78538808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822677]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99985629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822781]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34460741 0.78539355 0.52838663 0.82719647 0.31938457]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95822704]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78538355 0.52838663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822674]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52839663 0.82719647 0.31938457]\n",
      "Obj\n",
      "[0.95822741]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82720647 0.31938457]\n",
      "Obj\n",
      "[0.95822772]\n",
      "Inputs\n",
      "[0.12592308 0.52048173 1.49985542 0.0408798  0.78539808 1.99984629\n",
      " 0.34459741 0.78539355 0.52838663 0.82719647 0.31939457]\n",
      "Obj\n",
      "[0.95822772]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.16217354 0.53157547 1.5        0.05095689 0.78539816 2.\n",
      " 0.25074359 0.68923506 0.52813403 0.83514099 0.52359878]\n",
      "Obj\n",
      "[0.94959022]\n",
      "Inputs\n",
      "[0.13686995 0.5238318  1.49989908 0.04392287 0.78539811 1.99989271\n",
      " 0.31625557 0.75635574 0.52831035 0.82959554 0.38105289]\n",
      "Obj\n",
      "[0.95556006]\n",
      "Inputs\n",
      "[0.12803921 0.52112933 1.49986386 0.04146805 0.78539809 1.99985526\n",
      " 0.33911867 0.77978027 0.52837189 0.82766023 0.33130562]\n",
      "Obj\n",
      "[0.95770822]\n",
      "Inputs\n",
      "[0.12633359 0.52060736 1.49985706 0.04099392 0.78539809 1.99984803\n",
      " 0.3435346  0.78430463 0.52838377 0.82728643 0.32169712]\n",
      "Obj\n",
      "[0.95812677]\n",
      "Inputs\n",
      "[0.12600394 0.52050648 1.49985575 0.04090228 0.78539808 1.99984663\n",
      " 0.34438808 0.78517907 0.52838607 0.82721419 0.31984006]\n",
      "Obj\n",
      "[0.95820782]\n",
      "Inputs\n",
      "[0.12594034 0.52048701 1.49985549 0.0408846  0.78539808 1.99984636\n",
      " 0.34455274 0.78534778 0.52838651 0.82720025 0.31948177]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95822347]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822625]\n",
      "Inputs\n",
      "[0.12593905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822561]\n",
      "Inputs\n",
      "[0.12592905 0.52049356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822607]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49986545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822634]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04089146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822301]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78538808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.9582253]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99985631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822634]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34459196 0.78537772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822558]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78538772 0.52838659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822724]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52839659 0.82719777 0.31941818]\n",
      "Obj\n",
      "[0.95822594]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82720777 0.31941818]\n",
      "Obj\n",
      "[0.95822625]\n",
      "Inputs\n",
      "[0.12592905 0.52048356 1.49985545 0.04088146 0.78539808 1.99984631\n",
      " 0.34458196 0.78537772 0.52838659 0.82719777 0.31942818]\n",
      "Obj\n",
      "[0.95822625]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.78539816 2.\n",
      " 1.5        0.78539816 0.3        0.85       0.52359878]\n",
      "Obj\n",
      "[0.8580733]\n",
      "Inputs\n",
      "[0.14353614 0.6684352  1.4998699  0.03981331 0.78539809 1.99986168\n",
      " 0.46012377 0.78537976 0.50554793 0.829478   0.33983624]\n",
      "Obj\n",
      "[0.94755021]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716521]\n",
      "Inputs\n",
      "[0.12769976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716455]\n",
      "Inputs\n",
      "[0.12768976 0.53528872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716502]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49986689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.9571653]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04078465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95716193]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78538809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716426]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99985785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.9571653]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35614614 0.78537792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716454]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78538792 0.52610273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716621]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52611273 0.8274258  0.32145999]\n",
      "Obj\n",
      "[0.95716489]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274358  0.32145999]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95716521]\n",
      "Inputs\n",
      "[0.12768976 0.53527872 1.49985689 0.04077465 0.78539809 1.99984785\n",
      " 0.35613614 0.78537792 0.52610273 0.8274258  0.32146999]\n",
      "Obj\n",
      "[0.95716521]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.78539816 2.\n",
      " 1.5        0.78539816 0.3        0.85       0.52359878]\n",
      "Obj\n",
      "[0.8580733]\n",
      "Inputs\n",
      "[0.14512078 0.68175085 1.4998712  0.03971718 0.78539809 1.99986307\n",
      " 0.47052253 0.78537995 0.50349245 0.82968322 0.34167387]\n",
      "Obj\n",
      "[0.9465911]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12944286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611255]\n",
      "Inputs\n",
      "[0.12943286 0.54993594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611305]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49986832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406789  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95610992]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78538809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611228]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99985937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36758478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611257]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78538813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611424]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238517  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611291]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82766154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32349138]\n",
      "Obj\n",
      "[0.95611324]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.78539816 2.\n",
      " 1.5        0.78539816 0.3        0.85       0.52359878]\n",
      "Obj\n",
      "[0.8580733]\n",
      "Inputs\n",
      "[0.14668957 0.69493334 1.49987249 0.03962201 0.78539809 1.99986444\n",
      " 0.4808173  0.78538013 0.50145753 0.82988639 0.34349312]\n",
      "Obj\n",
      "[0.94564453]\n",
      "Inputs\n",
      "[0.13115853 0.56442668 1.49985974 0.04056421 0.78539809 1.99985088\n",
      " 0.37889903 0.78537833 0.52160328 0.82787502 0.32548255]\n",
      "Obj\n",
      "[0.95507193]\n",
      "Inputs\n",
      "[0.1296143  0.55145053 1.49985847 0.04065789 0.78539809 1.99984953\n",
      " 0.3687654  0.78537815 0.52360635 0.82767504 0.32369178]\n",
      "Obj\n",
      "[0.95600383]\n",
      "Inputs\n",
      "[0.1294524  0.55009013 1.49985834 0.04066771 0.78539809 1.99984939\n",
      " 0.36770301 0.78537813 0.52381635 0.82765407 0.32350404]\n",
      "Obj\n",
      "[0.95610146]\n",
      "Inputs\n",
      "[0.12943497 0.54994366 1.49985833 0.04066877 0.78539809 1.99984937\n",
      " 0.36758862 0.78537813 0.52383896 0.82765181 0.32348383]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611196]\n",
      "Inputs\n",
      "[0.12943309 0.54992785 1.49985833 0.04066889 0.78539809 1.99984937\n",
      " 0.36757628 0.78537813 0.5238414  0.82765157 0.32348164]\n",
      "Obj\n",
      "[0.9561131]\n",
      "Inputs\n",
      "[0.12943289 0.54992614 1.49985833 0.0406689  0.78539809 1.99984937\n",
      " 0.36757494 0.78537813 0.52384167 0.82765154 0.32348141]\n",
      "Obj\n",
      "[0.95611322]\n",
      "Inputs\n",
      "[0.12943286 0.54992596 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.3675748  0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611323]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12944286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611255]\n",
      "Inputs\n",
      "[0.12943286 0.54993594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611305]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49986832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406789  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95610992]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78538809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611228]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99985937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36758478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611257]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78538813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611424]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238517  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611291]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82766154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32349138]\n",
      "Obj\n",
      "[0.95611324]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.78539816 2.\n",
      " 1.5        0.78539816 0.3        0.85       0.52359878]\n",
      "Obj\n",
      "[0.8580733]\n",
      "Inputs\n",
      "[0.14668957 0.69493334 1.49987249 0.03962201 0.78539809 1.99986444\n",
      " 0.4808173  0.78538013 0.50145753 0.82988639 0.34349312]\n",
      "Obj\n",
      "[0.94564453]\n",
      "Inputs\n",
      "[0.13115853 0.56442668 1.49985974 0.04056421 0.78539809 1.99985088\n",
      " 0.37889903 0.78537833 0.52160328 0.82787502 0.32548255]\n",
      "Obj\n",
      "[0.95507193]\n",
      "Inputs\n",
      "[0.12960543 0.55137601 1.49985847 0.04065843 0.78539809 1.99984952\n",
      " 0.36870721 0.78537815 0.52361786 0.82767389 0.3236815 ]\n",
      "Obj\n",
      "[0.95600918]\n",
      "Inputs\n",
      "[0.12945012 0.55007094 1.49985834 0.04066785 0.78539809 1.99984939\n",
      " 0.36768802 0.78537813 0.52381931 0.82765377 0.32350139]\n",
      "Obj\n",
      "[0.95610283]\n",
      "Inputs\n",
      "[0.12943459 0.54994044 1.49985833 0.04066879 0.78539809 1.99984937\n",
      " 0.36758611 0.78537813 0.52383946 0.82765176 0.32348338]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611219]\n",
      "Inputs\n",
      "[0.12943303 0.54992739 1.49985833 0.04066889 0.78539809 1.99984937\n",
      " 0.36757591 0.78537813 0.52384147 0.82765156 0.32348158]\n",
      "Obj\n",
      "[0.95611313]\n",
      "Inputs\n",
      "[0.12943288 0.54992608 1.49985833 0.0406689  0.78539809 1.99984937\n",
      " 0.36757489 0.78537813 0.52384168 0.82765154 0.3234814 ]\n",
      "Obj\n",
      "[0.95611322]\n",
      "Inputs\n",
      "[0.12943286 0.54992595 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757479 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611323]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12944286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611255]\n",
      "Inputs\n",
      "[0.12943286 0.54993594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611305]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49986832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406789  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95610992]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78538809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611228]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99985937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36758478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611257]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78538813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611424]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238517  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611291]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82766154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32349138]\n",
      "Obj\n",
      "[0.95611324]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.78539816 2.\n",
      " 1.5        0.78539816 0.3        0.85       0.52359878]\n",
      "Obj\n",
      "[0.8580733]\n",
      "Inputs\n",
      "[0.14668957 0.69493334 1.49987249 0.03962201 0.78539809 1.99986444\n",
      " 0.4808173  0.78538013 0.50145753 0.82988639 0.34349312]\n",
      "Obj\n",
      "[0.94564453]\n",
      "Inputs\n",
      "[0.13115853 0.56442668 1.49985974 0.04056421 0.78539809 1.99985088\n",
      " 0.37889903 0.78537833 0.52160328 0.82787502 0.32548255]\n",
      "Obj\n",
      "[0.95507193]\n",
      "Inputs\n",
      "[0.12960543 0.55137601 1.49985847 0.04065843 0.78539809 1.99984952\n",
      " 0.36870721 0.78537815 0.52361786 0.82767389 0.3236815 ]\n",
      "Obj\n",
      "[0.95600918]\n",
      "Inputs\n",
      "[0.12945012 0.55007094 1.49985834 0.04066785 0.78539809 1.99984939\n",
      " 0.36768802 0.78537813 0.52381931 0.82765377 0.32350139]\n",
      "Obj\n",
      "[0.95610283]\n",
      "Inputs\n",
      "[0.12943459 0.54994044 1.49985833 0.04066879 0.78539809 1.99984937\n",
      " 0.36758611 0.78537813 0.52383946 0.82765176 0.32348338]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611219]\n",
      "Inputs\n",
      "[0.12943303 0.54992739 1.49985833 0.04066889 0.78539809 1.99984937\n",
      " 0.36757591 0.78537813 0.52384147 0.82765156 0.32348158]\n",
      "Obj\n",
      "[0.95611313]\n",
      "Inputs\n",
      "[0.12943288 0.54992608 1.49985833 0.0406689  0.78539809 1.99984937\n",
      " 0.36757489 0.78537813 0.52384168 0.82765154 0.3234814 ]\n",
      "Obj\n",
      "[0.95611322]\n",
      "Inputs\n",
      "[0.12943286 0.54992595 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757479 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611323]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12944286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611255]\n",
      "Inputs\n",
      "[0.12943286 0.54993594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611305]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49986832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406789  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95610992]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78538809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611228]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99985937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32348138]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.95611333]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36758478 0.78537813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611257]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78538813 0.5238417  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611424]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238517  0.82765154 0.32348138]\n",
      "Obj\n",
      "[0.95611291]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82766154 0.32348138]\n",
      "Obj\n",
      "[0.95611324]\n",
      "Inputs\n",
      "[0.12943286 0.54992594 1.49985832 0.0406689  0.78539809 1.99984937\n",
      " 0.36757478 0.78537813 0.5238417  0.82765154 0.32349138]\n",
      "Obj\n",
      "[0.95611324]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820696]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.07551     0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820407]\n",
      "Inputs\n",
      "[ 0.0755      0.25001     0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820676]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25001     0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820733]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.15099     0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820897]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44119263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820462]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25001\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820602]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25001     0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820882]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  4.41182631e-01  2.50000000e-01  2.50000000e-01  1.00000000e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820516]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.69999     0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37821009]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.30001    -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820696]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.44118263  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52358878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.37820696]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603079]\n",
      "Inputs\n",
      "[ 0.07551     0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42602826]\n",
      "Inputs\n",
      "[ 0.0755      0.25001     0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603061]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25001     0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603113]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.15099     0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603279]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083359   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42602545]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25001\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42602926]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25001     0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603432]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  3.08325903e-01  2.50000000e-01  2.50000000e-01  1.00000000e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42602521]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.69999     0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603466]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.30001    -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603079]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.3083259   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52358878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.42603079]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 0.07551     0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529899]\n",
      "Inputs\n",
      "[ 0.0755      0.25001     0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.46530125]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25001     0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530178]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.15099     0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530359]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24697758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4652939]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25001\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529969]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25001     0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530563]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  1.00000000e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529285]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.69999     0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530581]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.30001    -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.24696758  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52358878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.26510975 2.\n",
      " 0.811748   0.25400114 0.66980715 0.85       0.52359878]\n",
      "Obj\n",
      "[0.36780349]\n",
      "Inputs\n",
      "[ 0.09815     0.425       0.375       0.13892     0.2487818   0.425\n",
      "  0.3061748   0.02540011  0.69698071  0.355      -0.41887902]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.44052649]\n",
      "Inputs\n",
      "[ 0.077765    0.2675      0.2625      0.149792    0.247149    0.2675\n",
      "  0.25561748  0.00254001  0.69969807  0.3055     -0.5131268 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46238577]\n",
      "Inputs\n",
      "[ 7.57265000e-02  2.51750000e-01  2.51250000e-01  1.50879200e-01\n",
      "  2.46985724e-01  2.51750000e-01  2.50561748e-01  2.54001144e-04\n",
      "  6.99969807e-01  3.00550000e-01 -5.22551578e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46500416]\n",
      "Inputs\n",
      "[ 7.55226500e-02  2.50175000e-01  2.50125000e-01  1.50987920e-01\n",
      "  2.46969396e-01  2.50175000e-01  2.50056175e-01  2.54001144e-05\n",
      "  6.99996981e-01  3.00055000e-01 -5.23494056e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46527162]\n",
      "Inputs\n",
      "[ 7.55022650e-02  2.50017500e-01  2.50012500e-01  1.50998792e-01\n",
      "  2.46967763e-01  2.50017500e-01  2.50005617e-01  2.54001144e-06\n",
      "  6.99999698e-01  3.00005500e-01 -5.23588304e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529844]\n",
      "Inputs\n",
      "[ 7.55002265e-02  2.50001750e-01  2.50001250e-01  1.50999879e-01\n",
      "  2.46967600e-01  2.50001750e-01  2.50000562e-01  2.54001144e-07\n",
      "  6.99999970e-01  3.00000550e-01 -5.23597728e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530112]\n",
      "Inputs\n",
      "[ 7.55000227e-02  2.50000175e-01  2.50000125e-01  1.50999988e-01\n",
      "  2.46967583e-01  2.50000175e-01  2.50000056e-01  2.54001144e-08\n",
      "  6.99999997e-01  3.00000055e-01 -5.23598671e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530139]\n",
      "Inputs\n",
      "[ 7.55000023e-02  2.50000018e-01  2.50000012e-01  1.50999999e-01\n",
      "  2.46967582e-01  2.50000018e-01  2.50000006e-01  2.54001144e-09\n",
      "  7.00000000e-01  3.00000005e-01 -5.23598765e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 7.55000002e-02  2.50000002e-01  2.50000001e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000002e-01  2.50000001e-01  2.54001144e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 7.55100000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529899]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50010000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530125]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50010000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530178]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.50990000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530359]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46977581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4652939]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50010000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529969]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50010000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530563]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  1.00000254e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529285]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  6.99990000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530581]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00010000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46967581e-01  2.50000000e-01  2.50000000e-01  2.54001144e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23588775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530142]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.25057197  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46261137]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.48606382e-01  2.50000000e-01  2.50000000e-01  1.38514792e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4640722]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.47712656e-01  2.50000000e-01  2.50000000e-01  2.01495680e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46474218]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.47306234e-01  2.50000000e-01  2.50000000e-01  2.30136264e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46504703]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.47121503e-01  2.50000000e-01  2.50000000e-01  2.43154269e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46518573]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.47037566e-01  2.50000000e-01  2.50000000e-01  2.49069323e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46524881]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46999399e-01  2.50000000e-01  2.50000000e-01  2.51758947e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4652775]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46982054e-01  2.50000000e-01  2.50000000e-01  2.52981233e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529054]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46974179e-01  2.50000000e-01  2.50000000e-01  2.53536245e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529646]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46970595e-01  2.50000000e-01  2.50000000e-01  2.53788763e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529916]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55100000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529796]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50010000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530022]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50010000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530075]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.50990000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530256]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46978951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529287]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50010000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529866]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50010000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4653046]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  1.00000254e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529182]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  6.99990000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530478]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00010000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  2.53904607e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23588775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.26497359 2.\n",
      " 0.80793485 0.25227279 0.67001205 0.85       0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.36781737]\n",
      "Inputs\n",
      "[ 0.09815     0.425       0.375       0.13892     0.24876942  0.425\n",
      "  0.30579349  0.02522728  0.69700121  0.355      -0.41887902]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.44053967]\n",
      "Inputs\n",
      "[ 0.077765    0.2675      0.2625      0.149792    0.247149    0.2675\n",
      "  0.25557935  0.00252273  0.69970012  0.3055     -0.5131268 ]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46238404]\n",
      "Inputs\n",
      "[ 7.57265000e-02  2.51750000e-01  2.51250000e-01  1.50879200e-01\n",
      "  2.46986956e-01  2.51750000e-01  2.50557935e-01  2.52272816e-04\n",
      "  6.99970012e-01  3.00550000e-01 -5.22551578e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46500302]\n",
      "Inputs\n",
      "[ 7.55226500e-02  2.50175000e-01  2.50125000e-01  1.50987920e-01\n",
      "  2.46970752e-01  2.50175000e-01  2.50055794e-01  2.52273044e-05\n",
      "  6.99997001e-01  3.00055000e-01 -5.23494056e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46527058]\n",
      "Inputs\n",
      "[ 7.55022650e-02  2.50017500e-01  2.50012500e-01  1.50998792e-01\n",
      "  2.46969131e-01  2.50017500e-01  2.50005579e-01  2.52275329e-06\n",
      "  6.99999700e-01  3.00005500e-01 -5.23588304e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529741]\n",
      "Inputs\n",
      "[ 7.55002265e-02  2.50001750e-01  2.50001250e-01  1.50999879e-01\n",
      "  2.46968969e-01  2.50001750e-01  2.50000558e-01  2.52298181e-07\n",
      "  6.99999970e-01  3.00000550e-01 -5.23597728e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.46530009]\n",
      "Inputs\n",
      "[ 7.55000227e-02  2.50000175e-01  2.50000125e-01  1.50999988e-01\n",
      "  2.46968953e-01  2.50000175e-01  2.50000056e-01  2.52526695e-08\n",
      "  6.99999997e-01  3.00000055e-01 -5.23598671e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530036]\n",
      "Inputs\n",
      "[ 7.55000023e-02  2.50000018e-01  2.50000013e-01  1.50999999e-01\n",
      "  2.46968951e-01  2.50000018e-01  2.50000006e-01  2.54811836e-09\n",
      "  7.00000000e-01  3.00000006e-01 -5.23598765e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55000002e-02  2.50000002e-01  2.50000001e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000002e-01  2.50000001e-01  2.77663251e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55100000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529796]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50010000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530022]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50010000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530075]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.50990000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530256]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46978951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529287]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50010000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529866]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50010000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4653046]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  1.00000506e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598775e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46529182]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  6.99990000e-01  3.00000000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530478]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00010000e-01 -5.23598775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.46968951e-01  2.50000000e-01  2.50000000e-01  5.06177397e-11\n",
      "  7.00000000e-01  3.00000000e-01 -5.23588775e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46530039]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594345]\n",
      "Inputs\n",
      "[ 0.07551     0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594106]\n",
      "Inputs\n",
      "[ 0.0755      0.25001     0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594328]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25001     0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594381]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.15099     0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594565]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23335363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47593531]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25001\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594168]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25001     0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594779]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.33343634e-01  2.50000000e-01  2.50000000e-01  1.00000000e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47593402]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.69999     0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594797]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.30001    -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594345]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.23334363  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52358878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47594345]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Inputs\n",
      "[ 0.07551     0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397863]\n",
      "Inputs\n",
      "[ 0.0755      0.25001     0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398074]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25001     0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398125]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.15099     0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398308]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126287   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397161]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25001\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397905]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25001     0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398551]\n",
      "Inputs\n",
      "[ 7.55000000e-02  2.50000000e-01  2.50000000e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000000e-01  2.50000000e-01  1.00000000e-05\n",
      "  7.00000000e-01  3.00000000e-01 -5.23598776e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396981]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.69999     0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398564]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.30001    -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.2126187   0.25\n",
      "  0.25        0.          0.7         0.3        -0.52358878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.2174813  2.\n",
      " 0.60332105 0.15563743 0.68146956 0.85       0.52359878]\n",
      "Obj\n",
      "[0.38376852]\n",
      "Inputs\n",
      "[ 0.09815     0.425       0.375       0.13892     0.21310496  0.425\n",
      "  0.2853321   0.01556374  0.69814696  0.355      -0.41887902]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46754109]\n",
      "Inputs\n",
      "[ 0.07873869  0.27502302  0.26787358  0.1492727   0.21268823  0.27502302\n",
      "  0.25505209  0.00222544  0.69973504  0.30786438 -0.50862504]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48936079]\n",
      "Inputs\n",
      "[ 7.59318128e-02  2.53336302e-01  2.52383073e-01  1.50769700e-01\n",
      "  2.12627973e-01  2.53336302e-01  2.50673592e-01  2.96716262e-04\n",
      "  6.99964672e-01  3.01048552e-01 -5.21602337e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49334067]\n",
      "Inputs\n",
      "[ 7.55575158e-02  2.50444382e-01  2.50317416e-01  1.50969325e-01\n",
      "  2.12619938e-01  2.50444382e-01  2.50089720e-01  3.95214423e-05\n",
      "  6.99995295e-01  3.00139663e-01 -5.23332858e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49389517]\n",
      "Inputs\n",
      "[ 7.55057516e-02  2.50044438e-01  2.50031742e-01  1.50996932e-01\n",
      "  2.12618826e-01  2.50044438e-01  2.50008972e-01  3.95214423e-06\n",
      "  6.99999529e-01  3.00013966e-01 -5.23572184e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397232]\n",
      "Inputs\n",
      "[ 7.55006920e-02  2.50005346e-01  2.50003819e-01  1.50999631e-01\n",
      "  2.12618718e-01  2.50005346e-01  2.50001079e-01  4.75484983e-07\n",
      "  6.99999943e-01  3.00001680e-01 -5.23595576e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397987]\n",
      "Inputs\n",
      "[ 7.55000929e-02  2.50000718e-01  2.50000513e-01  1.50999950e-01\n",
      "  2.12618705e-01  2.50000718e-01  2.50000145e-01  6.38598461e-08\n",
      "  6.99999992e-01  3.00000226e-01 -5.23598346e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398076]\n",
      "Inputs\n",
      "[ 7.55000127e-02  2.50000098e-01  2.50000070e-01  1.50999993e-01\n",
      "  2.12618703e-01  2.50000098e-01  2.50000020e-01  8.70062187e-09\n",
      "  6.99999999e-01  3.00000031e-01 -5.23598717e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398088]\n",
      "Inputs\n",
      "[ 7.55000016e-02  2.50000013e-01  2.50000009e-01  1.50999999e-01\n",
      "  2.12618703e-01  2.50000013e-01  2.50000003e-01  1.11743571e-09\n",
      "  7.00000000e-01  3.00000004e-01 -5.23598768e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Inputs\n",
      "[ 7.55100004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397863]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50010003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398074]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50010002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398125]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.50990000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398308]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12628703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397161]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50010003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397905]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50010001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398551]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  1.00003011e-05\n",
      "  7.00000000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396981]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  6.99990000e-01  3.00000001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398564]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00010001e-01 -5.23598774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Inputs\n",
      "[ 7.55000004e-02  2.50000003e-01  2.50000002e-01  1.51000000e-01\n",
      "  2.12618703e-01  2.50000003e-01  2.50000001e-01  3.01094588e-10\n",
      "  7.00000000e-01  3.00000001e-01 -5.23588774e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939809]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.302      2.         1.5        0.0302     0.19324244 2.\n",
      " 0.92042823 0.29938529 0.66442777 0.85       0.52359878]\n",
      "Obj\n",
      "[0.37941263]\n",
      "Inputs\n",
      "[ 0.09815     0.425       0.375       0.13892     0.21068108  0.425\n",
      "  0.31704282  0.02993853  0.69644278  0.355      -0.41887902]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.46711028]\n",
      "Inputs\n",
      "[ 0.0800157   0.28488955  0.2749211   0.14859162  0.2122324   0.28488955\n",
      "  0.26336625  0.00596881  0.6992908   0.31096529 -0.50272092]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48786898]\n",
      "Inputs\n",
      "[ 0.07640523  0.25699403  0.25499574  0.15051721  0.21254126  0.25699403\n",
      "  0.25267943  0.00119652  0.69985783  0.30219813 -0.51941355]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49271158]\n",
      "Inputs\n",
      "[ 7.56892650e-02  2.51462312e-01  2.51044509e-01  1.50899059e-01\n",
      "  2.12602512e-01  2.51462312e-01  2.50560214e-01  2.50168133e-04\n",
      "  6.99970276e-01  3.00459584e-01 -5.22723730e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49371356]\n",
      "Inputs\n",
      "[ 7.55405930e-02  2.50313633e-01  2.50224023e-01  1.50978350e-01\n",
      "  2.12615230e-01  2.50313633e-01  2.50120153e-01  5.36551805e-05\n",
      "  6.99993625e-01  3.00098570e-01 -5.23411098e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49392347]\n",
      "Inputs\n",
      "[ 7.55137191e-02  2.50105997e-01  2.50075712e-01  1.50992683e-01\n",
      "  2.12617529e-01  2.50105997e-01  2.50040607e-01  1.81334597e-05\n",
      "  6.99997845e-01  3.00033313e-01 -5.23535347e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396149]\n",
      "Inputs\n",
      "[ 7.55016773e-02  2.50012960e-01  2.50009257e-01  1.50999105e-01\n",
      "  2.12618559e-01  2.50012960e-01  2.50004964e-01  2.21679924e-06\n",
      "  6.99999737e-01  3.00004073e-01 -5.23591021e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397853]\n",
      "Inputs\n",
      "[ 7.55003385e-02  2.50002616e-01  2.50001868e-01  1.50999819e-01\n",
      "  2.12618674e-01  2.50002616e-01  2.50001001e-01  4.47177646e-07\n",
      "  6.99999947e-01  3.00000822e-01 -5.23597210e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398042]\n",
      "Inputs\n",
      "[ 7.55000700e-02  2.50000541e-01  2.50000386e-01  1.50999963e-01\n",
      "  2.12618697e-01  2.50000541e-01  2.50000207e-01  9.22296739e-08\n",
      "  6.99999989e-01  3.00000170e-01 -5.23598452e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939808]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398088]\n",
      "Inputs\n",
      "[ 7.55100147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397861]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50010113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398072]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50010081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398123]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50989992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398306]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12628702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397159]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50010113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397903]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50010043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398549]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.00190863e-05\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396979]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99989998e-01  3.00000036e-01 -5.23598708e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398562]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00010036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398088]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12618702e-01  2.50000113e-01  2.50000043e-01  1.90863410e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23588708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398088]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.0755      0.25        0.25        0.151       0.28605665  0.25\n",
      "  0.25        0.          0.7         0.3        -0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.43876279]\n",
      "Inputs\n",
      "[ 7.55000107e-02  2.50000083e-01  2.50000059e-01  1.50999994e-01\n",
      "  2.32343450e-01  2.50000083e-01  2.50000031e-01  1.39599274e-08\n",
      "  6.99999998e-01  3.00000026e-01 -5.23598726e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.47676004]\n",
      "Inputs\n",
      "[ 7.55000135e-02  2.50000104e-01  2.50000075e-01  1.50999993e-01\n",
      "  2.18283433e-01  2.50000104e-01  2.50000039e-01  1.76140912e-08\n",
      "  6.99999998e-01  3.00000033e-01 -5.23598713e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48881386]\n",
      "Inputs\n",
      "[ 7.55000143e-02  2.50000111e-01  2.50000079e-01  1.50999992e-01\n",
      "  2.14290093e-01  2.50000111e-01  2.50000042e-01  1.86519505e-08\n",
      "  6.99999998e-01  3.00000035e-01 -5.23598709e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49243606]\n",
      "Inputs\n",
      "[ 7.55000145e-02  2.50000112e-01  2.50000080e-01  1.50999992e-01\n",
      "  2.13121206e-01  2.50000112e-01  2.50000042e-01  1.89557415e-08\n",
      "  6.99999998e-01  3.00000035e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49351463]\n",
      "Inputs\n",
      "[ 7.55000146e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12774645e-01  2.50000113e-01  2.50000043e-01  1.90458118e-08\n",
      "  6.99999998e-01  3.00000035e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49383602]\n",
      "Inputs\n",
      "[ 7.55000146e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12662085e-01  2.50000113e-01  2.50000043e-01  1.90750659e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49394056]\n",
      "Inputs\n",
      "[ 7.55000146e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12631585e-01  2.50000113e-01  2.50000043e-01  1.90829927e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396891]\n",
      "Inputs\n",
      "[ 7.55000146e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12622548e-01  2.50000113e-01  2.50000043e-01  1.90853415e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397731]\n",
      "Inputs\n",
      "[ 7.55000146e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619849e-01  2.50000113e-01  2.50000043e-01  1.90860428e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397981]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398056]\n",
      "Inputs\n",
      "[ 7.55100147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397829]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50010113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939804]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50010081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398091]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50989992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398274]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12629044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397127]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50010113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49397871]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50010043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398517]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.00190863e-05\n",
      "  6.99999998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49396947]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99989998e-01  3.00000036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4939853]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00010036e-01 -5.23598708e-01]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398056]\n",
      "Inputs\n",
      "[ 7.55000147e-02  2.50000113e-01  2.50000081e-01  1.50999992e-01\n",
      "  2.12619044e-01  2.50000113e-01  2.50000043e-01  1.90862520e-08\n",
      "  6.99999998e-01  3.00000036e-01 -5.23588708e-01]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.49398056]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[ 0.08920307  0.25        0.36510331  0.0302      0.33642224  0.27026712\n",
      "  0.25        0.01631008  0.58095892  0.3        -0.23988061]\n",
      "Obj\n",
      "[0.52141014]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851976]\n",
      "Inputs\n",
      "[ 0.07719864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851721]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500101   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851957]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26419421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48852016]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13612386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851723]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22788526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851133]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25250761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851799]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25001004  0.0020099   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48852417]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020199   0.68533061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.4885099]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68534061  0.30000003 -0.48863624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851502]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30001003 -0.48863624]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851976]\n",
      "Inputs\n",
      "[ 0.07718864  0.2500001   0.26418421  0.13611386  0.22787526  0.25249761\n",
      "  0.25000004  0.0020099   0.68533061  0.30000003 -0.48862624]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.48851976]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655781]\n",
      "Inputs\n",
      "[0.07551    0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655042]\n",
      "Inputs\n",
      "[0.0755     0.51754098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655718]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67151691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.5065587]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.03021    0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50654222]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133518  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.50655421]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25001\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655676]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37377854 0.14699693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655937]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14700693 0.7        0.3        0.52359878]\n",
      "Obj\n",
      "[0.50655318]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.69999    0.3        0.52359878]\n",
      "Obj\n",
      "[0.50656222]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.30001    0.52359878]\n",
      "Obj\n",
      "[0.50655781]\n",
      "Inputs\n",
      "[0.0755     0.51753098 0.67150691 0.0302     0.2133418  0.25\n",
      " 0.37376854 0.14699693 0.7        0.3        0.52358878]\n",
      "Obj\n",
      "[0.50655781]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      2.         0.25       0.151      0.20049278 1.722782\n",
      " 1.5        0.38295111 0.3        0.52334251 0.52359878]\n",
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Obj\n",
      "[0.5393953]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132714]\n",
      "Inputs\n",
      "[0.11991661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132298]\n",
      "Inputs\n",
      "[0.11990661 0.80818747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132685]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58887809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132772]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05389353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132186]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21083267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.46132387]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53875729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132653]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59458262 0.19325709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132798]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19326709 0.62157772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132344]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62158772 0.34378757 0.52359878]\n",
      "Obj\n",
      "[0.46132253]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34379757 0.52359878]\n",
      "Obj\n",
      "[0.46132714]\n",
      "Inputs\n",
      "[0.11990661 0.80817747 0.58886809 0.05388353 0.21082267 0.53874729\n",
      " 0.59457262 0.19325709 0.62157772 0.34378757 0.52358878]\n",
      "Obj\n",
      "[0.46132714]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61556086]\n",
      "Inputs\n",
      "[0.27872452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61555955]\n",
      "Inputs\n",
      "[0.27871452 1.17700421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61556079]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25001    0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61556131]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732295  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61555951]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19704712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61555426]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246848\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61556028]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63917052 0.20900046 0.3        0.42316703 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.61556202]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20901046 0.3        0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61555328]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.30001    0.42316703 0.52359878]\n",
      "Obj\n",
      "[0.61554668]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42317703 0.52359878]\n",
      "Obj\n",
      "[0.61556086]\n",
      "Inputs\n",
      "[0.27871452 1.17699421 0.25       0.0732195  0.19703712 1.0246748\n",
      " 0.63916052 0.20900046 0.3        0.42316703 0.52358878]\n",
      "Obj\n",
      "[0.61556086]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56643496]\n",
      "Inputs\n",
      "[0.08820134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56642904]\n",
      "Inputs\n",
      "[0.08819134 0.87620065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56643479]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32185659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.5664357]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04034571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56642816]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12179634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56642416]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71682863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.56643458]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556895  0.08276439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.5664367]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08277439 0.56530175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.5664253]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56531175 0.49438955 0.52359878]\n",
      "Obj\n",
      "[0.56642839]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49439955 0.52359878]\n",
      "Obj\n",
      "[0.56643496]\n",
      "Inputs\n",
      "[0.08819134 0.87619065 0.32184659 0.04033571 0.12178634 0.71681863\n",
      " 0.2556795  0.08276439 0.56530175 0.49438955 0.52358878]\n",
      "Obj\n",
      "[0.56643496]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.4670078]\n",
      "Inputs\n",
      "[0.18210029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700477]\n",
      "Inputs\n",
      "[0.18209029 0.72746098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700761]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29931836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700855]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03072779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700477]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30655379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700276]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64905924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700695]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44160514 0.06189824 0.54107809 0.44979741 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.46700983]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06190824 0.54107809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700185]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54108809 0.44979741 0.52359878]\n",
      "Obj\n",
      "[0.46700197]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44980741 0.52359878]\n",
      "Obj\n",
      "[0.4670078]\n",
      "Inputs\n",
      "[0.18209029 0.72745098 0.29930836 0.03071779 0.30654379 0.64904924\n",
      " 0.44159514 0.06189824 0.54107809 0.44979741 0.52358878]\n",
      "Obj\n",
      "[0.4670078]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245923]\n",
      "Inputs\n",
      "[0.24898568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245776]\n",
      "Inputs\n",
      "[0.24897568 0.63876562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245911]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25001    0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245969]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.03021    0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245804]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31221138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245509]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60706067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245802]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70440701 0.08005299 0.7        0.41048515 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.41246085]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08006299 0.7        0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41245229]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.69999    0.41048515 0.52359878]\n",
      "Obj\n",
      "[0.41246331]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41049515 0.52359878]\n",
      "Obj\n",
      "[0.41245923]\n",
      "Inputs\n",
      "[0.24897568 0.63875562 0.25       0.0302     0.31220138 0.60705067\n",
      " 0.70439701 0.08005299 0.7        0.41048515 0.52358878]\n",
      "Obj\n",
      "[0.41245923]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.19832293 0.57815648 0.25       0.0302     0.38220641 0.65521329\n",
      " 0.44477467 0.04532284 0.53872478 0.4403131  0.52359878]\n",
      "Obj\n",
      "[0.43853859]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.4155992]\n",
      "Inputs\n",
      "[0.2414632  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559761]\n",
      "Inputs\n",
      "[0.2414532  0.62976599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559908]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25001    0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559971]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.03021    0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559788]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32260789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559501]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61421334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.41559802]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66585026 0.07489519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41560093]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07490519 0.67604887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559239]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67605887 0.41491492 0.52359878]\n",
      "Obj\n",
      "[0.41559495]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41492492 0.52359878]\n",
      "Obj\n",
      "[0.4155992]\n",
      "Inputs\n",
      "[0.2414532  0.62975599 0.25       0.0302     0.32259789 0.61420334\n",
      " 0.66584026 0.07489519 0.67604887 0.41491492 0.52358878]\n",
      "Obj\n",
      "[0.4155992]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.23473392 0.59890015 0.25       0.0302     0.29737742 0.55449513\n",
      " 0.4353129  0.06191108 0.55665957 0.40330608 0.43831283]\n",
      "Obj\n",
      "[0.4566455]\n",
      "Inputs\n",
      "[0.24078127 0.62667041 0.25       0.0302     0.32007584 0.60823252\n",
      " 0.64278752 0.07359677 0.66410994 0.41375404 0.51507018]\n",
      "Obj\n",
      "[0.41951126]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711634]\n",
      "Inputs\n",
      "[0.24120187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711474]\n",
      "Inputs\n",
      "[0.24119187 0.62856595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711622]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25001    0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711685]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.03021    0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.417115]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32162702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.4171121]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61189119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711516]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65688465 0.07439021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711809]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07440021 0.67140561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41710952]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67141561 0.41446343 0.52028186]\n",
      "Obj\n",
      "[0.41711204]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41447343 0.52028186]\n",
      "Obj\n",
      "[0.41711634]\n",
      "Inputs\n",
      "[0.24119187 0.62855595 0.25       0.0302     0.32161702 0.61188119\n",
      " 0.65687465 0.07439021 0.67140561 0.41446343 0.52029186]\n",
      "Obj\n",
      "[0.41711634]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.23454158 0.56282447 0.25       0.0302     0.41494699 0.62562555\n",
      " 0.43993778 0.08062957 0.43897496 0.42777432 0.42562667]\n",
      "Obj\n",
      "[0.46469549]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690845]\n",
      "Inputs\n",
      "[0.23876022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.4269066]\n",
      "Inputs\n",
      "[0.23875022 0.60443265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.4269083]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25001    0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690906]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.03021    0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690685]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558931  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690454]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61693743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48552922]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.4269074]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57723632 0.07668099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42691026]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07669099 0.58606874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690281]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58607874 0.41935052 0.48552922]\n",
      "Obj\n",
      "[0.42690352]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41936052 0.48552922]\n",
      "Obj\n",
      "[0.42690845]\n",
      "Inputs\n",
      "[0.23875022 0.60442265 0.25       0.0302     0.3558831  0.61692743\n",
      " 0.57722632 0.07668099 0.58606874 0.41935052 0.48553922]\n",
      "Obj\n",
      "[0.42690845]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.23160531 0.66362959 0.31989031 0.0302     0.40604651 0.65751575\n",
      " 0.50509792 0.06845126 0.49399005 0.44766708 0.50987495]\n",
      "Obj\n",
      "[0.45113974]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43212163]\n",
      "Inputs\n",
      "[0.23682904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43211965]\n",
      "Inputs\n",
      "[0.23681904 0.62043551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43212146]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26890044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43212229]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.03021    0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.4321198]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36945162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.4321178]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62790792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49210955]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.43212062]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55774095 0.0744566  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43212347]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744666  0.56118107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43211623]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56119107 0.42700412 0.49210955]\n",
      "Obj\n",
      "[0.43211643]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42701412 0.49210955]\n",
      "Obj\n",
      "[0.43212163]\n",
      "Inputs\n",
      "[0.23681904 0.62042551 0.26889044 0.0302     0.36944162 0.62789792\n",
      " 0.55773095 0.0744566  0.56118107 0.42700412 0.49211955]\n",
      "Obj\n",
      "[0.43212163]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.23683003 0.6832778  0.33903772 0.0302     0.41868417 0.66071744\n",
      " 0.53769528 0.06874361 0.49591594 0.45227566 0.52359878]\n",
      "Obj\n",
      "[0.45105008]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.4371742]\n",
      "Inputs\n",
      "[0.2368325  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43717208]\n",
      "Inputs\n",
      "[0.2368225  0.64017776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43717401]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29093409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43717492]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.03021    0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.4371721]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38491897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43717055]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63821671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50200049]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.43717322]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55144764 0.07266212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43717602]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07267212 0.54068093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43716906]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54069093 0.43494205 0.50200049]\n",
      "Obj\n",
      "[0.43716877]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43495205 0.50200049]\n",
      "Obj\n",
      "[0.4371742]\n",
      "Inputs\n",
      "[0.2368225  0.64016776 0.29092409 0.0302     0.38490897 0.63820671\n",
      " 0.55143764 0.07266212 0.54068093 0.43494205 0.50201049]\n",
      "Obj\n",
      "[0.4371742]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.4531754]\n",
      "Inputs\n",
      "[0.24895315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317315]\n",
      "Inputs\n",
      "[0.24894315 0.62318443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317514]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33602019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317625]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.03021    0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317285]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42388379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317213]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63278775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317444]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544863   0.07989679 0.48491799 0.43892162 0.47960356]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.45317721]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07990679 0.48491799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45317078]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48492799 0.43892162 0.47960356]\n",
      "Obj\n",
      "[0.45316919]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43893162 0.47960356]\n",
      "Obj\n",
      "[0.4531754]\n",
      "Inputs\n",
      "[0.24894315 0.62317443 0.33601019 0.0302     0.42387379 0.63277775\n",
      " 0.544853   0.07989679 0.48491799 0.43892162 0.47961356]\n",
      "Obj\n",
      "[0.4531754]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333771]\n",
      "Inputs\n",
      "[0.24647059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333548]\n",
      "Inputs\n",
      "[0.24646059 0.60752497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333746]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32946323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333856]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.03021    0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333519]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43506437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333457]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64638005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333675]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56676347 0.07384839 0.50500126 0.44265557 0.50043528]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.44333949]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07385839 0.50500126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333306]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50501126 0.44265557 0.50043528]\n",
      "Obj\n",
      "[0.44333187]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44266557 0.50043528]\n",
      "Obj\n",
      "[0.44333771]\n",
      "Inputs\n",
      "[0.24646059 0.60751497 0.32945323 0.0302     0.43505437 0.64637005\n",
      " 0.56675347 0.07384839 0.50500126 0.44265557 0.50044528]\n",
      "Obj\n",
      "[0.44333771]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033725]\n",
      "Inputs\n",
      "[0.25793942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033508]\n",
      "Inputs\n",
      "[0.25792942 0.60224224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033697]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35817505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033813]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.03021    0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.4503346]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451808  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033414]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63298882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033624]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57550466 0.07648477 0.49090869 0.4410172  0.48989301]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.45033908]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07649477 0.49090869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.4503325]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49091869 0.4410172  0.48989301]\n",
      "Obj\n",
      "[0.45033114]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410272  0.48989301]\n",
      "Obj\n",
      "[0.45033725]\n",
      "Inputs\n",
      "[0.25792942 0.60223224 0.35816505 0.0302     0.4451708  0.63297882\n",
      " 0.57549466 0.07648477 0.49090869 0.4410172  0.48990301]\n",
      "Obj\n",
      "[0.45033725]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876551]\n",
      "Inputs\n",
      "[0.26887074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876342]\n",
      "Inputs\n",
      "[0.26886074 0.59948009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876519]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39817894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876641]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.03021    0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876269]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46772108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876257]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63924728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876444]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61939635 0.07452185 0.49814576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876736]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07453185 0.49814576 0.44715374 0.5080541 ]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.44876048]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49815576 0.44715374 0.5080541 ]\n",
      "Obj\n",
      "[0.44875948]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44716374 0.5080541 ]\n",
      "Obj\n",
      "[0.44876551]\n",
      "Inputs\n",
      "[0.26886074 0.59947009 0.39816894 0.0302     0.46771108 0.63923728\n",
      " 0.61938635 0.07452185 0.49814576 0.44715374 0.5080641 ]\n",
      "Obj\n",
      "[0.44876551]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742656]\n",
      "Inputs\n",
      "[0.29831013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742464]\n",
      "Inputs\n",
      "[0.29830013 0.55902642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742614]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47522473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742754]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.03021    0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.4474233]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51647261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742401]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64028812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742538]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71637606 0.07811248 0.50861128 0.45170907 0.52161708]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.44742833]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07812248 0.50861128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742125]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50862128 0.45170907 0.52161708]\n",
      "Obj\n",
      "[0.44742065]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45171907 0.52161708]\n",
      "Obj\n",
      "[0.44742656]\n",
      "Inputs\n",
      "[0.29830013 0.55901642 0.47521473 0.0302     0.51646261 0.64027812\n",
      " 0.71636606 0.07811248 0.50861128 0.45170907 0.52162708]\n",
      "Obj\n",
      "[0.44742656]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538607]\n",
      "Inputs\n",
      "[0.30148656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538416]\n",
      "Inputs\n",
      "[0.30147656 0.5694645  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538563]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504021   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538704]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.03021    0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538265]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52549158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538368]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358217\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538486]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76147417 0.08778434 0.51653569 0.45816371 0.52359878]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Obj\n",
      "[0.44538773]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08779434 0.51653569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538077]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51654569 0.45816371 0.52359878]\n",
      "Obj\n",
      "[0.44538026]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45817371 0.52359878]\n",
      "Obj\n",
      "[0.44538607]\n",
      "Inputs\n",
      "[0.30147656 0.5694545  0.504011   0.0302     0.52548158 0.6358117\n",
      " 0.76146417 0.08778434 0.51653569 0.45816371 0.52358878]\n",
      "Obj\n",
      "[0.44538607]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Inputs\n",
      "[0.302      0.56033758 0.51918591 0.03240122 0.53638104 0.62106172\n",
      " 0.78989454 0.09607661 0.5175147  0.46143169 0.52359878]\n",
      "Obj\n",
      "[0.44537351]\n",
      "Optimization terminated successfully    (Exit mode 0)\n",
      "            Current function value: 0.4453735100936481\n",
      "            Iterations: 69\n",
      "            Function evaluations: 1101\n",
      "            Gradient evaluations: 68\n",
      "Lift-rotor Optimization Simulation Time: 1.57 mins\n",
      "[0.302      0.56033758 0.51918591 0.03240122 0.53638104 0.62106172\n",
      " 0.78989454 0.09607661 0.5175147  0.46143169 0.52359878]\n",
      "Converged MTOW = 2492 kg\n",
      "<data object 'RCAIDE.Framework.Core.Data'>\n",
      "empty : \n",
      "  structural : \n",
      "    booms : 232.4178566583501\n",
      "    fusleage : 158.51913057602562\n",
      "    landing_gear : 54.8267145999174\n",
      "    wings : 258.26573588472667\n",
      "    total : 640.0267615627452\n",
      "  propulsion : \n",
      "    motors : 382.9227379109704\n",
      "    rotors : 95.65895747435607\n",
      "    hubs : 52.800000000000004\n",
      "    servos : 8.580000000000002\n",
      "    wiring : 94.9385366162393\n",
      "    battery : 839.7312\n",
      "    TMS : 0.0\n",
      "    total : 1340.5740290923325\n",
      "  systems : \n",
      "    environmental_control_system : 38.5\n",
      "    avionics : 18.700000000000003\n",
      "    seats : 82.5\n",
      "    balistic_recovery_system : 35.2\n",
      "    total : 159.0\n",
      "  total : 2139.6007906550776\n",
      "payload : \n",
      "  total : 352.0\n",
      "  passengers : 350.0\n",
      "  payload : 2.0\n",
      "zero_fuel_weight : 2491.6007906550776\n",
      "fuel : 0\n",
      "total : 2491.6007906550776\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Warning: pitch commanded for a fixed-pitch rotor. Changing to variable pitch rotor for weights analysis.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n",
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rotor BEVW did not converge to a solution (Stall)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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VMXISuw0jDHGGGOMsePetm3bBtz28ssvw2q1YuvWrWHHNzY2wuVy4ZxzzhmDhGL8fj/mz5+PWbNmQZKkUZtnrNfE6/Vi5syZuOCCC3D48OExmZOxscKbIIwxxhhjjLExM2fOHDQ0NCjyrI/+vvjiC9x444148803sXHjRuo4UfXb3/4Wr776KqqqqnD22WdTx2EsaviaIIwxxhhjjLHjRrjrX+zduxcxMTHYu3cvPv/8c1x66aWYNGkSZs6ciS1btsDv9wMA3n77bVx44YWYOHEizjrrLPz5z38OO4csy/j73/+OFStWIDk5GZMmTcLy5cvx97//fVhZ33rrLcTExOAnP/nJoPfD7XbjqaeewllnnYWJEyfi4osvxjfffAMAsFqtePDBBzFjxgxMmDABl19+OXJzc4e9JocOHcIVV1yBSZMm4dRTT8Wdd96Jzs7OAcc5cuQIrrvuOsyYMQMJCQk444wzsHLlSrzxxhsDxt56662QZRlvv/32sNaEseMdb4IwxhhjjDHGFOGf//wnbr31VsybNw+//OUvkZSUhD/96U/44x//iD//+c/YtGkTLrzwQtx///3w+/147LHH8M4774QcQ5Zl/OxnP8O9994Lk8mE22+/HRs3boTT6cS9996L//mf/4koiyzLOHLkCBYtWoSpU6cOOu6nP/0pPvzwQ/zwhz/E7bffjrKyMtx4443Iz8/H9773PUiShFtuuQU33XQTcnNzce2118JqtUa8Jp999hl+8IMfYMaMGfj1r3+N+fPn45133sGPfvSjkHFffPEFrr76aqjVaqxbtw6PPvoofvjDH8LtduPdd98dcNyLL74Y8fHx+PbbbyPOwpgiyIwxxhhjjDE2RmbPni0f6z9DVq9ePeDnb731lgxAjo+Pl3Nzc4O322w2+fTTT5cnTZokp6amyrW1tcGfNTY2yuPHj5eXLFkScqw33nhDBiDffffdcm9vb/B2t9st/+AHP5AByBqNZsj7UVZWJgOQf/aznx3zflx55ZWyw+EI3v7hhx/KAOQpU6bIt9xyi+zxeII/27FjhwxAfumllyJek3HjxskqlSp4u9frla+66ioZgJydnR28/aabbpIByFqtdkDWjo6OsPfhoosukuPj4+Wenp5jrARjysJngjDGGGOMMcYU4ec//znS0tKCf588eTJuvPFGuFwu/OpXv8K8efOCP5s1axauvPJKlJeXw+v1Bm//29/+hsTEROzevRvx8fHB28ePH49nn30WALB///4hszQ3NwMAzjjjjGOOe/bZZ5GYmBj8+80334z4+HhYLBbs3LkT48b99ws7N2zYAAAoKioacv6A22+/HStWrAj+PS4uDnfeeScAIC8vb8D4iRMnDrjt1FNPDXvsM844Ax6PB+3t7RHnYex4x1+RyxhjjDHGGFOEpUuXDrht+vTpx/yZz+dDW1sbZs6cCZfLhZKSEsyYMQM7duwYMN7j8QAAKisrh8wSuObGlClThpU5NjYWp59+OlwuF84666yw98VgMAw5f8DFF1884LYzzzwTAGCxWIK33XbbbThw4AAuu+wy3H777bj66quxcuVKnHbaaYMe+5RTTgEAdHR0YNasWRFnYux4xpsgjDHGGGOMMUVITk4ecFvgTIpj/SywudHV1QVZltHS0oKnn3560HmcTueQWQJnVPT09IwocyR5I3Gs4/h8vuBtt9xyC/71r3/hL3/5C1577TXs3r0bMTExWLNmDV566aWwm0jd3d0AgEmTJkWch7HjHX8chjHGGGOMMXZSCGwYXHzxxZBledA/R44cGfJY06ZNAwCYzeZRzRxNP/rRj3D06FF0dXXhq6++wsaNG5Geno5rr7025KyRgMB9C9xXxk4EvAnCGGOMMcYYOylMnjwZ5557LioqKsL+R/9wnHfeeYiNjYVOp4tOuDE0efJkXHvttXjjjTdw1113oa2tDWq1esA4nU6HmTNnBj8Ww9iJgDdBGGOMMcYYYyeNTZs2weVy4b777gv7sZf6+nro9fohjzNlyhRccMEF0Gg08Pv9o5A0uiRJCvl4TEDgoqcTJkwIub2xsRFGoxGrVq0ak3yMjRW+JghjjDHGGGPspPHAAw8gJycHb7/9NjIzM3HNNddgxowZaGtrQ2VlJdRqNfbt24c5c+YMeaz169dj69atyMnJwRVXXDH64QVs2rQJBoMBV155JebMmYOYmBioVCrk5ubisssuw5VXXhky/vDhwwCAH//4xwRpGRs9fCYIY4wxxhhj7KQRExODvXv34sMPP8R5552Hf//73/jLX/6Cw4cPY8KECdi5cyeuueaaiI61ceNGjBs3Du+9994opxb35JNPYs2aNSguLsbrr7+O//u//4Pb7caOHTtw+PBhxMXFhYx/7733cPrpp2P9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",
      "text/plain": [
       "<Figure size 1100x700 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1100x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# vehicle data  \n",
    "vehicle  = vehicle_setup()\n",
    "\n",
    "# Set up configs\n",
    "configs  = configs_setup(vehicle)\n",
    "\n",
    "# vehicle analyses\n",
    "analyses = analyses_setup(configs)\n",
    "\n",
    "# mission analyses\n",
    "mission  = mission_setup(analyses) \n",
    "missions = missions_setup(mission) \n",
    "    \n",
    "results = missions.base_mission.evaluate() \n",
    "    \n",
    "# plot the results \n",
    "plot_results(results)    \n",
    "\n",
    "## plot vehicle \n",
    "#plot_3d_vehicle(vehicle, \n",
    "                #min_x_axis_limit            = -5,\n",
    "                #max_x_axis_limit            = 15,\n",
    "                #min_y_axis_limit            = -10,\n",
    "                #max_y_axis_limit            = 10,\n",
    "                #min_z_axis_limit            = -10,\n",
    "                #max_z_axis_limit            = 10,\n",
    "                #show_figure                 = False \n",
    "                #)     "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "rcaide",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
